{
  "Example": "Input\nCopy\n4 2\n2 3 2 3\nOutput\nCopy\n160\n\nInput\nCopy\n5 2\n1 2 3 4 5\nOutput\nCopy\n645\n\n",
  "Note": "NotePossible partitions in the first sample:  {{1,\u20092,\u20093},\u2009{4}}, W(R)\u2009=\u20093\u00b7(w1\u2009+\u2009w2\u2009+\u2009w3)\u2009+\u20091\u00b7w4\u2009=\u200924;  {{1,\u20092,\u20094},\u2009{3}}, W(R)\u2009=\u200926;  {{1,\u20093,\u20094},\u2009{2}}, W(R)\u2009=\u200924;  {{1,\u20092},\u2009{3,\u20094}}, W(R)\u2009=\u20092\u00b7(w1\u2009+\u2009w2)\u2009+\u20092\u00b7(w3\u2009+\u2009w4)\u2009=\u200920;  {{1,\u20093},\u2009{2,\u20094}}, W(R)\u2009=\u200920;  {{1,\u20094},\u2009{2,\u20093}}, W(R)\u2009=\u200920;  {{1},\u2009{2,\u20093,\u20094}}, W(R)\u2009=\u200926; Possible partitions in the second sample:  {{1,\u20092,\u20093,\u20094},\u2009{5}}, W(R)\u2009=\u200945;  {{1,\u20092,\u20093,\u20095},\u2009{4}}, W(R)\u2009=\u200948;  {{1,\u20092,\u20094,\u20095},\u2009{3}}, W(R)\u2009=\u200951;  {{1,\u20093,\u20094,\u20095},\u2009{2}}, W(R)\u2009=\u200954;  {{2,\u20093,\u20094,\u20095},\u2009{1}}, W(R)\u2009=\u200957;  {{1,\u20092,\u20093},\u2009{4,\u20095}}, W(R)\u2009=\u200936;  {{1,\u20092,\u20094},\u2009{3,\u20095}}, W(R)\u2009=\u200937;  {{1,\u20092,\u20095},\u2009{3,\u20094}}, W(R)\u2009=\u200938;  {{1,\u20093,\u20094},\u2009{2,\u20095}}, W(R)\u2009=\u200938;  {{1,\u20093,\u20095},\u2009{2,\u20094}}, W(R)\u2009=\u200939;  {{1,\u20094,\u20095},\u2009{2,\u20093}}, W(R)\u2009=\u200940;  {{2,\u20093,\u20094},\u2009{1,\u20095}}, W(R)\u2009=\u200939;  {{2,\u20093,\u20095},\u2009{1,\u20094}}, W(R)\u2009=\u200940;  {{2,\u20094,\u20095},\u2009{1,\u20093}}, W(R)\u2009=\u200941;  {{3,\u20094,\u20095},\u2009{1,\u20092}}, W(R)\u2009=\u200942. ",
  "Input Description": "The first line contains two integers n and k (1\u2009\u2264\u2009k\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7105) \u2014 the number of elements and the number of subsets in each partition, respectively.The second line contains n integers wi (1\u2009\u2264\u2009wi\u2009\u2264\u2009109)\u2014 weights of elements of the set.",
  "Output Description": "Print one integer \u2014 the sum of weights of all partitions of a given set into k non-empty subsets, taken modulo 109\u2009+\u20097.",
  "Time Limit": "2 seconds",
  "Description": "You are given a set of n elements indexed from 1 to n. The weight of i-th element is wi. The weight of some subset of a given set is denoted as . The weight of some partition R of a given set into k subsets is  (recall that a partition of a given set is a set of its subsets such that every element of the given set belongs to exactly one subset in partition).Calculate the sum of weights of all partitions of a given set into exactly k non-empty subsets, and print it modulo 109\u2009+\u20097. Two partitions are considered different iff there exist two elements x and y such that they belong to the same set in one of the partitions, and to different sets in another partition.",
  "Title": "G. Partitions",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n4\n1 3 2 1\nOutput\nCopy\n2\n\nInput\nCopy\n6\n2 2 2 2 2 2\nOutput\nCopy\n3\n\n",
  "Note": "NoteIn the first example Polycarp will celebrate the equator on the evening of the second day, because up to this day (inclusive) he will solve 4 out of 7 scheduled problems on four days of the training.In the second example Polycarp will celebrate the equator on the evening of the third day, because up to this day (inclusive) he will solve 6 out of 12 scheduled problems on six days of the training.",
  "Input Description": "The first line contains a single integer n (1\u2264n\u2264200000) \u2014 the number of days to prepare for the programming contests.The second line contains a sequence a1,a2,\u2026,an (1\u2264ai\u226410000), where ai equals to the number of problems, which Polycarp will solve on the i-th day.",
  "Output Description": "Print the index of the day when Polycarp will celebrate the equator.",
  "Time Limit": "2 seconds",
  "Description": "Polycarp has created his own training plan to prepare for the programming contests. He will train for n days, all days are numbered from 1 to n, beginning from the first.On the i-th day Polycarp will necessarily solve ai problems. One evening Polycarp plans to celebrate the equator. He will celebrate it on the first evening of such a day that from the beginning of the training and to this day inclusive he will solve half or more of all the problems.Determine the index of day when Polycarp will celebrate the equator.",
  "Title": "A. Equator",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n5 1 1\n*...*\nOutput\nCopy\n2\n\nInput\nCopy\n6 2 3\n*...*.\nOutput\nCopy\n4\n\nInput\nCopy\n11 3 10\n.*....**.*.\nOutput\nCopy\n7\n\nInput\nCopy\n3 2 3\n***\nOutput\nCopy\n0\n\n",
  "Note": "NoteIn the first example you can put all student, for example, in the following way: *.AB*In the second example you can put four students, for example, in the following way: *BAB*BIn the third example you can put seven students, for example, in the following way: B*ABAB**A*BThe letter A means a student-programmer, and the letter B \u2014 student-athlete.",
  "Input Description": "The first line contain three integers nn, aa and bb (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105, 0\u2264a,b\u22642\u22c51050\u2264a,b\u22642\u22c5105, a+b>0a+b>0) \u2014 total number of seat places in the railway carriage, the number of student-programmers and the number of student-athletes.The second line contains a string with length nn, consisting of characters \".\" and \"*\". The dot means that the corresponding place is empty. The asterisk means that the corresponding place is occupied by the jury member.",
  "Output Description": "Print the largest number of students, which you can put in the railway carriage so that no student-programmer is sitting next to a student-programmer and no student-athlete is sitting next to a student-athlete.",
  "Time Limit": "2 seconds",
  "Description": "There are nn consecutive seat places in a railway carriage. Each place is either empty or occupied by a passenger.The university team for the Olympiad consists of aa student-programmers and bb student-athletes. Determine the largest number of students from all a+ba+b students, which you can put in the railway carriage so that:  no student-programmer is sitting next to the student-programmer;  and no student-athlete is sitting next to the student-athlete. In the other words, there should not be two consecutive (adjacent) places where two student-athletes or two student-programmers are sitting.Consider that initially occupied seat places are occupied by jury members (who obviously are not students at all).",
  "Title": "B. Students in Railway Carriage",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n8314\nOutput\nCopy\n2\n\nInput\nCopy\n625\nOutput\nCopy\n0\n\nInput\nCopy\n333\nOutput\nCopy\n-1\n\n",
  "Note": "NoteIn the first example we should delete from 83148314 the digits 33 and 44. After that 83148314 become equals to 8181, which is the square of the integer 99.In the second example the given 625625 is the square of the integer 2525, so you should not delete anything. In the third example it is impossible to make the square from 333333, so the answer is -1.",
  "Input Description": "The first line contains a single integer nn (1\u2264n\u22642\u22c51091\u2264n\u22642\u22c5109). The number is given without leading zeroes.",
  "Output Description": "If it is impossible to make the square of some positive integer from nn, print -1. In the other case, print the minimal number of operations required to do it.",
  "Time Limit": "2 seconds",
  "Description": "You are given a positive integer nn, written without leading zeroes (for example, the number 04 is incorrect). In one operation you can delete any digit of the given integer so that the result remains a positive integer without leading zeros.Determine the minimum number of operations that you need to consistently apply to the given integer nn to make from it the square of some positive integer or report that it is impossible.An integer xx is the square of some positive integer if and only if x=y2x=y2 for some positive integer yy.",
  "Title": "C. Make a Square",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n7\n3 4 1 2 2 1 1\nOutput\nCopy\n4\n3 8 2 1 \n\nInput\nCopy\n5\n1 1 3 1 1\nOutput\nCopy\n2\n3 4 \n\nInput\nCopy\n5\n10 40 20 50 30\nOutput\nCopy\n5\n10 40 20 50 30 \n\n",
  "Note": "NoteThe first two examples were considered in the statement.In the third example all integers in the given array are distinct, so it will not change.",
  "Input Description": "The first line contains a single integer nn (2\u2264n\u22641500002\u2264n\u2264150000) \u2014 the number of elements in the array.The second line contains a sequence from nn elements a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109) \u2014 the elements of the array.",
  "Output Description": "In the first line print an integer kk \u2014 the number of elements in the array after all the performed operations. In the second line print kk integers \u2014 the elements of the array after all the performed operations.",
  "Time Limit": "2 seconds",
  "Description": "You are given an array of positive integers. While there are at least two equal elements, we will perform the following operation. We choose the smallest value xx that occurs in the array 22 or more times. Take the first two occurrences of xx in this array (the two leftmost occurrences). Remove the left of these two occurrences, and the right one is replaced by the sum of this two values (that is, 2\u22c5x2\u22c5x).Determine how the array will look after described operations are performed.For example, consider the given array looks like [3,4,1,2,2,1,1][3,4,1,2,2,1,1]. It will be changed in the following way: [3,4,1,2,2,1,1]\u00a0\u2192\u00a0[3,4,2,2,2,1]\u00a0\u2192\u00a0[3,4,4,2,1]\u00a0\u2192\u00a0[3,8,2,1][3,4,1,2,2,1,1]\u00a0\u2192\u00a0[3,4,2,2,2,1]\u00a0\u2192\u00a0[3,4,4,2,1]\u00a0\u2192\u00a0[3,8,2,1].If the given array is look like [1,1,3,1,1][1,1,3,1,1] it will be changed in the following way: [1,1,3,1,1]\u00a0\u2192\u00a0[2,3,1,1]\u00a0\u2192\u00a0[2,3,2]\u00a0\u2192\u00a0[3,4][1,1,3,1,1]\u00a0\u2192\u00a0[2,3,1,1]\u00a0\u2192\u00a0[2,3,2]\u00a0\u2192\u00a0[3,4].",
  "Title": "D. Merge Equals",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n4\n-5 R\n0 P\n3 P\n7 B\nOutput\nCopy\n12\n\nInput\nCopy\n5\n10 R\n14 B\n16 B\n21 R\n32 R\nOutput\nCopy\n24\n\n",
  "Note": "NoteIn the first example, you should connect the first city with the second, the second with the third, and the third with the fourth. The total length of the cables will be 5+3+4=125+3+4=12.In the second example there are no disputed cities, so you need to connect all the neighboring cities of Byteland and all the neighboring cities of Berland. The cities of Berland have coordinates 10,21,3210,21,32, so to connect them you need two cables of length 1111 and 1111. The cities of Byteland have coordinates 1414 and 1616, so to connect them you need one cable of length 22. Thus, the total length of all cables is 11+11+2=2411+11+2=24.",
  "Input Description": "The first line contains a single integer nn (2\u2264n\u22642\u22c51052\u2264n\u22642\u22c5105) \u2014 the number of cities.The following nn lines contains an integer xixi and the letter cici (\u2212109\u2264xi\u2264109\u2212109\u2264xi\u2264109) \u2014 the coordinate of the city and its type. If the city belongs to Byteland, cici equals to 'B'. If the city belongs to Berland, cici equals to \u00abR\u00bb. If the city is disputed, cici equals to 'P'. All cities have distinct coordinates. Guaranteed, that the cities are given in the increasing order of their coordinates.",
  "Output Description": "Print the minimal total length of such set of cables, that if we delete all Berland cities (cici='R'), it will be possible to find a way from any remaining city to any other remaining city, moving only by cables. Similarly, if we delete all Byteland cities (cici='B'), it will be possible to find a way from any remaining city to any other remaining city, moving only by cables.",
  "Time Limit": "2 seconds",
  "Description": "The cities of Byteland and Berland are located on the axis OxOx. In addition, on this axis there are also disputed cities, which belong to each of the countries in their opinion. Thus, on the line OxOx there are three types of cities:  the cities of Byteland,  the cities of Berland,  disputed cities. Recently, the project BNET has been launched \u2014 a computer network of a new generation. Now the task of the both countries is to connect the cities so that the network of this country is connected.The countries agreed to connect the pairs of cities with BNET cables in such a way that:  If you look at the only cities of Byteland and the disputed cities, then in the resulting set of cities, any city should be reachable from any other one by one or more cables,  If you look at the only cities of Berland and the disputed cities, then in the resulting set of cities, any city should be reachable from any other one by one or more cables. Thus, it is necessary to choose a set of pairs of cities to connect by cables in such a way that both conditions are satisfied simultaneously. Cables allow bi-directional data transfer. Each cable connects exactly two distinct cities.The cost of laying a cable from one city to another is equal to the distance between them. Find the minimum total cost of laying a set of cables so that two subsets of cities (Byteland and disputed cities, Berland and disputed cities) are connected.Each city is a point on the line OxOx. It is technically possible to connect the cities aa and bb with a cable so that the city cc (a<c<ba<c<b) is not connected to this cable, where aa, bb and cc are simultaneously coordinates of the cities aa, bb and cc.",
  "Title": "E. Byteland, Berland and Disputed Cities",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n3 3\n1 2\n2 3\n3 1\nOutput\nCopy\n3\n1 2 3 \n\nInput\nCopy\n6 7\n2 3\n3 4\n4 2\n1 2\n1 5\n5 6\n6 1\nOutput\nCopy\n6\n1 2 3 5 6 7 \n\nInput\nCopy\n5 6\n1 2\n2 3\n2 4\n4 3\n2 5\n5 3\nOutput\nCopy\n0\n\n",
  "Note": "",
  "Input Description": "The first line contain two integers nn and mm (1\u2264n\u2264100000(1\u2264n\u2264100000, 0\u2264m\u2264min(n\u22c5(n\u22121)/2,100000))0\u2264m\u2264min(n\u22c5(n\u22121)/2,100000)) \u2014 the number of vertices and the number of edges.Each of the following mm lines contain two integers uu and vv (1\u2264u,v\u2264n1\u2264u,v\u2264n, u\u2260vu\u2260v) \u2014 the description of the edges.",
  "Output Description": "In the first line print the number of edges, which belong to exactly one simple cycle.In the second line print the indices of edges, which belong to exactly one simple cycle, in increasing order. The edges are numbered from one in the same order as they are given in the input.",
  "Time Limit": "2 seconds",
  "Description": "You are given an undirected graph, consisting of nn vertices and mm edges. The graph does not necessarily connected. Guaranteed, that the graph does not contain multiple edges (more than one edges between a pair of vertices) or loops (edges from a vertex to itself).A cycle in a graph is called a simple, if it contains each own vertex exactly once. So simple cycle doesn't allow to visit a vertex more than once in a cycle.Determine the edges, which belong to exactly on one simple cycle.",
  "Title": "F. Simple Cycles Edges",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n5 7 16 3\n16\n0 0\n18 0\n18 6\n16 6\n16 1\n10 1\n10 4\n7 4\n7 2\n2 2\n2 6\n12 6\n12 12\n10 12\n10 8\n0 8\nOutput\nCopy\n2\n\n",
  "Note": "NoteThe example corresponds to the picture above.",
  "Input Description": "The first line contain four integers x1,y1,x2,y2x1,y1,x2,y2 (x1<x2x1<x2, y2<y1y2<y1) \u2014 the coordinates of top-left and bottom-right corners of the rectangular window. The second line contains a single integer nn (4\u2264n\u2264150004\u2264n\u226415000) \u2014 the number of vertices in Petya's polygon.Each of the following nn lines contains two integers \u2014 the coordinates of vertices of the Petya's polygon in counterclockwise order. Guaranteed, that the given polygon satisfies the conditions described in the statement.All coordinates of the rectangular window and all coordinates of the vertices of the polygon are non-negative and do not exceed 1500015000.",
  "Output Description": "Print the number of black connected areas of Petya's polygon, which can be seen through the rectangular window.",
  "Time Limit": "1 second",
  "Description": "Petya has a polygon consisting of nn vertices. All sides of the Petya's polygon are parallel to the coordinate axes, and each two adjacent sides of the Petya's polygon are perpendicular. It is guaranteed that the polygon is simple, that is, it doesn't have self-intersections and self-touches. All internal area of the polygon (borders are not included) was painted in black color by Petya.Also, Petya has a rectangular window, defined by its coordinates, through which he looks at the polygon. A rectangular window can not be moved. The sides of the rectangular window are parallel to the coordinate axes.  Blue color represents the border of a polygon, red color is the Petya's window. The answer in this case is 2. Determine the number of black connected areas of Petya's polygon, which can be seen through the rectangular window.",
  "Title": "G. Visible Black Areas",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n2 2 3 3\n+-+\nOutput\nCopy\n7\n\nInput\nCopy\n4 1 5 1\n-\nOutput\nCopy\n999999228\n\n",
  "Note": "NoteIn the first example:(n\u2211i=0sian\u2212ibi)(\u2211i=0nsian\u2212ibi) = 2230\u22122131+20322230\u22122131+2032 = 7In the second example:(n\u2211i=0sian\u2212ibi)=\u22121450\u22121351\u22121252\u22121153\u22121054=\u2212781\u2261999999228(mod109+9)(\u2211i=0nsian\u2212ibi)=\u22121450\u22121351\u22121252\u22121153\u22121054=\u2212781\u2261999999228(mod109+9).",
  "Input Description": "The first line contains four integers n,a,bn,a,b and kk (1\u2264n\u2264109,1\u2264a,b\u2264109,1\u2264k\u2264105)(1\u2264n\u2264109,1\u2264a,b\u2264109,1\u2264k\u2264105).The second line contains a sequence of length kk consisting of characters '+' and '-'. If the ii-th character (0-indexed) is '+', then si=1si=1, otherwise si=\u22121si=\u22121.Note that only the first kk members of the sequence are given, the rest can be obtained using the periodicity property.",
  "Output Description": "Output a single integer\u00a0\u2014 value of given expression modulo 109+9109+9.",
  "Time Limit": "1 second",
  "Description": "You are given two integers aa and bb. Moreover, you are given a sequence s0,s1,\u2026,sns0,s1,\u2026,sn. All values in ss are integers 11 or \u22121\u22121. It's known that sequence is kk-periodic and kk divides n+1n+1. In other words, for each k\u2264i\u2264nk\u2264i\u2264n it's satisfied that si=si\u2212ksi=si\u2212k.Find out the non-negative remainder of division of n\u2211i=0sian\u2212ibi\u2211i=0nsian\u2212ibi by 109+9109+9.Note that the modulo is unusual!",
  "Title": "A. Alternating Sum",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n5\n0 1 2 1 2\nOutput\nCopy\nYES\n1\n2\n3\n5\n4\n\nInput\nCopy\n4\n0 1 2 3\nOutput\nCopy\nNO\n\n",
  "Note": "NoteIn the first example at first you have to remove the vertex with index 1 (after that, the edges (1, 2) and (1, 4) are removed), then the vertex with index 2 (and edges (2, 3) and (2, 5) are removed). After that there are no edges in the tree, so you can remove remaining vertices in any order.  ",
  "Input Description": "The first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7105)\u00a0\u2014 number of vertices in a tree.The second line contains n integers p1,\u2009p2,\u2009...,\u2009pn (0\u2009\u2264\u2009pi\u2009\u2264\u2009n). If pi\u2009\u2260\u20090 there is an edge between vertices i and pi. It is guaranteed that the given graph is a tree.",
  "Output Description": "If it's possible to destroy all vertices, print \"YES\" (without quotes), otherwise print \"NO\" (without quotes).If it's possible to destroy all vertices, in the next n lines print the indices of the vertices in order you destroy them. If there are multiple correct answers, print any.",
  "Time Limit": "1 second",
  "Description": "You are given a tree (a graph with n vertices and n\u2009-\u20091 edges in which it's possible to reach any vertex from any other vertex using only its edges).A vertex can be destroyed if this vertex has even degree. If you destroy a vertex, all edges connected to it are also deleted.Destroy all vertices in the given tree or determine that it is impossible.",
  "Title": "B. Destruction of a Tree",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n1\n1 1 9\nOutput\nCopy\n3\n\nInput\nCopy\n2\n2 3 20\n2 4 40\nOutput\nCopy\n6\n\nInput\nCopy\n2\n1 2 5\n2 3 5\nOutput\nCopy\n0\n\n",
  "Note": "NoteIn the first sample there are three suitable pairs: (1;9)(1;9), (3;3)(3;3) and (9;1)(9;1).In the second sample case there are 6 suitable pairs: (2;220)(2;220), (4;110)(4;110), (8;55)(8;55), (10;44)(10;44), (20;22)(20;22) and (40;11)(40;11).Here the sample of cut for (20;22)(20;22).  The third sample has no suitable pairs.",
  "Input Description": "The first line consists of a single integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105)\u00a0\u2014 amount of different types of rectangles left after cutting the initial rectangle.The next nn lines each consist of three integers wi,hi,ciwi,hi,ci (1\u2264wi,hi,ci\u22641012)(1\u2264wi,hi,ci\u22641012)\u00a0\u2014 the lengths of the sides of the rectangles of this type and the amount of the rectangles of this type.It is guaranteed that the rectangles of the different types are different.",
  "Output Description": "Output one integer\u00a0\u2014 the answer to the problem.",
  "Time Limit": "2 seconds",
  "Description": "A rectangle with sides AA and BB is cut into rectangles with cuts parallel to its sides. For example, if pp horizontal and qq vertical cuts were made, (p+1)\u22c5(q+1)(p+1)\u22c5(q+1) rectangles were left after the cutting. After the cutting, rectangles were of nn different types. Two rectangles are different if at least one side of one rectangle isn't equal to the corresponding side of the other. Note that the rectangle can't be rotated, this means that rectangles a\u00d7ba\u00d7b and b\u00d7ab\u00d7a are considered different if a\u2260ba\u2260b.For each type of rectangles, lengths of the sides of rectangles are given along with the amount of the rectangles of this type that were left after cutting the initial rectangle.Calculate the amount of pairs (A;B)(A;B) such as the given rectangles could be created by cutting the rectangle with sides of lengths AA and BB. Note that pairs (A;B)(A;B) and (B;A)(B;A) are considered different when A\u2260BA\u2260B.",
  "Title": "C. Cutting Rectangle",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\naaaaa\n5\n3 a\n3 aa\n2 aaa\n3 aaaa\n1 aaaaa\nOutput\nCopy\n3\n4\n4\n-1\n5\n\nInput\nCopy\nabbb\n7\n4 b\n1 ab\n3 bb\n1 abb\n2 bbb\n1 a\n2 abbb\nOutput\nCopy\n-1\n2\n-1\n3\n-1\n1\n-1\n\n",
  "Note": "",
  "Input Description": "The first line contains string ss (1\u2264|s|\u2264105)(1\u2264|s|\u2264105).The second line contains an integer nn (1\u2264n\u22641051\u2264n\u2264105).Each of next nn lines contains an integer kiki (1\u2264ki\u2264|s|)(1\u2264ki\u2264|s|) and a non-empty string mimi\u00a0\u2014 parameters of the query with number ii, in this order.All strings in input consists of lowercase English letters. Sum of length of all strings in input doesn't exceed 105105. All mimi are distinct.",
  "Output Description": "For each query output the answer for it in a separate line.If a string mimi occurs in ss less that kiki times, output -1.",
  "Time Limit": "1.5 seconds",
  "Description": "You are given a string ss. You should answer nn queries. The ii-th query consists of integer kiki and string mimi. The answer for this query is the minimum length of such a string tt that tt is a substring of ss and mimi has at least kiki occurrences as a substring in tt.A substring of a string is a continuous segment of characters of the string.It is guaranteed that for any two queries the strings mimi from these queries are different. ",
  "Title": "D. Frequency of String",
  "Memory Limit": "512 megabytes"
}{
  "Example": "Input\nCopy\n0 1 1 1 1\nOutput\nCopy\n1\n\nInput\nCopy\n1 1 1 1 1\nOutput\nCopy\n666666674\n\nInput\nCopy\n1 1 2 1 2\nOutput\nCopy\n538461545\n\n",
  "Note": "NoteIn the first example initially the chip is located at a distance 0 from origin. In one second chip will move to distance 1 is some direction, so distance to origin will become 1.Answers to the second and the third tests:  and .",
  "Input Description": "First line contains five integers R,\u2009a1,\u2009a2,\u2009a3 and a4 (0\u2009\u2264\u2009R\u2009\u2264\u200950,\u20091\u2009\u2264\u2009a1,\u2009a2,\u2009a3,\u2009a4\u2009\u2264\u20091000).Probabilities pi can be calculated using formula .",
  "Output Description": "It can be shown that answer for this problem is always a rational number of form , where .Print P\u00b7Q\u2009-\u20091 modulo 109\u2009+\u20097. ",
  "Time Limit": "2 seconds",
  "Description": "A chip was placed on a field with coordinate system onto point (0,\u20090).Every second the chip moves randomly. If the chip is currently at a point (x,\u2009y), after a second it moves to the point (x\u2009-\u20091,\u2009y) with probability p1, to the point (x,\u2009y\u2009-\u20091) with probability p2, to the point (x\u2009+\u20091,\u2009y) with probability p3 and to the point (x,\u2009y\u2009+\u20091) with probability p4. It's guaranteed that p1\u2009+\u2009p2\u2009+\u2009p3\u2009+\u2009p4\u2009=\u20091. The moves are independent.Find out the expected time after which chip will move away from origin at a distance greater than R (i.e.  will be satisfied).",
  "Title": "E. Circles of Waiting",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n7\nOutput\nCopy\n4\n\nInput\nCopy\n8\nOutput\nCopy\n5\n\nInput\nCopy\n9\nOutput\nCopy\n5\n\n",
  "Note": "NoteIn the first sample, there are following possible weights of splits of 77:Weight 1: [77] Weight 2: [33, 33, 1] Weight 3: [22, 22, 22, 1] Weight 7: [11, 11, 11, 11, 11, 11, 11]",
  "Input Description": "The first line contains one integer nn (1\u2264n\u22641091\u2264n\u2264109).",
  "Output Description": "Output one integer\u00a0\u2014 the answer to the problem.",
  "Time Limit": "1 second",
  "Description": "Let's define a split of nn as a nonincreasing sequence of positive integers, the sum of which is nn. For example, the following sequences are splits of 88: [4,4][4,4], [3,3,2][3,3,2], [2,2,1,1,1,1][2,2,1,1,1,1], [5,2,1][5,2,1].The following sequences aren't splits of 88: [1,7][1,7], [5,4][5,4], [11,\u22123][11,\u22123], [1,1,4,1,1][1,1,4,1,1].The weight of a split is the number of elements in the split that are equal to the first element. For example, the weight of the split [1,1,1,1,1][1,1,1,1,1] is 55, the weight of the split [5,5,3,3,3][5,5,3,3,3] is 22 and the weight of the split [9][9] equals 11.For a given nn, find out the number of different weights of its splits.",
  "Title": "A. Splits",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n4 5 5 3 5\n1 5 5 4\nOutput\nCopy\n20\n\nInput\nCopy\n5 3 1 1 3\n2 2 2 1 1\nOutput\nCopy\n15\n\nInput\nCopy\n5 5 3 4 5\n1 2 3 4 5\nOutput\nCopy\n35\n\n",
  "Note": "NoteIn the first sample the messages must be read immediately after receiving, Vasya receives A points for each message, n\u00b7A\u2009=\u200920 in total.In the second sample the messages can be read at any integer moment.In the third sample messages must be read at the moment T. This way Vasya has 1, 2, 3, 4 and 0 unread messages at the corresponding minutes, he gets 40 points for them. When reading messages, he receives (5\u2009-\u20094\u00b73)\u2009+\u2009(5\u2009-\u20093\u00b73)\u2009+\u2009(5\u2009-\u20092\u00b73)\u2009+\u2009(5\u2009-\u20091\u00b73)\u2009+\u20095\u2009=\u2009\u2009-\u20095 points. This is 35 in total.",
  "Input Description": "The first line contains five integers n, A, B, C and T (1\u2009\u2264\u2009n,\u2009A,\u2009B,\u2009C,\u2009T\u2009\u2264\u20091000).The second string contains n integers ti (1\u2009\u2264\u2009ti\u2009\u2264\u2009T).",
  "Output Description": "Output one integer \u00a0\u2014 the answer to the problem.",
  "Time Limit": "1 second",
  "Description": "There are n incoming messages for Vasya. The i-th message is going to be received after ti minutes. Each message has a cost, which equals to A initially. After being received, the cost of a message decreases by B each minute (it can become negative). Vasya can read any message after receiving it at any moment of time. After reading the message, Vasya's bank account receives the current cost of this message. Initially, Vasya's bank account is at 0.Also, each minute Vasya's bank account receives C\u00b7k, where k is the amount of received but unread messages.Vasya's messages are very important to him, and because of that he wants to have all messages read after T minutes.Determine the maximum amount of money Vasya's bank account can hold after T minutes.",
  "Title": "B. Messages",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n5 3 2 3\nOutput\nCopy\n4\n\nInput\nCopy\n5 3 100 1\nOutput\nCopy\n5\n\n",
  "Note": "NoteIn the first sample they have to buy 44 packs of paper: there will be 1212 sheets in total, and giving 22 sheets to each person is enough to suit everyone's needs.In the second sample they have to buy a pack for each person as they can't share sheets.",
  "Input Description": "The only line contains four integers kk, nn, ss, pp (1\u2264k,n,s,p\u22641041\u2264k,n,s,p\u2264104)\u00a0\u2014 the number of people, the number of airplanes each should make, the number of airplanes that can be made using one sheet and the number of sheets in one pack, respectively.",
  "Output Description": "Print a single integer\u00a0\u2014 the minimum number of packs they should buy.",
  "Time Limit": "1 second",
  "Description": "To make a paper airplane, one has to use a rectangular piece of paper. From a sheet of standard size you can make ss airplanes.A group of kk people decided to make nn airplanes each. They are going to buy several packs of paper, each of them containing pp sheets, and then distribute the sheets between the people. Each person should have enough sheets to make nn airplanes. How many packs should they buy?",
  "Title": "A. Paper Airplanes",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n4 3\n#..#\n#.#.\n....\n.###\nOutput\nCopy\n3 2\n\nInput\nCopy\n10 4\n#....##...\n.#...#....\n..#..#..#.\n...#.#....\n.#..##.#..\n.....#...#\n...#.##...\n.#...#.#..\n.....#..#.\n...#.#...#\nOutput\nCopy\n6 1\n\nInput\nCopy\n19 6\n##..............###\n#......#####.....##\n.....#########.....\n....###########....\n...#############...\n..###############..\n.#################.\n.#################.\n.#################.\n.#################.\n#####....##....####\n####............###\n####............###\n#####...####...####\n.#####..####..#####\n...###........###..\n....###########....\n.........##........\n#.................#\nOutput\nCopy\n1 8\n\n",
  "Note": "NoteThe picture below shows the three possible locations of the ship that contain the cell (3,2)(3,2) in the first sample.  ",
  "Input Description": "The first line contains two integers nn and kk (1\u2264k\u2264n\u22641001\u2264k\u2264n\u2264100)\u00a0\u2014 the size of the field and the size of the ship.The next nn lines contain the field. Each line contains nn characters, each of which is either '#' (denotes a definitely empty cell) or '.' (denotes a cell that can belong to the ship).",
  "Output Description": "Output two integers\u00a0\u2014 the row and the column of a cell that belongs to the maximum possible number of different locations of the ship.If there are multiple answers, output any of them. In particular, if no ship can be placed on the field, you can output any cell.",
  "Time Limit": "1.5 seconds",
  "Description": "Arkady is playing Battleship. The rules of this game aren't really important.There is a field of n\u00d7nn\u00d7n cells. There should be exactly one kk-decker on the field, i.\u00a0e. a ship that is kk cells long oriented either horizontally or vertically. However, Arkady doesn't know where it is located. For each cell Arkady knows if it is definitely empty or can contain a part of the ship.Consider all possible locations of the ship. Find such a cell that belongs to the maximum possible number of different locations of the ship.",
  "Title": "B. Battleship",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n20 4 5 2\nOutput\nCopy\n8\n\nInput\nCopy\n30 9 4 1\nOutput\nCopy\n4\n\n",
  "Note": "NoteIn the first example Arkady should choose x=4x=4. He will give 44 candies to himself, 44 candies to the second person, 44 candies to the third person, then 44 candies to the fourth person and then again 44 candies to himself. No person is given candies more than 22 times, and Arkady receives 88 candies in total.Note that if Arkady chooses x=5x=5, he will receive only 55 candies, and if he chooses x=3x=3, he will receive only 3+3=63+3=6 candies as well as the second person, the third and the fourth persons will receive 33 candies, and 22 candies will be thrown away. He can't choose x=1x=1 nor x=2x=2 because in these cases he will receive candies more than 22 times.In the second example Arkady has to choose x=4x=4, because any smaller value leads to him receiving candies more than 11 time.",
  "Input Description": "The only line contains four integers nn, kk, MM and DD (2\u2264n\u226410182\u2264n\u22641018, 2\u2264k\u2264n2\u2264k\u2264n, 1\u2264M\u2264n1\u2264M\u2264n, 1\u2264D\u2264min(n,1000)1\u2264D\u2264min(n,1000), M\u22c5D\u22c5k\u2265nM\u22c5D\u22c5k\u2265n)\u00a0\u2014 the number of candies, the number of people, the maximum number of candies given to a person at once, the maximum number of times a person can receive candies.",
  "Output Description": "Print a single integer\u00a0\u2014 the maximum possible number of candies Arkady can give to himself.Note that it is always possible to choose some valid xx.",
  "Time Limit": "1 second",
  "Description": "kk people want to split nn candies between them. Each candy should be given to exactly one of them or be thrown away.The people are numbered from 11 to kk, and Arkady is the first of them. To split the candies, Arkady will choose an integer xx and then give the first xx candies to himself, the next xx candies to the second person, the next xx candies to the third person and so on in a cycle. The leftover (the remainder that is not divisible by xx) will be thrown away.Arkady can't choose xx greater than MM as it is considered greedy. Also, he can't choose such a small xx that some person will receive candies more than DD times, as it is considered a slow splitting.Please find what is the maximum number of candies Arkady can receive by choosing some valid xx.",
  "Title": "C. Greedy Arkady",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n10 5\n0 0 1 0 2 0 0 1 0\nOutput\nCopy\n3\n\nInput\nCopy\n10 3\n1 1 1 1 2 1 1 1 1\nOutput\nCopy\n3\n\n",
  "Note": "NoteIn the first sample two frogs can use the different stones at the distance 55, and one frog can use the stones at the distances 33 and then 88.In the second sample although there are two stones at the distance 55, that does not help. The three paths are: 0\u21923\u21926\u21929\u2192100\u21923\u21926\u21929\u219210, 0\u21922\u21925\u21928\u2192100\u21922\u21925\u21928\u219210, 0\u21921\u21924\u21927\u2192100\u21921\u21924\u21927\u219210.",
  "Input Description": "The first line contains two integers ww and ll (1\u2264l<w\u22641051\u2264l<w\u2264105)\u00a0\u2014 the width of the river and the maximum length of a frog's jump.The second line contains w\u22121w\u22121 integers a1,a2,\u2026,aw\u22121a1,a2,\u2026,aw\u22121 (0\u2264ai\u22641040\u2264ai\u2264104), where aiai is the number of stones at the distance ii from the bank the frogs are currently at.",
  "Output Description": "Print a single integer\u00a0\u2014 the maximum number of frogs that can cross the river.",
  "Time Limit": "1 second",
  "Description": "A lot of frogs want to cross a river. A river is ww units width, but frogs can only jump ll units long, where l<wl<w. Frogs can also jump on lengths shorter than ll. but can't jump longer. Hopefully, there are some stones in the river to help them.The stones are located at integer distances from the banks. There are aiai stones at the distance of ii units from the bank the frogs are currently at. Each stone can only be used once by one frog, after that it drowns in the water.What is the maximum number of frogs that can cross the river, given that then can only jump on the stones?",
  "Title": "D. Single-use Stones",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n3\ncodeforces\ncodehorses\ncode\nOutput\nCopy\n6\n\nInput\nCopy\n5\nabba\nabb\nab\naa\naacada\nOutput\nCopy\n11\n\nInput\nCopy\n3\ntelegram\ndigital\nresistance\nOutput\nCopy\n3\n\n",
  "Note": "NoteIn the first example one of the best options is to shorten the names in the given order as \"cod\", \"co\", \"c\".In the second example we can shorten the last name to \"aac\" and the first name to \"a\" without changing the other names.",
  "Input Description": "The first line contains a single integer nn (1\u2264n\u22641051\u2264n\u2264105)\u00a0\u2014 the number of variables.The next nn lines contain variable names, one per line. Each name is non-empty and contains only lowercase English letters. The total length of these strings is not greater than 105105. The variable names are distinct.",
  "Output Description": "Print a single integer\u00a0\u2014 the minimum possible total length of new variable names.",
  "Time Limit": "1 second",
  "Description": "Arkady's code contains nn variables. Each variable has a unique name consisting of lowercase English letters only. One day Arkady decided to shorten his code.He wants to replace each variable name with its non-empty prefix so that these new names are still unique (however, a new name of some variable can coincide with some old name of another or same variable). Among such possibilities he wants to find the way with the smallest possible total length of the new names.A string aa is a prefix of a string bb if you can delete some (possibly none) characters from the end of bb and obtain aa.Please find this minimum possible total length of new names.",
  "Title": "E. Short Code",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n6 60\n0 0\n1 20\n3 21\n5 0\n19 30\n23 40\nOutput\nCopy\n6 1\n\nInput\nCopy\n16 50\n0 30\n1 20\n3 0\n4 30\n6 10\n7 50\n9 30\n11 10\n12 50\n14 30\n16 10\n17 50\n19 30\n21 10\n22 50\n23 59\nOutput\nCopy\n24 50\n\nInput\nCopy\n3 17\n0 30\n1 0\n12 0\nOutput\nCopy\n0 0\n\n",
  "Note": "NoteIn the first example note that there is not enough time between 1:20 and 3:21, because each landing and the takeoff take one minute.In the second example there is no gaps in the schedule, so Arkady can only add takeoff after all landings. Note that it is possible that one should wait more than 2424 hours to insert the takeoff.In the third example Arkady can insert the takeoff even between the first landing.",
  "Input Description": "The first line of input contains two integers nn and ss (1\u2264n\u22641001\u2264n\u2264100, 1\u2264s\u2264601\u2264s\u226460)\u00a0\u2014 the number of landings on the schedule and the minimum allowed time (in minutes) between a landing and a takeoff.Each of next nn lines contains two integers hh and mm (0\u2264h\u2264230\u2264h\u226423, 0\u2264m\u2264590\u2264m\u226459)\u00a0\u2014 the time, in hours and minutes, when a plane will land, starting from current moment (i.\u00a0e. the current time is 00 00). These times are given in increasing order.",
  "Output Description": "Print two integers hh and mm\u00a0\u2014 the hour and the minute from the current moment of the earliest time Arkady can insert the takeoff.",
  "Time Limit": "1 second",
  "Description": "These days Arkady works as an air traffic controller at a large airport. He controls a runway which is usually used for landings only. Thus, he has a schedule of planes that are landing in the nearest future, each landing lasts 11 minute.He was asked to insert one takeoff in the schedule. The takeoff takes 11 minute itself, but for safety reasons there should be a time space between the takeoff and any landing of at least ss minutes from both sides.Find the earliest time when Arkady can insert the takeoff.",
  "Title": "A. Mind the Gap",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n4 10 3\n2 2 2 2\nOutput\nCopy\n1\n\nInput\nCopy\n4 80 20\n3 2 1 4\nOutput\nCopy\n0\n\nInput\nCopy\n5 10 10\n1000 1 1 1 1\nOutput\nCopy\n4\n\n",
  "Note": "NoteIn the first example Arkady should block at least one hole. After that, 10\u22c526\u22483.33310\u22c526\u22483.333 liters of water will flow out of the first hole, and that suits Arkady.In the second example even without blocking any hole, 80\u22c5310=2480\u22c5310=24 liters will flow out of the first hole, that is not less than 2020.In the third example Arkady has to block all holes except the first to make all water flow out of the first hole.",
  "Input Description": "The first line contains three integers nn, AA, BB (1\u2264n\u22641000001\u2264n\u2264100000, 1\u2264B\u2264A\u22641041\u2264B\u2264A\u2264104)\u00a0\u2014 the number of holes, the volume of water Arkady will pour into the system, and the volume he wants to get out of the first hole.The second line contains nn integers s1,s2,\u2026,sns1,s2,\u2026,sn (1\u2264si\u22641041\u2264si\u2264104)\u00a0\u2014 the sizes of the holes.",
  "Output Description": "Print a single integer\u00a0\u2014 the number of holes Arkady should block.",
  "Time Limit": "1 second",
  "Description": "Arkady wants to water his only flower. Unfortunately, he has a very poor watering system that was designed for nn flowers and so it looks like a pipe with nn holes. Arkady can only use the water that flows from the first hole.Arkady can block some of the holes, and then pour AA liters of water into the pipe. After that, the water will flow out from the non-blocked holes proportionally to their sizes s1,s2,\u2026,sns1,s2,\u2026,sn. In other words, if the sum of sizes of non-blocked holes is SS, and the ii-th hole is not blocked, si\u22c5ASsi\u22c5AS liters of water will flow out of it.What is the minimum number of holes Arkady should block to make at least BB liters of water flow out of the first hole?",
  "Title": "B. Watering System",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n5\na aa aaa ab abb\nOutput\nCopy\n2\n\nInput\nCopy\n3\namer arem mrea\nOutput\nCopy\n1\n\n",
  "Note": "NoteIn the first test, there are two objects mentioned. The roots that represent them are \"a\",\"ab\".In the second test, there is only one object, its root is \"amer\", the other strings are just permutations of \"amer\".",
  "Input Description": "The first line contains one integer nn (1\u2264n\u22641031\u2264n\u2264103)\u00a0\u2014 the number of words in the script.The second line contains nn words s1,s2,\u2026,sns1,s2,\u2026,sn\u00a0\u2014 the script itself. The length of each string does not exceed 103103.It is guaranteed that all characters of the strings are small latin letters.",
  "Output Description": "Output one integer\u00a0\u2014 the number of different objects mentioned in the given ancient Aramic script.",
  "Time Limit": "1 second",
  "Description": "In Aramic language words can only represent objects.Words in Aramic have special properties:   A word is a root if it does not contain the same letter more than once.  A root and all its permutations represent the same object.  The root xx of a word yy is the word that contains all letters that appear in yy in a way that each letter appears once. For example, the root of \"aaaa\", \"aa\", \"aaa\" is \"a\", the root of \"aabb\", \"bab\", \"baabb\", \"ab\" is \"ab\".  Any word in Aramic represents the same object as its root. You have an ancient script in Aramic. What is the number of different objects mentioned in the script?",
  "Title": "A. Aramic script",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n0 1 1 0 0 0 0 0 0 7 0 0 0 0\nOutput\nCopy\n4\n\nInput\nCopy\n5 1 1 1 1 0 0 0 0 0 0 0 0 0\nOutput\nCopy\n8\n\n",
  "Note": "NoteIn the first test case the board after the move from the hole with 77 stones will look like 1 2 2 0 0 0 0 0 0 0 1 1 1 1. Then the player collects the even numbers and ends up with a score equal to 44.",
  "Input Description": "The only line contains 14 integers a1,a2,\u2026,a14a1,a2,\u2026,a14 (0\u2264ai\u22641090\u2264ai\u2264109)\u00a0\u2014 the number of stones in each hole.It is guaranteed that for any ii (1\u2264i\u2264141\u2264i\u226414) aiai is either zero or odd, and there is at least one stone in the board.",
  "Output Description": "Output one integer, the maximum possible score after one move.",
  "Time Limit": "1 second",
  "Description": "Mancala is a game famous in the Middle East. It is played on a board that consists of 14 holes.   Initially, each hole has aiai stones. When a player makes a move, he chooses a hole which contains a positive number of stones. He takes all the stones inside it and then redistributes these stones one by one in the next holes in a counter-clockwise direction.Note that the counter-clockwise order means if the player takes the stones from hole ii, he will put one stone in the (i+1)(i+1)-th hole, then in the (i+2)(i+2)-th, etc. If he puts a stone in the 1414-th hole, the next one will be put in the first hole.After the move, the player collects all the stones from holes that contain even number of stones. The number of stones collected by player is the score, according to Resli.Resli is a famous Mancala player. He wants to know the maximum score he can obtain after one move.",
  "Title": "B. Mancala",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n5 5\n1 2 1 2 1\n3 10 1 1 1\nOutput\nCopy\n3\n5\n4\n4\n3\n\nInput\nCopy\n4 4\n1 2 3 4\n9 1 10 6\nOutput\nCopy\n1\n4\n4\n1\n\n",
  "Note": "NoteIn the first example:   after the 1-st minute, the 1-st and 2-nd warriors die.  after the 2-nd minute all warriors die (and all arrows left over are wasted), then they will be revived thus answer is 5\u00a0\u2014 all warriors are alive.  after the 3-rd minute, the 1-st warrior dies.  after the 4-th minute, the 2-nd warrior takes a hit and his strength decreases by 1.  after the 5-th minute, the 2-nd warrior dies. ",
  "Input Description": "The first line contains two integers nn and qq (1\u2264n,q\u22642000001\u2264n,q\u2264200000)\u00a0\u2014 the number of warriors and the number of minutes in the battle.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109) that represent the warriors' strengths.The third line contains qq integers k1,k2,\u2026,kqk1,k2,\u2026,kq (1\u2264ki\u226410141\u2264ki\u22641014), the ii-th of them represents Lagertha's order at the ii-th minute: kiki arrows will attack the warriors.",
  "Output Description": "Output qq lines, the ii-th of them is the number of standing warriors after the ii-th minute.",
  "Time Limit": "2 seconds",
  "Description": "Ivar the Boneless is a great leader. He is trying to capture Kattegat from Lagertha. The war has begun and wave after wave Ivar's warriors are falling in battle.Ivar has nn warriors, he places them on a straight line in front of the main gate, in a way that the ii-th warrior stands right after (i\u22121)(i\u22121)-th warrior. The first warrior leads the attack.Each attacker can take up to aiai arrows before he falls to the ground, where aiai is the ii-th warrior's strength.Lagertha orders her warriors to shoot kiki arrows during the ii-th minute, the arrows one by one hit the first still standing warrior. After all Ivar's warriors fall and all the currently flying arrows fly by, Thor smashes his hammer and all Ivar's warriors get their previous strengths back and stand up to fight again. In other words, if all warriors die in minute tt, they will all be standing to fight at the end of minute tt.The battle will last for qq minutes, after each minute you should tell Ivar what is the number of his standing warriors.",
  "Title": "C. Valhalla Siege",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n4 1 1\n1 -1 -1\n2 1 1\n3 1 1\n4 -1 -1\nOutput\nCopy\n8\n\nInput\nCopy\n3 1 0\n-1 1 0\n0 0 -1\n1 -1 -2\nOutput\nCopy\n6\n\nInput\nCopy\n3 1 0\n0 0 0\n1 0 0\n2 0 0\nOutput\nCopy\n0\n\n",
  "Note": "NoteThere are four collisions (1,2,T\u22120.5)(1,2,T\u22120.5), (1,3,T\u22121)(1,3,T\u22121), (2,4,T+1)(2,4,T+1), (3,4,T+0.5)(3,4,T+0.5), where (u,v,t)(u,v,t) means a collision happened between ghosts uu and vv at moment tt. At each collision, each ghost gained one experience point, this means that GX=4\u22c52=8GX=4\u22c52=8.In the second test, all points will collide when t=T+1t=T+1.   The red arrow represents the 1-st ghost velocity, orange represents the 2-nd ghost velocity, and blue represents the 3-rd ghost velocity.",
  "Input Description": "The first line contains three integers nn, aa and bb (1\u2264n\u22642000001\u2264n\u2264200000, 1\u2264|a|\u22641091\u2264|a|\u2264109, 0\u2264|b|\u22641090\u2264|b|\u2264109)\u00a0\u2014 the number of ghosts in the universe and the parameters of the straight line.Each of the next nn lines contains three integers xixi, VxiVxi, VyiVyi (\u2212109\u2264xi\u2264109\u2212109\u2264xi\u2264109, \u2212109\u2264Vxi,Vyi\u2264109\u2212109\u2264Vxi,Vyi\u2264109), where xixi is the current xx-coordinate of the ii-th ghost (and yi=a\u22c5xi+byi=a\u22c5xi+b).It is guaranteed that no two ghosts share the same initial position, in other words, it is guaranteed that for all (i,j)(i,j) xi\u2260xjxi\u2260xj for i\u2260ji\u2260j.",
  "Output Description": "Output one line: experience index of the ghost kind GXGX in the indefinite future.",
  "Time Limit": "2 seconds",
  "Description": "Ghosts live in harmony and peace, they travel the space without any purpose other than scare whoever stands in their way.There are nn ghosts in the universe, they move in the OXYOXY plane, each one of them has its own velocity that does not change in time: \u2192V=Vx\u2192i+Vy\u2192jV\u2192=Vxi\u2192+Vyj\u2192 where VxVx is its speed on the xx-axis and VyVy is on the yy-axis.A ghost ii has experience value EXiEXi, which represent how many ghosts tried to scare him in his past. Two ghosts scare each other if they were in the same cartesian point at a moment of time.As the ghosts move with constant speed, after some moment of time there will be no further scaring (what a relief!) and the experience of ghost kind GX=\u2211ni=1EXiGX=\u2211i=1nEXi will never increase.Tameem is a red giant, he took a picture of the cartesian plane at a certain moment of time TT, and magically all the ghosts were aligned on a line of the form y=a\u22c5x+by=a\u22c5x+b. You have to compute what will be the experience index of the ghost kind GXGX in the indefinite future, this is your task for today.Note that when Tameem took the picture, GXGX may already be greater than 00, because many ghosts may have scared one another at any moment between [\u2212\u221e,T][\u2212\u221e,T].",
  "Title": "D. Ghosts",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n3 4\n0 0\n2 0\n2 2\n1 1 2\n2 1\n2 2\n2 3\nOutput\nCopy\n3.4142135624 -1.4142135624\n2.0000000000 0.0000000000\n0.5857864376 -1.4142135624\n\nInput\nCopy\n3 2\n-1 1\n0 0\n1 1\n1 1 2\n2 1\nOutput\nCopy\n1.0000000000 -1.0000000000\n\n",
  "Note": "NoteIn the first test note the initial and the final state of the wooden polygon.   Red Triangle is the initial state and the green one is the triangle after rotation around (2,0)(2,0).In the second sample note that the polygon rotates 180180 degrees counter-clockwise or clockwise direction (it does not matter), because Hag's father makes sure that the polygon is stable and his son does not trick him.",
  "Input Description": "The first line contains two integers nn and qq (3\u2264n\u2264100003\u2264n\u226410000, 1\u2264q\u22642000001\u2264q\u2264200000)\u00a0\u2014 the number of vertices in the polygon and the number of queries.The next nn lines describe the wooden polygon, the ii-th line contains two integers xixi and yiyi (|xi|,|yi|\u2264108|xi|,|yi|\u2264108)\u00a0\u2014 the coordinates of the ii-th vertex of the polygon. It is guaranteed that polygon is strictly convex and the vertices are given in the counter-clockwise order and all vertices are distinct.The next qq lines describe the queries, one per line. Each query starts with its type 11 or 22. Each query of the first type continues with two integers ff and tt (1\u2264f,t\u2264n1\u2264f,t\u2264n)\u00a0\u2014 the vertex the pin is taken from, and the vertex the pin is put to and the polygon finishes rotating. It is guaranteed that the vertex ff contains a pin. Each query of the second type continues with a single integer vv (1\u2264v\u2264n1\u2264v\u2264n)\u00a0\u2014 the vertex the coordinates of which Hag should tell his father.It is guaranteed that there is at least one query of the second type.",
  "Output Description": "The output should contain the answer to each query of second type\u00a0\u2014 two numbers in a separate line. Your answer is considered correct, if its absolute or relative error does not exceed 10\u2212410\u22124.Formally, let your answer be aa, and the jury's answer be bb. Your answer is considered correct if |a\u2212b|max(1,|b|)\u226410\u22124|a\u2212b|max(1,|b|)\u226410\u22124",
  "Time Limit": "3 seconds",
  "Description": "Hag is a very talented person. He has always had an artist inside him but his father forced him to study mechanical engineering.Yesterday he spent all of his time cutting a giant piece of wood trying to make it look like a goose. Anyway, his dad found out that he was doing arts rather than studying mechanics and other boring subjects. He confronted Hag with the fact that he is a spoiled son that does not care about his future, and if he continues to do arts he will cut his 25 Lira monthly allowance.Hag is trying to prove to his dad that the wooden piece is a project for mechanics subject. He also told his dad that the wooden piece is a strictly convex polygon with nn vertices.Hag brought two pins and pinned the polygon with them in the 11-st and 22-nd vertices to the wall. His dad has qq queries to Hag of two types.   11 ff tt: pull a pin from the vertex ff, wait for the wooden polygon to rotate under the gravity force (if it will rotate) and stabilize. And then put the pin in vertex tt.  22 vv: answer what are the coordinates of the vertex vv. Please help Hag to answer his father's queries.You can assume that the wood that forms the polygon has uniform density and the polygon has a positive thickness, same in all points. After every query of the 1-st type Hag's dad tries to move the polygon a bit and watches it stabilize again.",
  "Title": "E. Hag's Khashba",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n4\n1001\nOutput\nCopy\n100\n\nInput\nCopy\n1\n1\nOutput\nCopy\n1\n\n",
  "Note": "NoteIn the first example you can obtain the answer by the following sequence of operations: \"1001\"  \"1010\"  \"1100\"  \"100\".In the second example you can't obtain smaller answer no matter what operations you use.",
  "Input Description": "The first line contains integer number n (1\u2009\u2264\u2009n\u2009\u2264\u2009100) \u2014 the length of string s.The second line contains the string s consisting of characters \"0\" and \"1\". It is guaranteed that the string s is correct.",
  "Output Description": "Print one string \u2014 the minimum correct string that you can obtain from the given one.",
  "Time Limit": "1 second",
  "Description": "String can be called correct if it consists of characters \"0\" and \"1\" and there are no redundant leading zeroes. Here are some examples: \"0\", \"10\", \"1001\".You are given a correct string s.You can perform two different operations on this string:   swap any pair of adjacent characters (for example, \"101\"  \"110\");  replace \"11\" with \"1\" (for example, \"110\"  \"10\"). Let val(s) be such a number that s is its binary representation.Correct string a is less than some other correct string b iff val(a)\u2009<\u2009val(b).Your task is to find the minimum correct string that you can obtain from the given one using the operations described above. You can use these operations any number of times in any order (or even use no operations at all).",
  "Title": "A. Minimum Binary Number",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n4 3 0\nOutput\nCopy\n1 1\n\nInput\nCopy\n4 3 11\nOutput\nCopy\n1 2\n\nInput\nCopy\n4 3 7\nOutput\nCopy\n3 2\n\n",
  "Note": "NoteHere is her path on matrix 4 by 3:  ",
  "Input Description": "The only line contains three integers n, m and k (2\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009109, n is always even, 0\u2009\u2264\u2009k\u2009<\u2009n\u00b7m). Note that k doesn't fit into 32-bit integer type!",
  "Output Description": "Print the cell (the row and the column where the cell is situated) where Lara ends up after she moves k times.",
  "Time Limit": "2 seconds",
  "Description": "You might have heard about the next game in Lara Croft series coming out this year. You also might have watched its trailer. Though you definitely missed the main idea about its plot, so let me lift the veil of secrecy.Lara is going to explore yet another dangerous dungeon. Game designers decided to use good old 2D environment. The dungeon can be represented as a rectangle matrix of n rows and m columns. Cell (x,\u2009y) is the cell in the x-th row in the y-th column. Lara can move between the neighbouring by side cells in all four directions.Moreover, she has even chosen the path for herself to avoid all the traps. She enters the dungeon in cell (1,\u20091), that is top left corner of the matrix. Then she goes down all the way to cell (n,\u20091) \u2014 the bottom left corner. Then she starts moving in the snake fashion \u2014 all the way to the right, one cell up, then to the left to the cell in 2-nd column, one cell up. She moves until she runs out of non-visited cells. n and m given are such that she always end up in cell (1,\u20092).Lara has already moved to a neighbouring cell k times. Can you determine her current position?",
  "Title": "B. Lara Croft and the New Game",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n5\n1 10\n2 9\n3 9\n2 3\n2 9\nOutput\nCopy\n2 1\n\nInput\nCopy\n3\n1 5\n2 6\n6 20\nOutput\nCopy\n-1 -1\n\n",
  "Note": "NoteIn the first example the following pairs are considered correct:  (2,\u20091),\u2009(3,\u20091),\u2009(4,\u20091),\u2009(5,\u20091) \u2014 not even touching borders;  (3,\u20092),\u2009(4,\u20092),\u2009(3,\u20095),\u2009(4,\u20095) \u2014 touch one border;  (5,\u20092),\u2009(2,\u20095) \u2014 match exactly. ",
  "Input Description": "The first line contains one integer n (1\u2009\u2264\u2009n\u2009\u2264\u20093\u00b7105) \u2014 the number of segments.Each of the next n lines contains two integers li and ri (1\u2009\u2264\u2009li\u2009\u2264\u2009ri\u2009\u2264\u2009109) \u2014 the i-th segment.",
  "Output Description": "Print two distinct indices i and j such that segment ai lies within segment aj. If there are multiple answers, print any of them. If no answer exists, print -1 -1.",
  "Time Limit": "2 seconds",
  "Description": "You are given a sequence a1,\u2009a2,\u2009...,\u2009an of one-dimensional segments numbered 1 through n. Your task is to find two distinct indices i and j such that segment ai lies within segment aj.Segment [l1,\u2009r1] lies within segment [l2,\u2009r2] iff l1\u2009\u2265\u2009l2 and r1\u2009\u2264\u2009r2.Print indices i and j. If there are multiple answers, print any of them. If no answer exists, print -1 -1.",
  "Title": "C. Nested Segments",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n3\n2 3 4\nOutput\nCopy\n8\n3 1\n4 2\n4 5\n2 5\n5 1\n3 2\n2 1\n5 3\n\nInput\nCopy\n3\n1 2 3\nOutput\nCopy\n4\n1 2\n1 3\n1 4\n2 3\n\n",
  "Note": "",
  "Input Description": "The first line contains one integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009300) \u2014 the size of the degree set.The second line contains n integers d1,\u2009d2,\u2009...,\u2009dn (1\u2009\u2264\u2009di\u2009\u2264\u20091000, d1\u2009<\u2009d2\u2009<\u2009...\u2009<\u2009dn) \u2014 the degree set.",
  "Output Description": "In the first line print one integer m (1\u2009\u2264\u2009m\u2009\u2264\u2009106) \u2014 the number of edges in the resulting graph. It is guaranteed that there exists such a graph that all the conditions hold and it contains no more than 106 edges.Each of the next m lines should contain two integers vi and ui (1\u2009\u2264\u2009vi,\u2009ui\u2009\u2264\u2009dn\u2009+\u20091) \u2014 the description of the i-th edge.",
  "Time Limit": "2 seconds",
  "Description": "You are given a sequence of n positive integers d1,\u2009d2,\u2009...,\u2009dn (d1\u2009<\u2009d2\u2009<\u2009...\u2009<\u2009dn). Your task is to construct an undirected graph such that:  there are exactly dn\u2009+\u20091 vertices;  there are no self-loops;  there are no multiple edges;  there are no more than 106 edges;  its degree set is equal to d. Vertices should be numbered 1 through (dn\u2009+\u20091).Degree sequence is an array a with length equal to the number of vertices in a graph such that ai is the number of vertices adjacent to i-th vertex.Degree set is a sorted in increasing order sequence of all distinct values from the degree sequence.It is guaranteed that there exists such a graph that all the conditions hold, and it contains no more than 106 edges.Print the resulting graph.",
  "Title": "D. Degree Set",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n2 1 1\n10 15\n6 1\nOutput\nCopy\n27\n\nInput\nCopy\n3 0 3\n10 8\n7 11\n5 2\nOutput\nCopy\n26\n\n",
  "Note": "NoteIn the first example Max should use the spell of the first type on the second creature, then the spell of the second type on the same creature. Then total damage will be equal to 15\u2009+\u20096\u00b72\u2009=\u200927.In the second example Max should use the spell of the second type on the first creature, then the spell of the second type on the third creature. Total damage will be equal to 10\u2009+\u200911\u2009+\u20095\u2009=\u200926.",
  "Input Description": "The first line contains three integers n, a, b (1\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7105, 0\u2009\u2264\u2009a\u2009\u2264\u200920, 0\u2009\u2264\u2009b\u2009\u2264\u20092\u00b7105) \u2014 the number of creatures, spells of the first type and spells of the second type, respectively.The i-th of the next n lines contain two number hpi and dmgi (1\u2009\u2264\u2009hpi,\u2009dmgi\u2009\u2264\u2009109) \u2014 description of the i-th creature.",
  "Output Description": "Print single integer \u2014 maximum total damage creatures can deal.",
  "Time Limit": "1 second",
  "Description": "Recently Max has got himself into popular CCG \"BrainStone\". As \"BrainStone\" is a pretty intellectual game, Max has to solve numerous hard problems during the gameplay. Here is one of them:Max owns n creatures, i-th of them can be described with two numbers \u2014 its health hpi and its damage dmgi. Max also has two types of spells in stock:  Doubles health of the creature (hpi := hpi\u00b72);  Assigns value of health of the creature to its damage (dmgi := hpi). Spell of first type can be used no more than a times in total, of the second type \u2014 no more than b times in total. Spell can be used on a certain creature multiple times. Spells can be used in arbitrary order. It isn't necessary to use all the spells.Max is really busy preparing for his final exams, so he asks you to determine what is the maximal total damage of all creatures he can achieve if he uses spells in most optimal way.",
  "Title": "E. Well played!",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n3 3 7\n1 2\n2 3\n1 3\n3 2\n3 3\n2 1\n2 1\nOutput\nCopy\n0 \n3 3 7 4 \n6 1 3 6 7 4 5 \n\nInput\nCopy\n1 1 5\n1 1\n1 1\n1 1\n1 1\n1 1\nOutput\nCopy\n0 \n1 5 \n2 4 5 \n3 3 4 5 \n4 2 3 4 5 \n5 1 2 3 4 5 \n\n",
  "Note": "",
  "Input Description": "The first line contains three integers n1, n2 and m (1\u2009\u2264\u2009n1,\u2009n2\u2009\u2264\u20092000, 0\u2009\u2264\u2009m\u2009\u2264\u20092000) \u2014 the number of vertices in the first part, the number of vertices in the second part and the number of edges, respectively.The i-th of the next m lines contain two integers ui and vi (1\u2009\u2264\u2009ui\u2009\u2264\u2009n1,\u20091\u2009\u2264\u2009vi\u2009\u2264\u2009n2) \u2014 the description of the i-th edge, ui is the index of the vertex in the first part and vi is the index of the vertex in the second part.",
  "Output Description": "For each  print the subset of edges (minimal k-covering) in separate line.The first integer cntk of the k-th line is the number of edges in minimal k-covering of the graph. Then cntk integers follow \u2014 original indices of the edges which belong to the minimal k-covering, these indices should be pairwise distinct. Edges are numbered 1 through m in order they are given in the input.",
  "Time Limit": "1.5 seconds",
  "Description": "You are given a bipartite graph G\u2009=\u2009(U,\u2009V,\u2009E), U is the set of vertices of the first part, V is the set of vertices of the second part and E is the set of edges. There might be multiple edges.Let's call some subset of its edges  k-covering iff the graph  has each of its vertices incident to at least k edges. Minimal k-covering is such a k-covering that the size of the subset  is minimal possible.Your task is to find minimal k-covering for each , where minDegree is the minimal degree of any vertex in graph G.",
  "Title": "F. Minimal k-covering",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n512 4\nOutput\nCopy\n50\n\nInput\nCopy\n1000000000 9\nOutput\nCopy\n1\n\n",
  "Note": "NoteThe first example corresponds to the following sequence: 512\u2192511\u2192510\u219251\u219250512\u2192511\u2192510\u219251\u219250.",
  "Input Description": "The first line of the input contains two integer numbers nn and kk (2\u2264n\u22641092\u2264n\u2264109, 1\u2264k\u2264501\u2264k\u226450) \u2014 the number from which Tanya will subtract and the number of subtractions correspondingly.",
  "Output Description": "Print one integer number \u2014 the result of the decreasing nn by one kk times.It is guaranteed that the result will be positive integer number. ",
  "Time Limit": "1 second",
  "Description": "Little girl Tanya is learning how to decrease a number by one, but she does it wrong with a number consisting of two or more digits. Tanya subtracts one from a number by the following algorithm:  if the last digit of the number is non-zero, she decreases the number by one;  if the last digit of the number is zero, she divides the number by 10 (i.e. removes the last digit). You are given an integer number nn. Tanya will subtract one from it kk times. Your task is to print the result after all kk subtractions.It is guaranteed that the result will be positive integer number.",
  "Title": "A. Wrong Subtraction",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n7\nABACABA\nOutput\nCopy\nAB\n\nInput\nCopy\n5\nZZZAA\nOutput\nCopy\nZZ\n\n",
  "Note": "NoteIn the first example \"BA\" is also valid answer.In the second example the only two-gram \"ZZ\" can be printed because it contained in the string \"ZZZAA\" two times.",
  "Input Description": "The first line of the input contains integer number nn (2\u2264n\u22641002\u2264n\u2264100) \u2014 the length of string ss. The second line of the input contains the string ss consisting of nn capital Latin letters.",
  "Output Description": "Print the only line containing exactly two capital Latin letters \u2014 any two-gram contained in the given string ss as a substring (i.e. two consecutive characters of the string) maximal number of times.",
  "Time Limit": "1 second",
  "Description": "Two-gram is an ordered pair (i.e. string of length two) of capital Latin letters. For example, \"AZ\", \"AA\", \"ZA\" \u2014 three distinct two-grams.You are given a string ss consisting of nn capital Latin letters. Your task is to find any two-gram contained in the given string as a substring (i.e. two consecutive characters of the string) maximal number of times. For example, for string ss = \"BBAABBBA\" the answer is two-gram \"BB\", which contained in ss three times. In other words, find any most frequent two-gram.Note that occurrences of the two-gram can overlap with each other.",
  "Title": "B. Two-gram",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n7 4\n3 7 5 1 10 3 20\nOutput\nCopy\n6\n\nInput\nCopy\n7 2\n3 7 5 1 10 3 20\nOutput\nCopy\n-1\n\n",
  "Note": "NoteIn the first example 55 is also a valid answer because the elements with indices [1,3,4,6][1,3,4,6] is less than or equal to 55 and obviously less than or equal to 66.In the second example you cannot choose any number that only 22 elements of the given sequence will be less than or equal to this number because 33 elements of the given sequence will be also less than or equal to this number.",
  "Input Description": "The first line of the input contains integer numbers nn and kk (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105, 0\u2264k\u2264n0\u2264k\u2264n). The second line of the input contains nn integer numbers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109) \u2014 the sequence itself.",
  "Output Description": "Print any integer number xx from range [1;109][1;109] such that exactly kk elements of given sequence is less or equal to xx.If there is no such xx, print \"-1\" (without quotes).",
  "Time Limit": "2 seconds",
  "Description": "You are given a sequence of integers of length nn and integer number kk. You should print any integer number xx in the range of [1;109][1;109] (i.e. 1\u2264x\u22641091\u2264x\u2264109) such that exactly kk elements of given sequence are less than or equal to xx.Note that the sequence can contain equal elements.If there is no such xx, print \"-1\" (without quotes).",
  "Title": "C. Less or Equal",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n6\n4 8 6 3 12 9\nOutput\nCopy\n9 3 6 12 4 8 \n\nInput\nCopy\n4\n42 28 84 126\nOutput\nCopy\n126 42 84 28 \n\nInput\nCopy\n2\n1000000000000000000 3000000000000000000\nOutput\nCopy\n3000000000000000000 1000000000000000000 \n\n",
  "Note": "NoteIn the first example the given sequence can be rearranged in the following way: [9,3,6,12,4,8][9,3,6,12,4,8]. It can match possible Polycarp's game which started with x=9x=9.",
  "Input Description": "The first line of the input contatins an integer number nn (2\u2264n\u22641002\u2264n\u2264100) \u2014 the number of the elements in the sequence. The second line of the input contains nn integer numbers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22643\u22c510181\u2264ai\u22643\u22c51018) \u2014 rearranged (reordered) sequence that Polycarp can wrote down on the board.",
  "Output Description": "Print nn integer numbers \u2014 rearranged (reordered) input sequence that can be the sequence that Polycarp could write down on the board.It is guaranteed that the answer exists.",
  "Time Limit": "1 second",
  "Description": "Polycarp likes to play with numbers. He takes some integer number xx, writes it down on the board, and then performs with it n\u22121n\u22121 operations of the two kinds:   divide the number xx by 33 (xx must be divisible by 33);  multiply the number xx by 22. After each operation, Polycarp writes down the result on the board and replaces xx by the result. So there will be nn numbers on the board after all.You are given a sequence of length nn \u2014 the numbers that Polycarp wrote down. This sequence is given in arbitrary order, i.e. the order of the sequence can mismatch the order of the numbers written on the board.Your problem is to rearrange (reorder) elements of this sequence in such a way that it can match possible Polycarp's game in the order of the numbers written on the board. I.e. each next number will be exactly two times of the previous number or exactly one third of previous number.It is guaranteed that the answer exists.",
  "Title": "D. Divide by three, multiply by two",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n5 4\n1 2\n3 4\n5 4\n3 5\nOutput\nCopy\n1\n\nInput\nCopy\n17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\nOutput\nCopy\n2\n\n",
  "Note": "NoteIn the first example only component [3,4,5][3,4,5] is also a cycle.The illustration above corresponds to the second example.",
  "Input Description": "The first line contains two integer numbers nn and mm (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105, 0\u2264m\u22642\u22c51050\u2264m\u22642\u22c5105) \u2014 number of vertices and edges.The following mm lines contains edges: edge ii is given as a pair of vertices vivi, uiui (1\u2264vi,ui\u2264n1\u2264vi,ui\u2264n, ui\u2260viui\u2260vi). There is no multiple edges in the given graph, i.e. for each pair (vi,uivi,ui) there no other pairs (vi,uivi,ui) and (ui,viui,vi) in the list of edges.",
  "Output Description": "Print one integer \u2014 the number of connected components which are also cycles.",
  "Time Limit": "2 seconds",
  "Description": "You are given an undirected graph consisting of nn vertices and mm edges. Your task is to find the number of connected components which are cycles.Here are some definitions of graph theory.An undirected graph consists of two sets: set of nodes (called vertices) and set of edges. Each edge connects a pair of vertices. All edges are bidirectional (i.e. if a vertex aa is connected with a vertex bb, a vertex bb is also connected with a vertex aa). An edge can't connect vertex with itself, there is at most one edge between a pair of vertices.Two vertices uu and vv belong to the same connected component if and only if there is at least one path along edges connecting uu and vv.A connected component is a cycle if and only if its vertices can be reordered in such a way that:  the first vertex is connected with the second vertex by an edge,  the second vertex is connected with the third vertex by an edge,  ...  the last vertex is connected with the first vertex by an edge,  all the described edges of a cycle are distinct. A cycle doesn't contain any other edges except described above. By definition any cycle contains three or more vertices.  There are 66 connected components, 22 of them are cycles: [7,10,16][7,10,16] and [5,11,9,15][5,11,9,15]. ",
  "Title": "E. Cyclic Components",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n7\n3 3 4 7 5 6 8\nOutput\nCopy\n4\n2 3 5 6 \n\nInput\nCopy\n6\n1 3 5 2 4 6\nOutput\nCopy\n2\n1 4 \n\nInput\nCopy\n4\n10 9 8 7\nOutput\nCopy\n1\n1 \n\nInput\nCopy\n9\n6 7 8 3 4 5 9 10 11\nOutput\nCopy\n6\n1 2 3 7 8 9 \n\n",
  "Note": "NoteAll valid answers for the first example (as sequences of indices):   [1,3,5,6][1,3,5,6]  [2,3,5,6][2,3,5,6] All valid answers for the second example:   [1,4][1,4]  [2,5][2,5]  [3,6][3,6] All valid answers for the third example:   [1][1]  [2][2]  [3][3]  [4][4] All valid answers for the fourth example:   [1,2,3,7,8,9][1,2,3,7,8,9] ",
  "Input Description": "The first line of the input containing integer number nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105) \u2014 the length of the array. The second line of the input containing nn integer numbers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109) \u2014 the array itself.",
  "Output Description": "On the first line print kk \u2014 the maximum length of the subsequence of the given array that forms an increasing sequence of consecutive integers.On the second line print the sequence of the indices of the any maximum length subsequence of the given array that forms an increasing sequence of consecutive integers.",
  "Time Limit": "2 seconds",
  "Description": "You are given an integer array of length nn.You have to choose some subsequence of this array of maximum length such that this subsequence forms a increasing sequence of consecutive integers. In other words the required sequence should be equal to [x,x+1,\u2026,x+k\u22121][x,x+1,\u2026,x+k\u22121] for some value xx and length kk.Subsequence of an array can be obtained by erasing some (possibly zero) elements from the array. You can erase any elements, not necessarily going successively. The remaining elements preserve their order. For example, for the array [5,3,1,2,4][5,3,1,2,4] the following arrays are subsequences: [3][3], [5,3,1,2,4][5,3,1,2,4], [5,1,4][5,1,4], but the array [1,3][1,3] is not.",
  "Title": "F. Consecutive Subsequence",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n6\n1 5 5 1 6 1\nOutput\nCopy\n3\n5 6 1 \n\nInput\nCopy\n5\n2 4 2 4 4\nOutput\nCopy\n2\n2 4 \n\nInput\nCopy\n5\n6 6 6 6 6\nOutput\nCopy\n1\n6 \n\n",
  "Note": "NoteIn the first example you should remove two integers 11, which are in the positions 11 and 44. Also you should remove the integer 55, which is in the position 22.In the second example you should remove integer 22, which is in the position 11, and two integers 44, which are in the positions 22 and 44.In the third example you should remove four integers 66, which are in the positions 11, 22, 33 and 44.",
  "Input Description": "The first line contains a single integer nn (1\u2264n\u2264501\u2264n\u226450) \u2014 the number of elements in Petya's array.The following line contains a sequence a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u226410001\u2264ai\u22641000) \u2014 the Petya's array.",
  "Output Description": "In the first line print integer xx \u2014 the number of elements which will be left in Petya's array after he removed the duplicates.In the second line print xx integers separated with a space \u2014 Petya's array after he removed the duplicates. For each unique element only the rightmost entry should be left.",
  "Time Limit": "1 second",
  "Description": "Petya has an array aa consisting of nn integers. He wants to remove duplicate (equal) elements.Petya wants to leave only the rightmost entry (occurrence) for each element of the array. The relative order of the remaining unique elements should not be changed.",
  "Title": "A. Remove Duplicates",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n6\nxxxiii\nOutput\nCopy\n1\n\nInput\nCopy\n5\nxxoxx\nOutput\nCopy\n0\n\nInput\nCopy\n10\nxxxxxxxxxx\nOutput\nCopy\n8\n\n",
  "Note": "NoteIn the first example Polycarp tried to send a file with name contains number 3333, written in Roman numerals. But he can not just send the file, because it name contains three letters \"x\" in a row. To send the file he needs to remove any one of this letters.",
  "Input Description": "The first line contains integer nn (3\u2264n\u2264100)(3\u2264n\u2264100) \u2014 the length of the file name.The second line contains a string of length nn consisting of lowercase Latin letters only \u2014 the file name.",
  "Output Description": "Print the minimum number of characters to remove from the file name so after that the name does not contain \"xxx\" as a substring. If initially the file name dost not contain a forbidden substring \"xxx\", print 0.",
  "Time Limit": "1 second",
  "Description": "You can not just take the file and send it. When Polycarp trying to send a file in the social network \"Codehorses\", he encountered an unexpected problem. If the name of the file contains three or more \"x\" (lowercase Latin letters \"x\") in a row, the system considers that the file content does not correspond to the social network topic. In this case, the file is not sent and an error message is displayed.Determine the minimum number of characters to remove from the file name so after that the name does not contain \"xxx\" as a substring. Print 0 if the file name does not initially contain a forbidden substring \"xxx\".You can delete characters in arbitrary positions (not necessarily consecutive). If you delete a character, then the length of a string is reduced by 11. For example, if you delete the character in the position 22 from the string \"exxxii\", then the resulting string is \"exxii\".",
  "Title": "B. File Name",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n3 6\n10 15 12\n1 9 12 23 26 37\nOutput\nCopy\n1 1\n1 9\n2 2\n2 13\n3 1\n3 12\n\nInput\nCopy\n2 3\n5 10000000000\n5 6 9999999999\nOutput\nCopy\n1 5\n2 1\n2 9999999994\n\n",
  "Note": "NoteIn the first example letters should be delivered in the following order:  the first letter in room 11 of the first dormitory  the second letter in room 99 of the first dormitory  the third letter in room 22 of the second dormitory  the fourth letter in room 1313 of the second dormitory  the fifth letter in room 11 of the third dormitory  the sixth letter in room 1212 of the third dormitory ",
  "Input Description": "The first line contains two integers nn and mm (1\u2264n,m\u22642\u22c5105)(1\u2264n,m\u22642\u22c5105) \u2014 the number of dormitories and the number of letters.The second line contains a sequence a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641010)(1\u2264ai\u22641010), where aiai equals to the number of rooms in the ii-th dormitory. The third line contains a sequence b1,b2,\u2026,bmb1,b2,\u2026,bm (1\u2264bj\u2264a1+a2+\u22ef+an)(1\u2264bj\u2264a1+a2+\u22ef+an), where bjbj equals to the room number (among all rooms of all dormitories) for the jj-th letter. All bjbj are given in increasing order.",
  "Output Description": "Print mm lines. For each letter print two integers ff and kk \u2014 the dormitory number ff (1\u2264f\u2264n)(1\u2264f\u2264n) and the room number kk in this dormitory (1\u2264k\u2264af)(1\u2264k\u2264af) to deliver the letter.",
  "Time Limit": "4 seconds",
  "Description": "There are nn dormitories in Berland State University, they are numbered with integers from 11 to nn. Each dormitory consists of rooms, there are aiai rooms in ii-th dormitory. The rooms in ii-th dormitory are numbered from 11 to aiai.A postman delivers letters. Sometimes there is no specific dormitory and room number in it on an envelope. Instead of it only a room number among all rooms of all nn dormitories is written on an envelope. In this case, assume that all the rooms are numbered from 11 to a1+a2+\u22ef+ana1+a2+\u22ef+an and the rooms of the first dormitory go first, the rooms of the second dormitory go after them and so on.For example, in case n=2n=2, a1=3a1=3 and a2=5a2=5 an envelope can have any integer from 11 to 88 written on it. If the number 77 is written on an envelope, it means that the letter should be delivered to the room number 44 of the second dormitory.For each of mm letters by the room number among all nn dormitories, determine the particular dormitory and the room number in a dormitory where this letter should be delivered.",
  "Title": "C. Letters",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n4\n24 21 14 10\nOutput\nCopy\n3\n\nInput\nCopy\n2\n500 500\nOutput\nCopy\n0\n\nInput\nCopy\n3\n14 5 1\nOutput\nCopy\n-1\n\nInput\nCopy\n5\n1 3 6 9 12\nOutput\nCopy\n1\n\n",
  "Note": "NoteIn the first example Polycarp should increase the first number on 11, decrease the second number on 11, increase the third number on 11, and the fourth number should left unchanged. So, after Polycarp changed three elements by one, his sequence became equals to [25,20,15,10][25,20,15,10], which is an arithmetic progression.In the second example Polycarp should not change anything, because his sequence is an arithmetic progression.In the third example it is impossible to make an arithmetic progression.In the fourth example Polycarp should change only the first element, he should decrease it on one. After that his sequence will looks like [0,3,6,9,12][0,3,6,9,12], which is an arithmetic progression.",
  "Input Description": "The first line contains a single integer nn (1\u2264n\u2264100000)(1\u2264n\u2264100000) \u2014 the number of elements in bb.The second line contains a sequence b1,b2,\u2026,bnb1,b2,\u2026,bn (1\u2264bi\u2264109)(1\u2264bi\u2264109).",
  "Output Description": "If it is impossible to make an arithmetic progression with described operations, print -1. In the other case, print non-negative integer \u2014 the minimum number of elements to change to make the given sequence becomes an arithmetic progression. The only allowed operation is to add/to subtract one from an element (can't use operation twice to the same position).",
  "Time Limit": "1 second",
  "Description": "Polycarp likes arithmetic progressions. A sequence [a1,a2,\u2026,an][a1,a2,\u2026,an] is called an arithmetic progression if for each ii (1\u2264i<n1\u2264i<n) the value ai+1\u2212aiai+1\u2212ai is the same. For example, the sequences [42][42], [5,5,5][5,5,5], [2,11,20,29][2,11,20,29] and [3,2,1,0][3,2,1,0] are arithmetic progressions, but [1,0,1][1,0,1], [1,3,9][1,3,9] and [2,3,1][2,3,1] are not.It follows from the definition that any sequence of length one or two is an arithmetic progression.Polycarp found some sequence of positive integers [b1,b2,\u2026,bn][b1,b2,\u2026,bn]. He agrees to change each element by at most one. In the other words, for each element there are exactly three options: an element can be decreased by 11, an element can be increased by 11, an element can be left unchanged.Determine a minimum possible number of elements in bb which can be changed (by exactly one), so that the sequence bb becomes an arithmetic progression, or report that it is impossible.It is possible that the resulting sequence contains element equals 00.",
  "Title": "D. Almost Arithmetic Progression",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n3 5\n2 1 -3\nOutput\nCopy\n3\n\nInput\nCopy\n2 4\n-1 1\nOutput\nCopy\n4\n\nInput\nCopy\n4 10\n2 4 1 2\nOutput\nCopy\n2\n\n",
  "Note": "NoteIn the first example initially in the bus could be 00, 11 or 22 passengers.In the second example initially in the bus could be 11, 22, 33 or 44 passengers.In the third example initially in the bus could be 00 or 11 passenger.",
  "Input Description": "The first line contains two integers nn and ww (1\u2264n\u22641000,1\u2264w\u2264109)(1\u2264n\u22641000,1\u2264w\u2264109) \u2014 the number of bus stops and the capacity of the bus.The second line contains a sequence a1,a2,\u2026,ana1,a2,\u2026,an (\u2212106\u2264ai\u2264106)(\u2212106\u2264ai\u2264106), where aiai equals to the number, which has been recorded by the video system after the ii-th bus stop.",
  "Output Description": "Print the number of possible ways how many people could be in the bus before the first bus stop, if the bus has a capacity equals to ww. If the situation is contradictory (i.e. for any initial number of passengers there will be a contradiction), print 0.",
  "Time Limit": "1 second",
  "Description": "The busses in Berland are equipped with a video surveillance system. The system records information about changes in the number of passengers in a bus after stops.If xx is the number of passengers in a bus just before the current bus stop and yy is the number of passengers in the bus just after current bus stop, the system records the number y\u2212xy\u2212x. So the system records show how number of passengers changed.The test run was made for single bus and nn bus stops. Thus, the system recorded the sequence of integers a1,a2,\u2026,ana1,a2,\u2026,an (exactly one number for each bus stop), where aiai is the record for the bus stop ii. The bus stops are numbered from 11 to nn in chronological order.Determine the number of possible ways how many people could be in the bus before the first bus stop, if the bus has a capacity equals to ww (that is, at any time in the bus there should be from 00 to ww passengers inclusive).",
  "Title": "E. Bus Video System",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n4 2\n10 4 10 15\n1 2\n4 3\nOutput\nCopy\n0 0 1 2 \n\nInput\nCopy\n10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\nOutput\nCopy\n5 4 0 5 3 3 9 0 2 5 \n\n",
  "Note": "NoteIn the first example, the first programmer can not be mentor of any other (because only the second programmer has a skill, lower than first programmer skill, but they are in a quarrel). The second programmer can not be mentor of any other programmer, because his skill is minimal among others. The third programmer can be a mentor of the second programmer. The fourth programmer can be a mentor of the first and of the second programmers. He can not be a mentor of the third programmer, because they are in a quarrel.",
  "Input Description": "The first line contains two integers nn and kk (2\u2264n\u22642\u22c5105(2\u2264n\u22642\u22c5105, 0\u2264k\u2264min(2\u22c5105,n\u22c5(n\u22121)2))0\u2264k\u2264min(2\u22c5105,n\u22c5(n\u22121)2)) \u2014 total number of programmers and number of pairs of programmers which are in a quarrel.The second line contains a sequence of integers r1,r2,\u2026,rnr1,r2,\u2026,rn (1\u2264ri\u2264109)(1\u2264ri\u2264109), where riri equals to the skill of the ii-th programmer.Each of the following kk lines contains two distinct integers xx, yy (1\u2264x,y\u2264n(1\u2264x,y\u2264n, x\u2260y)x\u2260y) \u2014 pair of programmers in a quarrel. The pairs are unordered, it means that if xx is in a quarrel with yy then yy is in a quarrel with xx. Guaranteed, that for each pair (x,y)(x,y) there are no other pairs (x,y)(x,y) and (y,x)(y,x) in the input.",
  "Output Description": "Print nn integers, the ii-th number should be equal to the number of programmers, for which the ii-th programmer can be a mentor. Programmers are numbered in the same order that their skills are given in the input.",
  "Time Limit": "3 seconds",
  "Description": "In BerSoft nn programmers work, the programmer ii is characterized by a skill riri.A programmer aa can be a mentor of a programmer bb if and only if the skill of the programmer aa is strictly greater than the skill of the programmer bb (ra>rb)(ra>rb) and programmers aa and bb are not in a quarrel.You are given the skills of each programmers and a list of kk pairs of the programmers, which are in a quarrel (pairs are unordered). For each programmer ii, find the number of programmers, for which the programmer ii can be a mentor.",
  "Title": "F. Mentors",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n5 2\n1 3 1\n1 5 1\nOutput\nCopy\n1 2 3 0 3 \n\nInput\nCopy\n3 2\n1 3 1\n1 2 1\nOutput\nCopy\n-1\n\nInput\nCopy\n10 3\n4 7 2\n1 10 3\n8 9 1\nOutput\nCopy\n2 2 2 1 1 0 4 3 4 4 \n\n",
  "Note": "NoteIn the first example Petya can, for example, prepare for exam 11 in the first day, prepare for exam 22 in the second day, pass exam 11 in the third day, relax in the fourth day, and pass exam 22 in the fifth day. So, he can prepare and pass all exams.In the second example, there are three days and two exams. So, Petya can prepare in only one day (because in two other days he should pass exams). Then Petya can not prepare and pass all exams.",
  "Input Description": "The first line contains two integers nn and mm (2\u2264n\u2264100,1\u2264m\u2264n)(2\u2264n\u2264100,1\u2264m\u2264n) \u2014 the number of days and the number of exams.Each of the following mm lines contains three integers sisi, didi, cici (1\u2264si<di\u2264n,1\u2264ci\u2264n)(1\u2264si<di\u2264n,1\u2264ci\u2264n) \u2014 the day, when questions for the ii-th exam will be given, the day of the ii-th exam, number of days Petya needs to prepare for the ii-th exam. Guaranteed, that all the exams will be in different days. Questions for different exams can be given in the same day. It is possible that, in the day of some exam, the questions for other exams are given.",
  "Output Description": "If Petya can not prepare and pass all the exams, print -1. In case of positive answer, print nn integers, where the jj-th number is:  (m+1)(m+1), if the jj-th day is a day of some exam (recall that in each day no more than one exam is conducted),  zero, if in the jj-th day Petya will have a rest,  ii (1\u2264i\u2264m1\u2264i\u2264m), if Petya will prepare for the ii-th exam in the day jj (the total number of days Petya prepares for each exam should be strictly equal to the number of days needed to prepare for it).Assume that the exams are numbered in order of appearing in the input, starting from 11.If there are multiple schedules, print any of them.",
  "Time Limit": "1 second",
  "Description": "Petya studies at university. The current academic year finishes with nn special days. Petya needs to pass mm exams in those special days. The special days in this problem are numbered from 11 to nn.There are three values about each exam:  sisi \u2014 the day, when questions for the ii-th exam will be published,  didi \u2014 the day of the ii-th exam (si<disi<di),  cici \u2014 number of days Petya needs to prepare for the ii-th exam. For the ii-th exam Petya should prepare in days between sisi and di\u22121di\u22121, inclusive. There are three types of activities for Petya in each day: to spend a day doing nothing (taking a rest), to spend a day passing exactly one exam or to spend a day preparing for exactly one exam. So he can't pass/prepare for multiple exams in a day. He can't mix his activities in a day. If he is preparing for the ii-th exam in day jj, then si\u2264j<disi\u2264j<di.It is allowed to have breaks in a preparation to an exam and to alternate preparations for different exams in consecutive days. So preparation for an exam is not required to be done in consecutive days.Find the schedule for Petya to prepare for all exams and pass them, or report that it is impossible.",
  "Title": "G. Petya's Exams",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n3\nOutput\nCopy\n2\n\nInput\nCopy\n4\nOutput\nCopy\n5\n\n",
  "Note": "NoteTo cut the round pizza into quarters one has to make two cuts through the center with angle 90\u221890\u2218 between them.To cut the round pizza into five equal parts one has to make five cuts.",
  "Input Description": "A single line contains one non-negative integer nn (0\u2264n\u226410180\u2264n\u22641018)\u00a0\u2014 the number of Shiro's friends. The circular pizza has to be sliced into n+1n+1 pieces.",
  "Output Description": "A single integer\u00a0\u2014 the number of straight cuts Shiro needs.",
  "Time Limit": "1 second",
  "Description": "Katie, Kuro and Shiro are best friends. They have known each other since kindergarten. That's why they often share everything with each other and work together on some very hard problems.Today is Shiro's birthday. She really loves pizza so she wants to invite her friends to the pizza restaurant near her house to celebrate her birthday, including her best friends Katie and Kuro.She has ordered a very big round pizza, in order to serve her many friends. Exactly nn of Shiro's friends are here. That's why she has to divide the pizza into n+1n+1 slices (Shiro also needs to eat). She wants the slices to be exactly the same size and shape. If not, some of her friends will get mad and go home early, and the party will be over.Shiro is now hungry. She wants to cut the pizza with minimum of straight cuts. A cut is a straight segment, it might have ends inside or outside the pizza. But she is too lazy to pick up the calculator.As usual, she will ask Katie and Kuro for help. But they haven't come yet. Could you help Shiro with this problem?",
  "Title": "A. Pizza, Pizza, Pizza!!!",
  "Memory Limit": "128 megabytes"
}{
  "Example": "Input\nCopy\n3\nKuroo\nShiro\nKatie\nOutput\nCopy\nKuro\n\nInput\nCopy\n7\ntreasurehunt\nthreefriends\nhiCodeforces\nOutput\nCopy\nShiro\n\nInput\nCopy\n1\nabcabc\ncbabac\nababca\nOutput\nCopy\nKatie\n\nInput\nCopy\n15\nfoPaErcvJ\nmZaxowpbt\nmkuOlaHRE\nOutput\nCopy\nDraw\n\n",
  "Note": "NoteIn the first example, after 33 turns, Kuro can change his ribbon into ooooo, which has the beauty of 55, while reaching such beauty for Shiro and Katie is impossible (both Shiro and Katie can reach the beauty of at most 44, for example by changing Shiro's ribbon into SSiSS and changing Katie's ribbon into Kaaaa). Therefore, the winner is Kuro.In the fourth example, since the length of each of the string is 99 and the number of turn is 1515, everyone can change their ribbons in some way to reach the maximal beauty of 99 by changing their strings into zzzzzzzzz after 9 turns, and repeatedly change their strings into azzzzzzzz and then into zzzzzzzzz thrice. Therefore, the game ends in a draw.",
  "Input Description": "The first line contains an integer nn (0\u2264n\u22641090\u2264n\u2264109)\u00a0\u2014 the number of turns.Next 3 lines contain 3 ribbons of Kuro, Shiro and Katie one per line, respectively. Each ribbon is a string which contains no more than 105105 uppercase and lowercase Latin letters and is not empty. It is guaranteed that the length of all ribbons are equal for the purpose of fairness. Note that uppercase and lowercase letters are considered different colors.",
  "Output Description": "Print the name of the winner (\"Kuro\", \"Shiro\" or \"Katie\"). If there are at least two cats that share the maximum beauty, print \"Draw\".",
  "Time Limit": "1 second",
  "Description": "After the big birthday party, Katie still wanted Shiro to have some more fun. Later, she came up with a game called treasure hunt. Of course, she invited her best friends Kuro and Shiro to play with her.The three friends are very smart so they passed all the challenges very quickly and finally reached the destination. But the treasure can only belong to one cat so they started to think of something which can determine who is worthy of the treasure. Instantly, Kuro came up with some ribbons.A random colorful ribbon is given to each of the cats. Each color of the ribbon can be represented as an uppercase or lowercase Latin letter. Let's call a consecutive subsequence of colors that appears in the ribbon a subribbon. The beauty of a ribbon is defined as the maximum number of times one of its subribbon appears in the ribbon. The more the subribbon appears, the more beautiful is the ribbon. For example, the ribbon aaaaaaa has the beauty of 77 because its subribbon a appears 77 times, and the ribbon abcdabc has the beauty of 22 because its subribbon abc appears twice.The rules are simple. The game will have nn turns. Every turn, each of the cats must change strictly one color (at one position) in his/her ribbon to an arbitrary color which is different from the unchanged one. For example, a ribbon aaab can be changed into acab in one turn. The one having the most beautiful ribbon after nn turns wins the treasure.Could you find out who is going to be the winner if they all play optimally?",
  "Title": "B. Treasure Hunt",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n3 1 3\n1 2\n2 3\nOutput\nCopy\n5\n\nInput\nCopy\n3 1 3\n1 2\n1 3\nOutput\nCopy\n4\n\n",
  "Note": "NoteOn the first example, Kuro can choose these pairs:   (1,2)(1,2): his route would be 1\u219221\u21922,  (2,3)(2,3): his route would be 2\u219232\u21923,  (3,2)(3,2): his route would be 3\u219223\u21922,  (2,1)(2,1): his route would be 2\u219212\u21921,  (3,1)(3,1): his route would be 3\u21922\u219213\u21922\u21921. Kuro can't choose pair (1,3)(1,3) since his walking route would be 1\u21922\u219231\u21922\u21923, in which Kuro visits town 11 (Flowrisa) and then visits town 33 (Beetopia), which is not allowed (note that pair (3,1)(3,1) is still allowed because although Kuro visited Flowrisa and Beetopia, he did not visit them in that order).On the second example, Kuro can choose the following pairs:   (1,2)(1,2): his route would be 1\u219221\u21922,  (2,1)(2,1): his route would be 2\u219212\u21921,  (3,2)(3,2): his route would be 3\u21921\u219223\u21921\u21922,  (3,1)(3,1): his route would be 3\u219213\u21921. ",
  "Input Description": "The first line contains three integers nn, xx and yy (1\u2264n\u22643\u22c51051\u2264n\u22643\u22c5105, 1\u2264x,y\u2264n1\u2264x,y\u2264n, x\u2260yx\u2260y) - the number of towns, index of the town Flowrisa and index of the town Beetopia, respectively.n\u22121n\u22121 lines follow, each line contains two integers aa and bb (1\u2264a,b\u2264n1\u2264a,b\u2264n, a\u2260ba\u2260b), describes a road connecting two towns aa and bb.It is guaranteed that from each town, we can reach every other town in the city using the given roads. That is, the given map of towns and roads is a tree.",
  "Output Description": "A single integer resembles the number of pair of towns (u,v)(u,v) that Kuro can use as his walking route.",
  "Time Limit": "2 seconds",
  "Description": "Kuro is living in a country called Uberland, consisting of nn towns, numbered from 11 to nn, and n\u22121n\u22121 bidirectional roads connecting these towns. It is possible to reach each town from any other. Each road connects two towns aa and bb. Kuro loves walking and he is planning to take a walking marathon, in which he will choose a pair of towns (u,v)(u,v) (u\u2260vu\u2260v) and walk from uu using the shortest path to vv (note that (u,v)(u,v) is considered to be different from (v,u)(v,u)).Oddly, there are 2 special towns in Uberland named Flowrisa (denoted with the index xx) and Beetopia (denoted with the index yy). Flowrisa is a town where there are many strong-scent flowers, and Beetopia is another town where many bees live. In particular, Kuro will avoid any pair of towns (u,v)(u,v) if on the path from uu to vv, he reaches Beetopia after he reached Flowrisa, since the bees will be attracted with the flower smell on Kuro\u2019s body and sting him.Kuro wants to know how many pair of city (u,v)(u,v) he can take as his route. Since he\u2019s not really bright, he asked you to help him with this problem.",
  "Title": "C. Kuro and Walking Route",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n5\n1 1\n1 2\n2 1 1 3\n2 1 1 2\n2 1 1 1\nOutput\nCopy\n2\n1\n-1\n\nInput\nCopy\n10\n1 9\n2 9 9 22\n2 3 3 18\n1 25\n2 9 9 20\n2 25 25 14\n1 20\n2 26 26 3\n1 14\n2 20 20 9\nOutput\nCopy\n9\n9\n9\n-1\n-1\n-1\n\n",
  "Note": "NoteIn the first example, there are 5 tasks:   The first task requires you to add 11 into aa. aa is now {1}{1}.  The second task requires you to add 22 into aa. aa is now {1,2}{1,2}.  The third task asks you a question with x=1x=1, k=1k=1 and s=3s=3. Taking both 11 and 22 as vv satisfies 1\u2223GCD(1,v)1\u2223GCD(1,v) and 1+v\u226431+v\u22643. Because 2\u22951=3>1\u22951=02\u22951=3>1\u22951=0, 22 is the answer to this task.  The fourth task asks you a question with x=1x=1, k=1k=1 and s=2s=2. Only v=1v=1 satisfies 1\u2223GCD(1,v)1\u2223GCD(1,v) and 1+v\u226421+v\u22642, so 11 is the answer to this task.  The fifth task asks you a question with x=1x=1, k=1k=1 and s=1s=1. There are no elements in aa that satisfy the conditions, so we report -1 as the answer to this task. ",
  "Input Description": "The first line contains one integer qq (2\u2264q\u22641052\u2264q\u2264105) \u2014 the number of tasks the game wants you to perform.qq lines follow, each line begins with an integer titi \u2014 the type of the task:   If ti=1ti=1, an integer uiui follow (1\u2264ui\u22641051\u2264ui\u2264105) \u2014 you have to add uiui to the array aa.  If ti=2ti=2, three integers xixi, kiki, and sisi follow (1\u2264xi,ki,si\u22641051\u2264xi,ki,si\u2264105) \u2014 you must find a number vv existing in the array aa such that ki\u2223GCD(xi,v)ki\u2223GCD(xi,v), xi+v\u2264sixi+v\u2264si, and xi\u2295vxi\u2295v is maximized, where \u2295\u2295 denotes the XOR operation, or report -1 if no such numbers are found. It is guaranteed that the type of the first task is type 11, and there exists at least one task of type 22.",
  "Output Description": "For each task of type 22, output on one line the desired number vv, or -1 if no such numbers are found.",
  "Time Limit": "2 seconds",
  "Description": "Kuro is currently playing an educational game about numbers. The game focuses on the greatest common divisor (GCD), the XOR value, and the sum of two numbers. Kuro loves the game so much that he solves levels by levels day by day.Sadly, he's going on a vacation for a day, and he isn't able to continue his solving streak on his own. As Katie is a reliable person, Kuro kindly asked her to come to his house on this day to play the game for him.Initally, there is an empty array aa. The game consists of qq tasks of two types. The first type asks Katie to add a number uiui to aa. The second type asks Katie to find a number vv existing in aa such that ki\u2223GCD(xi,v)ki\u2223GCD(xi,v), xi+v\u2264sixi+v\u2264si, and xi\u2295vxi\u2295v is maximized, where \u2295\u2295 denotes the bitwise XOR operation, GCD(c,d)GCD(c,d) denotes the greatest common divisor of integers cc and dd, and y\u2223xy\u2223x means xx is divisible by yy, or report -1 if no such numbers are found.Since you are a programmer, Katie needs you to automatically and accurately perform the tasks in the game to satisfy her dear friend Kuro. Let's help her!",
  "Title": "D. Kuro and GCD and XOR and SUM",
  "Memory Limit": "512 megabytes"
}{
  "Example": "Input\nCopy\n3 1\n-1 0 1\nOutput\nCopy\n6\n\nInput\nCopy\n2 1\n1 0\nOutput\nCopy\n1\n\nInput\nCopy\n1 1\n-1\nOutput\nCopy\n2\n\n",
  "Note": "NoteIn the first example, there are 66 ways to color the pieces and add the arrows, as are shown in the figure below. The scores are 3,3,53,3,5 for the first row and 5,3,35,3,3 for the second row, both from left to right.  ",
  "Input Description": "The first line contains two integers nn and pp (1\u2264n\u2264501\u2264n\u226450, 0\u2264p\u226410\u2264p\u22641) \u2014 the number of pieces and Kuro's wanted parity.The second line contains nn integers c1,c2,...,cnc1,c2,...,cn (\u22121\u2264ci\u22641\u22121\u2264ci\u22641) \u2014 the colors of the pieces.",
  "Output Description": "Print a single integer \u2014 the number of ways to put the arrows and choose colors so the number of valid paths of alternating colors has the parity of pp.",
  "Time Limit": "1 second",
  "Description": "Kuro has recently won the \"Most intelligent cat ever\" contest. The three friends then decided to go to Katie's home to celebrate Kuro's winning. After a big meal, they took a small break then started playing games.Kuro challenged Katie to create a game with only a white paper, a pencil, a pair of scissors and a lot of arrows (you can assume that the number of arrows is infinite). Immediately, Katie came up with the game called Topological Parity.The paper is divided into nn pieces enumerated from 11 to nn. Shiro has painted some pieces with some color. Specifically, the ii-th piece has color cici where ci=0ci=0 defines black color, ci=1ci=1 defines white color and ci=\u22121ci=\u22121 means that the piece hasn't been colored yet.The rules of the game is simple. Players must put some arrows between some pairs of different pieces in such a way that for each arrow, the number in the piece it starts from is less than the number of the piece it ends at. Also, two different pieces can only be connected by at most one arrow. After that the players must choose the color (00 or 11) for each of the unpainted pieces. The score of a valid way of putting the arrows and coloring pieces is defined as the number of paths of pieces of alternating colors. For example, [1\u21920\u21921\u21920][1\u21920\u21921\u21920], [0\u21921\u21920\u21921][0\u21921\u21920\u21921], [1][1], [0][0] are valid paths and will be counted. You can only travel from piece xx to piece yy if and only if there is an arrow from xx to yy.But Kuro is not fun yet. He loves parity. Let's call his favorite parity pp where p=0p=0 stands for \"even\" and p=1p=1 stands for \"odd\". He wants to put the arrows and choose colors in such a way that the score has the parity of pp.It seems like there will be so many ways which satisfy Kuro. He wants to count the number of them but this could be a very large number. Let's help him with his problem, but print it modulo 109+7109+7.",
  "Title": "E. Kuro and Topological Parity",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n-o-o--\nOutput\nCopy\nYES\n\nInput\nCopy\n-o---\nOutput\nCopy\nYES\n\nInput\nCopy\n-o---o-\nOutput\nCopy\nNO\n\nInput\nCopy\nooo\nOutput\nCopy\nYES\n\n",
  "Note": "",
  "Input Description": "The only line of input contains a string ss (3\u2264|s|\u22641003\u2264|s|\u2264100), representing the necklace, where a dash '-' represents a link and the lowercase English letter 'o' represents a pearl.",
  "Output Description": "Print \"YES\" if the links and pearls can be rejoined such that the number of links between adjacent pearls is equal. Otherwise print \"NO\".You can print each letter in any case (upper or lower).",
  "Time Limit": "1 second",
  "Description": "A necklace can be described as a string of links ('-') and pearls ('o'), with the last link or pearl connected to the first one.  You can remove a link or a pearl and insert it between two other existing links or pearls (or between a link and a pearl) on the necklace. This process can be repeated as many times as you like, but you can't throw away any parts.Can you make the number of links between every two adjacent pearls equal? Two pearls are considered to be adjacent if there is no other pearl between them.Note that the final necklace should remain as one circular part of the same length as the initial necklace.",
  "Title": "A. Links and Pearls",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n7 2\nOutput\nCopy\nYES\n.......\n.#.....\n.#.....\n.......\n\nInput\nCopy\n5 3\nOutput\nCopy\nYES\n.....\n.###.\n.....\n.....\n\n",
  "Note": "",
  "Input Description": "The first line of input contain two integers, nn and kk (3\u2264n\u2264993\u2264n\u226499, 0\u2264k\u22642\u00d7(n\u22122)0\u2264k\u22642\u00d7(n\u22122)), nn is odd, the width of the city, and the number of hotels to be placed, respectively.",
  "Output Description": "Print \"YES\", if it is possible to place all the hotels in a way that satisfies the problem statement, otherwise print \"NO\".If it is possible, print an extra 44 lines that describe the city, each line should have nn characters, each of which is \"#\" if that cell has a hotel on it, or \".\" if not.",
  "Time Limit": "1 second",
  "Description": "The city of Fishtopia can be imagined as a grid of 44 rows and an odd number of columns. It has two main villages; the first is located at the top-left cell (1,1)(1,1), people who stay there love fishing at the Tuna pond at the bottom-right cell (4,n)(4,n). The second village is located at (4,1)(4,1) and its people love the Salmon pond at (1,n)(1,n).The mayor of Fishtopia wants to place kk hotels in the city, each one occupying one cell. To allow people to enter the city from anywhere, hotels should not be placed on the border cells.A person can move from one cell to another if those cells are not occupied by hotels and share a side.Can you help the mayor place the hotels in a way such that there are equal number of shortest paths from each village to its preferred pond?",
  "Title": "B. Marlin",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n4 3\n2 14 3 4\nOutput\nCopy\n0 12 3 3\n\nInput\nCopy\n5 2\n0 2 1 255 254\nOutput\nCopy\n0 1 1 254 254\n\n",
  "Note": "NoteOne possible way to group colors and assign keys for the first sample:Color 22 belongs to the group [0,2][0,2], with group key 00.Color 1414 belongs to the group [12,14][12,14], with group key 1212.Colors 33 and 44 belong to group [3,5][3,5], with group key 33.Other groups won't affect the result so they are not listed here.",
  "Input Description": "The first line of input contains two integers nn and kk (1\u2264n\u22641051\u2264n\u2264105, 1\u2264k\u22642561\u2264k\u2264256), the number of pixels in the image, and the maximum size of a group, respectively.The second line contains nn integers p1,p2,\u2026,pnp1,p2,\u2026,pn (0\u2264pi\u22642550\u2264pi\u2264255), where pipi is the color of the ii-th pixel.",
  "Output Description": "Print nn space-separated integers; the lexicographically smallest possible array that represents the image after applying the Posterization filter.",
  "Time Limit": "1 second",
  "Description": "Professor Ibrahim has prepared the final homework for his algorithm\u2019s class. He asked his students to implement the Posterization Image Filter.Their algorithm will be tested on an array of integers, where the ii-th integer represents the color of the ii-th pixel in the image. The image is in black and white, therefore the color of each pixel will be an integer between 0 and 255 (inclusive).To implement the filter, students are required to divide the black and white color range [0, 255] into groups of consecutive colors, and select one color in each group to be the group\u2019s key. In order to preserve image details, the size of a group must not be greater than kk, and each color should belong to exactly one group.Finally, the students will replace the color of each pixel in the array with that color\u2019s assigned group key.To better understand the effect, here is an image of a basking turtle where the Posterization Filter was applied with increasing kk to the right.   To make the process of checking the final answer easier, Professor Ibrahim wants students to divide the groups and assign the keys in a way that produces the lexicographically smallest possible array.",
  "Title": "C. Posterized",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n2\n5 5\nOutput\nCopy\n3 0\n\nInput\nCopy\n5\n5 -4 2 1 8\nOutput\nCopy\n5 5 3 2 0\n\nInput\nCopy\n1\n0\nOutput\nCopy\n1\n\n",
  "Note": "",
  "Input Description": "The first line of input contains a single integer nn (1\u2264n\u226450001\u2264n\u22645000), the size of the array.The second line contains nn integers a1a1,a2a2,\u2026\u2026,anan (\u2212108\u2264ai\u2264108\u2212108\u2264ai\u2264108), the values of the array.",
  "Output Description": "Output nn space-separated integers, the kk-th integer should be the number of contiguous subarrays of AA that have an answer to the problem equal to kk.",
  "Time Limit": "1 second",
  "Description": "SaMer has written the greatest test case of all time for one of his problems. For a given array of integers, the problem asks to find the minimum number of groups the array can be divided into, such that the product of any pair of integers in the same group is a perfect square. Each integer must be in exactly one group. However, integers in a group do not necessarily have to be contiguous in the array.SaMer wishes to create more cases from the test case he already has. His test case has an array AA of nn integers, and he needs to find the number of contiguous subarrays of AA that have an answer to the problem equal to kk for each integer kk between 11 and nn (inclusive).",
  "Title": "D. Perfect Groups",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n6 3\n2 1\n2 6\n4 2\n5 6\n2 3\nOutput\nCopy\n1 3 4\n\nInput\nCopy\n8 4\n2 6\n2 7\n7 8\n1 2\n3 1\n2 4\n7 5\nOutput\nCopy\n1 3 4 5\n\n",
  "Note": "NoteIn the first sample, the maximum possible total number of fans is 22+25+26=10022+25+26=100. We can achieve it by removing the contestants of the districts 1, 3, and 4.",
  "Input Description": "The first line of input contains two integers nn and kk (1\u2264k<n\u22641061\u2264k<n\u2264106)\u00a0\u2014 the number of districts in Panel, and the number of contestants the president wishes to remove, respectively.The next n\u22121n\u22121 lines each contains two integers aa and bb (1\u2264a,b\u2264n1\u2264a,b\u2264n, a\u2260ba\u2260b), that describe a road that connects two different districts aa and bb in the nation. It is guaranteed that there is exactly one path between every two districts.",
  "Output Description": "Print kk space-separated integers: the numbers of the districts of which the contestants should be removed, in increasing order of district number.",
  "Time Limit": "3 seconds",
  "Description": "The nation of Panel holds an annual show called The Number Games, where each district in the nation will be represented by one contestant.The nation has nn districts numbered from 11 to nn, each district has exactly one path connecting it to every other district. The number of fans of a contestant from district ii is equal to 2i2i.This year, the president decided to reduce the costs. He wants to remove kk contestants from the games. However, the districts of the removed contestants will be furious and will not allow anyone to cross through their districts. The president wants to ensure that all remaining contestants are from districts that can be reached from one another. He also wishes to maximize the total number of fans of the participating contestants.Which contestants should the president remove?",
  "Title": "E. The Number Games",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n9 10\n7 2\n9 2\n1 6\n3 1\n4 3\n4 7\n7 6\n9 8\n5 8\n5 9\nOutput\nCopy\n5 3 5 4 5 4 3 5 4\n\nInput\nCopy\n4 4\n1 2\n2 3\n3 4\n4 1\nOutput\nCopy\n2 2 2 2\n\n",
  "Note": "NoteIn the first sample, a possible way to minimize the maximum distance from vertex 11 is by removing the marked edges in the following image:  Note that to minimize the answer for different nodes, you can remove different edges.",
  "Input Description": "The first line of input contains two integers nn and mm (1\u2264n\u22645\u22c51051\u2264n\u22645\u22c5105), the number of nodes and the number of edges, respectively.Each of the following mm lines contains two integers uu and vv (1\u2264u,v\u2264n1\u2264u,v\u2264n, u\u2260vu\u2260v), and represents an edge connecting the two nodes uu and vv. Each pair of nodes is connected by at most one edge.It is guaranteed that the given graph is connected and each vertex belongs to at most one simple cycle.",
  "Output Description": "Print nn space-separated integers, the ii-th integer represents the maximum distance between node ii and a leaf if the removed edges were chosen in a way that minimizes this distance.",
  "Time Limit": "4 seconds",
  "Description": "You are given a special connected undirected graph where each vertex belongs to at most one simple cycle.Your task is to remove as many edges as needed to convert this graph into a tree (connected graph with no cycles). For each node, independently, output the maximum distance between it and a leaf in the resulting tree, assuming you were to remove the edges in a way that minimizes this distance.",
  "Title": "F. Cactus to Tree",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\nmew\nOutput\nCopy\n3\n\nInput\nCopy\nwuffuw\nOutput\nCopy\n5\n\nInput\nCopy\nqqqqqqqq\nOutput\nCopy\n0\n\n",
  "Note": "Note\"mew\" is not a palindrome, so the longest substring of it that is not a palindrome, is the string \"mew\" itself. Thus, the answer for the first example is 33.The string \"uffuw\" is one of the longest non-palindrome substrings (of length 55) of the string \"wuffuw\", so the answer for the second example is 55.All substrings of the string \"qqqqqqqq\" consist of equal characters so they are palindromes. This way, there are no non-palindrome substrings. Thus, the answer for the third example is 00.",
  "Input Description": "The first line contains a non-empty string ss with length at most 5050 characters, containing lowercase English letters only.",
  "Output Description": "If there is such a substring in ss that is not a palindrome, print the maximum length of such a substring. Otherwise print 00.Note that there can be multiple longest substrings that are not palindromes, but their length is unique.",
  "Time Limit": "1 second",
  "Description": "A string is a palindrome if it reads the same from the left to the right and from the right to the left. For example, the strings \"kek\", \"abacaba\", \"r\" and \"papicipap\" are palindromes, while the strings \"abb\" and \"iq\" are not.A substring s[l\u2026r]s[l\u2026r] (1\u2264l\u2264r\u2264|s|1\u2009\u2264\u2009l\u2009\u2264\u2009r\u2009\u2264\u2009|s|) of a string s=s1s2\u2026s|s|s\u2009=\u2009s1s2\u2026s|s| is the string slsl+1\u2026srslsl\u2009+\u20091\u2026sr.Anna does not like palindromes, so she makes her friends call her Ann. She also changes all the words she reads in a similar way. Namely, each word ss is changed into its longest substring that is not a palindrome. If all the substrings of ss are palindromes, she skips the word at all.Some time ago Ann read the word ss. What is the word she changed it into?",
  "Title": "A. Antipalindrome",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n3\n1 2\n7 2\n3 10\n4\n1 4\n2 4\n3 4\n4 4\nOutput\nCopy\n24\n\nInput\nCopy\n1\n1000000000 239\n3\n14 15\n92 65\n35 89\nOutput\nCopy\n408\n\n",
  "Note": "NoteIn the first example ChemForces can choose the set (3,73,7), while TopChemist can choose (1,2,41,2,4). This way the total income is (10+2)+(4+4+4)=24(10+2)+(4+4+4)=24.In the second example ChemForces can choose the only element 109109, while TopChemist can choose (14,92,3514,92,35). This way the total income is (239)+(15+65+89)=408(239)+(15+65+89)=408.",
  "Input Description": "The first line contains a single integer nn (1\u2264n\u22641051\u2264n\u2264105) \u00a0\u2014 the number of elements discovered by ChemForces.The ii-th of the next nn lines contains two integers aiai and xixi (1\u2264ai\u22641091\u2264ai\u2264109, 1\u2264xi\u22641091\u2264xi\u2264109) \u00a0\u2014 the index of the ii-th element and the income of its usage on the exhibition. It is guaranteed that all aiai are distinct.The next line contains a single integer mm (1\u2264m\u22641051\u2264m\u2264105) \u00a0\u2014 the number of chemicals invented by TopChemist.The jj-th of the next mm lines contains two integers bjbj and yjyj, (1\u2264bj\u22641091\u2264bj\u2264109, 1\u2264yj\u22641091\u2264yj\u2264109) \u00a0\u2014 the index of the jj-th element and the income of its usage on the exhibition. It is guaranteed that all bjbj are distinct.",
  "Output Description": "Print the maximum total income you can obtain by choosing the sets for both companies in such a way that no element is presented in both sets.",
  "Time Limit": "2 seconds",
  "Description": "Two famous competing companies ChemForces and TopChemist decided to show their sets of recently discovered chemical elements on an exhibition. However they know that no element should be present in the sets of both companies.In order to avoid this representatives of both companies decided to make an agreement on the sets the companies should present. The sets should be chosen in the way that maximizes the total income of the companies.All elements are enumerated with integers. The ChemForces company has discovered nn distinct chemical elements with indices a1,a2,\u2026,ana1,a2,\u2026,an, and will get an income of xixi Berland rubles if the ii-th element from this list is in the set of this company.The TopChemist company discovered mm distinct chemical elements with indices b1,b2,\u2026,bmb1,b2,\u2026,bm, and it will get an income of yjyj Berland rubles for including the jj-th element from this list to its set.In other words, the first company can present any subset of elements from {a1,a2,\u2026,an}{a1,a2,\u2026,an} (possibly empty subset), the second company can present any subset of elements from {b1,b2,\u2026,bm}{b1,b2,\u2026,bm} (possibly empty subset). There shouldn't be equal elements in the subsets.Help the representatives select the sets in such a way that no element is presented in both sets and the total income is the maximum possible.",
  "Title": "B. Businessmen Problems",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n4\n1 2\n2 3\n3 4\nOutput\nCopy\nYes\n1\n1 4\n\nInput\nCopy\n6\n1 2\n2 3\n3 4\n2 5\n3 6\nOutput\nCopy\nNo\n\nInput\nCopy\n5\n1 2\n1 3\n1 4\n1 5\nOutput\nCopy\nYes\n4\n1 2\n1 3\n1 4\n1 5\n\n",
  "Note": "NoteThe tree from the first example is shown on the picture below:  The number next to each edge corresponds to the path number in the decomposition. It is easy to see that this decomposition suits the required conditions.The tree from the second example is shown on the picture below:  We can show that there are no valid decompositions of this tree.The tree from the third example is shown on the picture below:  The number next to each edge corresponds to the path number in the decomposition. It is easy to see that this decomposition suits the required conditions.",
  "Input Description": "The first line contains a single integer nn (2\u2264n\u22641052\u2264n\u2264105) the number of nodes in the tree.Each of the next n\u22121n\u2009\u2212\u20091 lines contains two integers aiai and bibi (1\u2264ai,bi\u2264n1\u2264ai,bi\u2264n, ai\u2260biai\u2260bi)\u00a0\u2014 the edges of the tree. It is guaranteed that the given edges form a tree.",
  "Output Description": "If there are no decompositions, print the only line containing \"No\".Otherwise in the first line print \"Yes\", and in the second line print the number of paths in the decomposition mm. Each of the next mm lines should contain two integers uiui, vivi (1\u2264ui,vi\u2264n1\u2264ui,vi\u2264n, ui\u2260viui\u2260vi) denoting that one of the paths in the decomposition is the simple path between nodes uiui and vivi. Each pair of paths in the decomposition should have at least one common vertex, and each edge of the tree should be presented in exactly one path. You can print the paths and the ends of each path in arbitrary order.If there are multiple decompositions, print any.",
  "Time Limit": "1 second",
  "Description": "Ramesses knows a lot about problems involving trees (undirected connected graphs without cycles)!He created a new useful tree decomposition, but he does not know how to construct it, so he asked you for help!The decomposition is the splitting the edges of the tree in some simple paths in such a way that each two paths have at least one common vertex. Each edge of the tree should be in exactly one path.Help Remesses, find such a decomposition of the tree or derermine that there is no such decomposition.",
  "Title": "C. Useful Decomposition",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n10 4\n9 14 28 1 7 13 15 29 2 31\nOutput\nCopy\n24\n\nInput\nCopy\n7 3\n3 14 15 92 65 35 89\nOutput\nCopy\n64\n\n",
  "Note": "NoteIn the first example you can split the books as follows:(9+14+28+1+7)&(13+15)&(29+2)&(31)=24.(9+14+28+1+7)&(13+15)&(29+2)&(31)=24.In the second example you can split the books as follows:(3+14+15+92)&(65)&(35+89)=64.(3+14+15+92)&(65)&(35+89)=64.",
  "Input Description": "The first line contains two integers nn and kk (1\u2264k\u2264n\u2264501\u2264k\u2264n\u226450)\u00a0\u2014 the number of books and the number of shelves in the new office.The second line contains nn integers a1,a2,\u2026ana1,a2,\u2026an, (0<ai<2500<ai<250)\u00a0\u2014 the prices of the books in the order they stand on the old shelf.",
  "Output Description": "Print the maximum possible beauty of kk shelves in the new office.",
  "Time Limit": "1 second",
  "Description": "Mr Keks is a typical white-collar in Byteland.He has a bookshelf in his office with some books on it, each book has an integer positive price.Mr Keks defines the value of a shelf as the sum of books prices on it. Miraculously, Mr Keks was promoted and now he is moving into a new office.He learned that in the new office he will have not a single bookshelf, but exactly kk bookshelves. He decided that the beauty of the kk shelves is the bitwise AND of the values of all the shelves.He also decided that he won't spend time on reordering the books, so he will place several first books on the first shelf, several next books on the next shelf and so on. Of course, he will place at least one book on each shelf. This way he will put all his books on kk shelves in such a way that the beauty of the shelves is as large as possible. Compute this maximum possible beauty.",
  "Title": "D. Bookshelves",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n4 3\n1 3 1\n2 4 2\n3 4 4\nOutput\nCopy\n4\n1 2 3 4 \n\nInput\nCopy\n7 2\n1 5 1\n3 7 2\nOutput\nCopy\n3\n1 2 3 \n\nInput\nCopy\n10 3\n1 1 2\n1 1 3\n1 1 6\nOutput\nCopy\n6\n2 3 5 6 8 9 \n\n",
  "Note": "NoteConsider the first example. If you consider the subset only of the first query, the maximum is equal to 11. If you take only the second query, the maximum equals to 22. If you take the first two queries, the maximum becomes 33. If you take only the fourth query, the maximum becomes 44. If you take the fourth query and something more, the maximum becomes greater that nn, so you shouldn't print it.In the second example you can take the first query to obtain 11. You can take only the second query to obtain 22. You can take all queries to obtain 33.In the third example you can obtain the following maximums:  You can achieve the maximim of 22 by using queries: (1)(1).  You can achieve the maximim of 33 by using queries: (2)(2).  You can achieve the maximim of 55 by using queries: (1,2)(1,2).  You can achieve the maximim of 66 by using queries: (3)(3).  You can achieve the maximim of 88 by using queries: (1,3)(1,3).  You can achieve the maximim of 99 by using queries: (2,3)(2,3). ",
  "Input Description": "The first line contains two integers nn and qq (1\u2264n,q\u22641041\u2264n,q\u2264104)\u00a0\u2014 the length of the array and the number of queries in the initial problem.The following qq lines contain queries, one per line. The ii-th of these lines contains three integers lili, riri and xixi (1\u2264li\u2264ri\u2264n1\u2264li\u2264ri\u2264n, 1\u2264xi\u2264n1\u2264xi\u2264n), denoting a query of adding xixi to the segment from lili-th to riri-th elements of the array, inclusive.",
  "Output Description": "In the first line print the only integer kk, denoting the number of integers from 11 to nn, inclusive, that can be equal to the maximum in the array after applying some subset (possibly empty) of the given operations.In the next line print these kk integers from 11 to nn\u00a0\u2014 the possible values of the maximum. Print these integers in increasing order.",
  "Time Limit": "2 seconds",
  "Description": "Grisha come to a contest and faced the following problem.You are given an array of size nn, initially consisting of zeros. The elements of the array are enumerated from 11 to nn. You perform qq operations on the array. The ii-th operation is described with three integers lili, riri and xixi (1\u2264li\u2264ri\u2264n1\u2264li\u2264ri\u2264n, 1\u2264xi\u2264n1\u2264xi\u2264n) and means that you should add xixi to each of the elements with indices li,li+1,\u2026,rili,li+1,\u2026,ri. After all operations you should find the maximum in the array.Grisha is clever, so he solved the problem quickly.However something went wrong inside his head and now he thinks of the following question: \"consider we applied some subset of the operations to the array. What are the possible values of the maximum in the array?\"Help Grisha, find all integers yy between 11 and nn such that if you apply some subset (possibly empty) of the operations, then the maximum in the array becomes equal to yy.",
  "Title": "E. Addition on Segments",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n2 4\n0 1\n2 3\nOutput\nCopy\n1\n\nInput\nCopy\n10 100\n3 14 15 92 65 35 89 79 32 38\n2 71 82 81 82 84 5 90 45 23\nOutput\nCopy\n27\n\n",
  "Note": "NoteIn the first example the first bridegroom should marry the second bride, the second bridegroom should marry the first bride. This way, the second bride should walk the distance of 11, and the first bride should also walk the same distance. Thus, the inconvenience is equal to 11.In the second example let pipi be the bride the ii-th bridegroom will marry. One of optimal pp is the following: (6,8,1,4,5,10,3,2,7,9)(6,8,1,4,5,10,3,2,7,9).",
  "Input Description": "The first line contains two integers nn and LL (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105, 1\u2264L\u22641091\u2264L\u2264109)\u00a0\u2014 the number of bridegrooms and brides and the length of Ringland.The next line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (0\u2264ai<L0\u2264ai<L)\u00a0\u2014 the distances from the capital to the castles of bridegrooms in clockwise direction.The next line contains nn integers b1,b2,\u2026,bnb1,b2,\u2026,bn (0\u2264bi<L0\u2264bi<L)\u00a0\u2014 the distances from the capital to the palaces of brides in clockwise direction.",
  "Output Description": "In the only line print the smallest possible inconvenience of the wedding, where the inconvenience is the largest distance traveled by a bride.",
  "Time Limit": "3 seconds",
  "Description": "It's marriage season in Ringland!Ringland has a form of a circle's boundary of length LL. There are nn bridegrooms and nn brides, and bridegrooms decided to marry brides.Of course, each bridegroom should choose exactly one bride, and each bride should be chosen by exactly one bridegroom.All objects in Ringland are located on the boundary of the circle, including the capital, bridegrooms' castles and brides' palaces. The castle of the ii-th bridegroom is located at the distance aiai from the capital in clockwise direction, and the palace of the ii-th bride is located at the distance bibi from the capital in clockwise direction.Let's define the inconvenience of a marriage the maximum distance that some bride should walk along the circle from her palace to her bridegroom's castle in the shortest direction (in clockwise or counter-clockwise direction).Help the bridegrooms of Ringland to choose brides in such a way that the inconvenience of the marriage is the smallest possible.",
  "Title": "F. Round Marriage",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n4 4\n1 1 2 1\n1 1 2 2\n1 1 4 1\n2 1 4\nOutput\nCopy\n10\n\nInput\nCopy\n3 7\n1 1 1 3\n1 1 1 3\n1 1 1 2\n1 1 1 1\n2 1 1\n1 1 1 2\n2 1 1\nOutput\nCopy\n4\n8\n\n",
  "Note": "NoteIn the first example after the first two queries the multisets are equal to [{1,2},{1,2},{},{}][{1,2},{1,2},{},{}], after the third query they are equal to [{1,1,2,2},{1,1,2,2},{1},{1}][{1,1,2,2},{1,1,2,2},{1},{1}].In the second example the first multiset evolves as follows: {}\u2192{3}\u2192{3,3}\u2192{2,3,3}\u2192{1,2,3,3}\u2192{1,1,2,2,3,3,3,3}{}\u2192{3}\u2192{3,3}\u2192{2,3,3}\u2192{1,2,3,3}\u2192{1,1,2,2,3,3,3,3}. ",
  "Input Description": "The first line contains two integers nn and qq (1\u2264n,q\u22642\u22c51051\u2264n,q\u22642\u22c5105)\u00a0\u2014 the number of magic multisets in the array and the number of queries, respectively.The next qq lines describe queries, one per line. Each line starts with an integer tt (1\u2264t\u226421\u2264t\u22642)\u00a0\u2014 the type of the query. If tt equals 11, it is followed by three integers ll, rr, xx (1\u2264l\u2264r\u2264n1\u2264l\u2264r\u2264n, 1\u2264x\u2264n1\u2264x\u2264n) meaning that you should add xx to all multisets with indices from ll to rr inclusive. If tt equals 22, it is followed by two integers ll, rr (1\u2264l\u2264r\u2264n1\u2264l\u2264r\u2264n) meaning that you should compute the sum of sizes of all multisets with indices from ll to rr inclusive.",
  "Output Description": "For each query of the second type print the sum of sizes of multisets on the given segment.The answers can be large, so print them modulo 998244353998244353.",
  "Time Limit": "4 seconds",
  "Description": "In the School of Magic in Dirtpolis a lot of interesting objects are studied on Computer Science lessons.Consider, for example, the magic multiset. If you try to add an integer to it that is already presented in the multiset, each element in the multiset duplicates. For example, if you try to add the integer 22 to the multiset {1,2,3,3}{1,2,3,3}, you will get {1,1,2,2,3,3,3,3}{1,1,2,2,3,3,3,3}. If you try to add an integer that is not presented in the multiset, it is simply added to it. For example, if you try to add the integer 44 to the multiset {1,2,3,3}{1,2,3,3}, you will get {1,2,3,3,4}{1,2,3,3,4}.Also consider an array of nn initially empty magic multisets, enumerated from 11 to nn.You are to answer qq queries of the form \"add an integer xx to all multisets with indices l,l+1,\u2026,rl,l+1,\u2026,r\" and \"compute the sum of sizes of multisets with indices l,l+1,\u2026,rl,l+1,\u2026,r\". The answers for the second type queries can be large, so print the answers modulo 998244353998244353.",
  "Title": "G. Magic multisets",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n3 2\n1 2\n2 3\nOutput\nCopy\n7\n\nInput\nCopy\n5 1\n4 1\n2 3\n4 5\n2 1\nOutput\nCopy\n10\n\nInput\nCopy\n29 29\n1 2\n1 3\n1 4\n1 5\n5 6\n5 7\n5 8\n8 9\n8 10\n8 11\n11 12\n11 13\n11 14\n14 15\n14 16\n14 17\n17 18\n17 19\n17 20\n20 21\n20 22\n20 23\n23 24\n23 25\n23 26\n26 27\n26 28\n26 29\nOutput\nCopy\n125580756\n\n",
  "Note": "NoteIn the first example the following ways are valid\uff1a  ((1,2),(1,2))((1,2),(1,2)),  ((1,2),(1,3))((1,2),(1,3)),  ((1,3),(1,2))((1,3),(1,2)),  ((1,3),(1,3))((1,3),(1,3)),  ((1,3),(2,3))((1,3),(2,3)),  ((2,3),(1,3))((2,3),(1,3)),  ((2,3),(2,3))((2,3),(2,3)). In the second example k=1k=1, so all n\u22c5(n\u22121)/2=5\u22c54/2=10n\u22c5(n\u22121)/2=5\u22c54/2=10 paths are valid.In the third example, the answer is \u2265998244353\u2265998244353, so it was taken modulo 998244353998244353, don't forget it!",
  "Input Description": "The first line contains two integers nn and kk (1\u2264n,k\u22641051\u2264n,k\u2264105)\u00a0\u2014 the number of vertices in the tree and the desired number of paths.The next n\u22121n\u22121 lines describe edges of the tree. Each line contains two integers aa and bb (1\u2264a,b\u2264n1\u2264a,b\u2264n, a\u2260ba\u2260b)\u00a0\u2014 the endpoints of an edge. It is guaranteed that the given edges form a tree.",
  "Output Description": "Print the number of ways to select kk enumerated not necessarily distinct simple paths in such a way that for each edge either it is not contained in any path, or it is contained in exactly one path, or it is contained in all kk paths, and the intersection of all paths is non-empty. As the answer can be large, print it modulo 998244353998244353.",
  "Time Limit": "4 seconds",
  "Description": "You are given a tree of nn vertices. You are to select kk (not necessarily distinct) simple paths in such a way that it is possible to split all edges of the tree into three sets: edges not contained in any path, edges that are a part of exactly one of these paths, and edges that are parts of all selected paths, and the latter set should be non-empty.Compute the number of ways to select kk paths modulo 998244353998244353.The paths are enumerated, in other words, two ways are considered distinct if there are such ii (1\u2264i\u2264k1\u2264i\u2264k) and an edge that the ii-th path contains the edge in one way and does not contain it in the other.",
  "Title": "H. K Paths",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n3\n101\nOutput\nCopy\nYes\n\nInput\nCopy\n4\n1011\nOutput\nCopy\nNo\n\nInput\nCopy\n5\n10001\nOutput\nCopy\nNo\n\n",
  "Note": "NoteIn sample case one the given seating is maximal.In sample case two the person at chair three has a neighbour to the right.In sample case three it is possible to seat yet another person into chair three.",
  "Input Description": "The first line contains a single integer nn (1\u2264n\u226410001\u2264n\u22641000)\u00a0\u2014 the number of chairs.The next line contains a string of nn characters, each of them is either zero or one, describing the seating.",
  "Output Description": "Output \"Yes\" (without quotation marks) if the seating is \"maximal\". Otherwise print \"No\".You are allowed to print letters in whatever case you'd like (uppercase or lowercase).",
  "Time Limit": "1 second",
  "Description": "You're given a row with nn chairs. We call a seating of people \"maximal\" if the two following conditions hold:  There are no neighbors adjacent to anyone seated.  It's impossible to seat one more person without violating the first rule. The seating is given as a string consisting of zeros and ones (00 means that the corresponding seat is empty, 11 \u2014 occupied). The goal is to determine whether this seating is \"maximal\".Note that the first and last seats are not adjacent (if n\u22602n\u22602).",
  "Title": "A. Row",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n2\n3 1\n0011\nOutput\nCopy\n2 1 1 2 \n\nInput\nCopy\n6\n10 8 9 11 13 5\n010010011101\nOutput\nCopy\n6 6 2 3 3 1 4 4 1 2 5 5 \n\n",
  "Note": "NoteIn the first example the first passenger (introvert) chooses the row 22, because it has the seats with smallest width. The second passenger (introvert) chooses the row 11, because it is the only empty row now. The third passenger (extrovert) chooses the row 11, because it has exactly one occupied seat and the seat width is the largest among such rows. The fourth passenger (extrovert) chooses the row 22, because it is the only row with an empty place.",
  "Input Description": "The first line contains a single integer nn (1\u2264n\u22642000001\u2264n\u2264200000) \u2014 the number of rows in the bus.The second line contains the sequence of integers w1,w2,\u2026,wnw1,w2,\u2026,wn (1\u2264wi\u22641091\u2264wi\u2264109), where wiwi is the width of each of the seats in the ii-th row. It is guaranteed that all wiwi are distinct.The third line contains a string of length 2n2n, consisting of digits '0' and '1' \u2014 the description of the order the passengers enter the bus. If the jj-th character is '0', then the passenger that enters the bus on the jj-th stop is an introvert. If the jj-th character is '1', the the passenger that enters the bus on the jj-th stop is an extrovert. It is guaranteed that the number of extroverts equals the number of introverts (i.\u00a0e. both numbers equal nn), and for each extrovert there always is a suitable row.",
  "Output Description": "Print 2n2n integers \u2014 the rows the passengers will take. The order of passengers should be the same as in input.",
  "Time Limit": "2 seconds",
  "Description": "In the Bus of Characters there are nn rows of seat, each having 22 seats. The width of both seats in the ii-th row is wiwi centimeters. All integers wiwi are distinct.Initially the bus is empty. On each of 2n2n stops one passenger enters the bus. There are two types of passengers:   an introvert always chooses a row where both seats are empty. Among these rows he chooses the one with the smallest seats width and takes one of the seats in it;  an extrovert always chooses a row where exactly one seat is occupied (by an introvert). Among these rows he chooses the one with the largest seats width and takes the vacant place in it. You are given the seats width in each row and the order the passengers enter the bus. Determine which row each passenger will take.",
  "Title": "B. Bus of Characters",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n4\n2 4\n4 1\n3 1\nOutput\nCopy\n1\n\nInput\nCopy\n3\n1 2\n1 3\nOutput\nCopy\n-1\n\nInput\nCopy\n10\n7 1\n8 4\n8 10\n4 7\n6 5\n9 3\n3 5\n2 10\n2 5\nOutput\nCopy\n4\n\nInput\nCopy\n2\n1 2\nOutput\nCopy\n0\n\n",
  "Note": "NoteIn the first example you can remove the edge between vertices 11 and 44. The graph after that will have two connected components with two vertices in each.In the second example you can't remove edges in such a way that all components have even number of vertices, so the answer is \u22121\u22121.",
  "Input Description": "The first line contains an integer nn (1\u2264n\u22641051\u2264n\u2264105) denoting the size of the tree. The next n\u22121n\u22121 lines contain two integers uu, vv (1\u2264u,v\u2264n1\u2264u,v\u2264n) each, describing the vertices connected by the ii-th edge.It's guaranteed that the given edges form a tree.",
  "Output Description": "Output a single integer kk \u2014 the maximum number of edges that can be removed to leave all connected components with even size, or \u22121\u22121 if it is impossible to remove edges in order to satisfy this property.",
  "Time Limit": "1 second",
  "Description": "You're given a tree with nn vertices.Your task is to determine the maximum possible number of edges that can be removed in such a way that all the remaining connected components will have even size.",
  "Title": "C. Cut 'em all!",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n8\n1 2 7 3 4 8 5 6\nOutput\nCopy\n7\n\nInput\nCopy\n6\n25 1 2 3 14 36\nOutput\nCopy\n2\n\n",
  "Note": "NoteIn the first example the shark travels inside a location on days 11 and 22 (first location), then on 44-th and 55-th days (second location), then on 77-th and 88-th days (third location). There are three locations in total.In the second example the shark only moves inside a location on the 22-nd day, so there is only one location.",
  "Input Description": "The first line contains a single integer nn (1\u2264n\u22641051\u2264n\u2264105) \u2014 the number of days.The second line contains nn distinct positive integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109) \u2014 the distance traveled in each of the day.",
  "Output Description": "Print a single integer kk, such that   the shark was in each location the same number of days,  the number of locations is maximum possible satisfying the first condition,  kk is smallest possible satisfying the first and second conditions. ",
  "Time Limit": "1 second",
  "Description": "For long time scientists study the behavior of sharks. Sharks, as many other species, alternate short movements in a certain location and long movements between locations.Max is a young biologist. For nn days he watched a specific shark, and now he knows the distance the shark traveled in each of the days. All the distances are distinct. Max wants to know now how many locations the shark visited. He assumed there is such an integer kk that if the shark in some day traveled the distance strictly less than kk, then it didn't change the location; otherwise, if in one day the shark traveled the distance greater than or equal to kk; then it was changing a location in that day. Note that it is possible that the shark changed a location for several consecutive days, in each of them the shark traveled the distance at least kk.The shark never returned to the same location after it has moved from it. Thus, in the sequence of nn days we can find consecutive nonempty segments when the shark traveled the distance less than kk in each of the days: each such segment corresponds to one location. Max wants to choose such kk that the lengths of all such segments are equal.Find such integer kk, that the number of locations is as large as possible. If there are several such kk, print the smallest one.",
  "Title": "D. Shark",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n4 3 2 2 -1 1\nOutput\nCopy\n0 0\n\nInput\nCopy\n4 4 2 0 1 1\nOutput\nCopy\n-1\n\nInput\nCopy\n10 10 10 1 -1 0\nOutput\nCopy\n-1\n\n",
  "Note": "NoteThe first sample:   The second sample:   In the third sample the ball will never change its yy coordinate, so the ball will never fall into a pocket.",
  "Input Description": "The only line contains 66 integers nn, mm, xx, yy, vxvx, vyvy (1\u2264n,m\u22641091\u2264n,m\u2264109, 0\u2264x\u2264n0\u2264x\u2264n; 0\u2264y\u2264m0\u2264y\u2264m; \u22121\u2264vx,vy\u22641\u22121\u2264vx,vy\u22641; (vx,vy)\u2260(0,0)(vx,vy)\u2260(0,0))\u00a0\u2014 the width of the table, the length of the table, the xx-coordinate of the initial position of the ball, the yy-coordinate of the initial position of the ball, the xx-component of its initial speed and the yy-component of its initial speed, respectively. It is guaranteed that the ball is not initially in a pocket.",
  "Output Description": "Print the coordinates of the pocket the ball will fall into, or \u22121\u22121 if the ball will move indefinitely.",
  "Time Limit": "1 second",
  "Description": "Consider a billiard table of rectangular size n\u00d7mn\u00d7m with four pockets. Let's introduce a coordinate system with the origin at the lower left corner (see the picture).   There is one ball at the point (x,y)(x,y) currently. Max comes to the table and strikes the ball. The ball starts moving along a line that is parallel to one of the axes or that makes a 45\u221845\u2218 angle with them. We will assume that:   the angles between the directions of the ball before and after a collision with a side are equal,  the ball moves indefinitely long, it only stops when it falls into a pocket,  the ball can be considered as a point, it falls into a pocket if and only if its coordinates coincide with one of the pockets,  initially the ball is not in a pocket. Note that the ball can move along some side, in this case the ball will just fall into the pocket at the end of the side.Your task is to determine whether the ball will fall into a pocket eventually, and if yes, which of the four pockets it will be.",
  "Title": "E. Billiard",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n5 6\n1 2\n2 3\n3 1\n3 4\n4 5\n5 3\nOutput\nCopy\n3\n\nInput\nCopy\n3 3\n1 2\n2 3\n3 1\nOutput\nCopy\n1\n\n",
  "Note": "NoteIn the first example the robbers can move, for example, along the following routes: (1\u22122\u22123\u22121)(1\u22122\u22123\u22121), (3\u22124\u22125\u22123)(3\u22124\u22125\u22123), (1\u22122\u22123\u22124\u22125\u22123\u22121)(1\u22122\u22123\u22124\u22125\u22123\u22121). We can show that if Petr chooses the 33-rd intersection, he will eventually meet the robbers independently of their route.",
  "Input Description": "The first line of the input contains two integers nn and mm (2\u2264n\u22641052\u2264n\u2264105, 2\u2264m\u22645\u22c51052\u2264m\u22645\u22c5105)\u00a0\u2014 the number of intersections and the number of directed roads in Braginsk, respectively.Each of the next mm lines contains two integers uiui and vivi (1\u2264ui,vi\u2264n1\u2264ui,vi\u2264n, ui\u2260viui\u2260vi)\u00a0\u2014 the start and finish of the ii-th directed road. It is guaranteed that the robbers can move along the roads indefinitely.",
  "Output Description": "Print a single integer kk\u00a0\u2014 the intersection Petr needs to choose. If there are multiple answers, print any. If there are no such intersections, print \u22121\u22121.",
  "Time Limit": "1 second",
  "Description": "Petr is a detective in Braginsk. Somebody stole a huge amount of money from a bank and Petr is to catch him. Somebody told Petr that some luxurious car moves along the roads without stopping.Petr knows that it is the robbers who drive the car. The roads in Braginsk are one-directional and each of them connects two intersections. Petr wants to select one intersection such that if the robbers continue to drive the roads indefinitely, they will sooner or later come to that intersection. The initial position of the robbers is unknown. Find such an intersection that fits the requirements.",
  "Title": "F. The Meeting Place Cannot Be Changed",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n2\n6 12 10\n4 3 10\nOutput\nCopy\nFinite\nInfinite\n\nInput\nCopy\n4\n1 1 2\n9 36 2\n4 12 3\n3 5 4\nOutput\nCopy\nFinite\nFinite\nFinite\nInfinite\n\n",
  "Note": "Note612=12=0,510612=12=0,51043=1,(3)1043=1,(3)10936=14=0,012936=14=0,012412=13=0,13412=13=0,13 ",
  "Input Description": "The first line contains a single integer nn (1\u2264n\u22641051\u2264n\u2264105)\u00a0\u2014 the number of queries.Next nn lines contain queries, one per line. Each line contains three integers pp, qq, and bb (0\u2264p\u226410180\u2264p\u22641018, 1\u2264q\u226410181\u2264q\u22641018, 2\u2264b\u226410182\u2264b\u22641018). All numbers are given in notation with base 1010.",
  "Output Description": "For each question, in a separate line, print Finite if the fraction is finite and Infinite otherwise.",
  "Time Limit": "1 second",
  "Description": "You are given several queries. Each query consists of three integers pp, qq and bb. You need to answer whether the result of p/qp/q in notation with base bb is a finite fraction.A fraction in notation with base bb is finite if it contains finite number of numerals after the decimal point. It is also possible that a fraction has zero numerals after the decimal point.",
  "Title": "A. Finite or not?",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n3\n8 4 1\n2\n2 3\n1 2\nOutput\nCopy\n5\n12\n\nInput\nCopy\n6\n1 2 4 8 16 32\n4\n1 6\n2 5\n3 4\n1 2\nOutput\nCopy\n60\n30\n12\n3\n\n",
  "Note": "NoteIn first sample in both queries the maximum value of the function is reached on the subsegment that is equal to the whole segment.In second sample, optimal segment for first query are [3,6][3,6], for second query \u2014 [2,5][2,5], for third \u2014 [3,4][3,4], for fourth \u2014 [1,2][1,2].",
  "Input Description": "The first line contains a single integer nn (1\u2264n\u226450001\u2264n\u22645000)\u00a0\u2014 the length of aa.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (0\u2264ai\u2264230\u221210\u2264ai\u2264230\u22121)\u00a0\u2014 the elements of the array.The third line contains a single integer qq (1\u2264q\u22641000001\u2264q\u2264100000)\u00a0\u2014 the number of queries.Each of the next qq lines contains a query represented as two integers ll, rr (1\u2264l\u2264r\u2264n1\u2264l\u2264r\u2264n).",
  "Output Description": "Print qq lines\u00a0\u2014 the answers for the queries.",
  "Time Limit": "2 seconds",
  "Description": "For an array bb of length mm we define the function ff as  f(b)={b[1]if\u00a0m=1f(b[1]\u2295b[2],b[2]\u2295b[3],\u2026,b[m\u22121]\u2295b[m])otherwise,f(b)={b[1]if\u00a0m=1f(b[1]\u2295b[2],b[2]\u2295b[3],\u2026,b[m\u22121]\u2295b[m])otherwise, where \u2295\u2295 is bitwise exclusive OR.For example, f(1,2,4,8)=f(1\u22952,2\u22954,4\u22958)=f(3,6,12)=f(3\u22956,6\u229512)=f(5,10)=f(5\u229510)=f(15)=15f(1,2,4,8)=f(1\u22952,2\u22954,4\u22958)=f(3,6,12)=f(3\u22956,6\u229512)=f(5,10)=f(5\u229510)=f(15)=15You are given an array aa and a few queries. Each query is represented as two integers ll and rr. The answer is the maximum value of ff on all continuous subsegments of the array al,al+1,\u2026,aral,al+1,\u2026,ar.",
  "Title": "B. XOR-pyramid",
  "Memory Limit": "512 megabytes"
}{
  "Example": "Input\nCopy\n2\n3 5\n5 3\nOutput\nCopy\n10\n\nInput\nCopy\n2\n5 3\n3 5\nOutput\nCopy\n12\n\n",
  "Note": "Note Explaination for the first sample  t\u2009=\u20090 t\u2009=\u20092 t\u2009=\u20093 t\u2009=\u20095 t\u2009=\u20096 t\u2009=\u20097 t\u2009=\u20099 t\u2009=\u200910",
  "Input Description": "The first line contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u20092000)\u00a0\u2014 the number of employees.The i-th of the next n lines contains two integers ai and bi (1\u2009\u2264\u2009ai,\u2009bi\u2009\u2264\u20099, ai\u2009\u2260\u2009bi)\u00a0\u2014 the floor on which an employee initially is, and the floor he wants to reach.The employees are given in the order they came to the elevator.",
  "Output Description": "Print a single integer\u00a0\u2014 the minimal possible time in seconds.",
  "Time Limit": "3 seconds",
  "Description": "You work in a big office. It is a 9\u00a0floor building with an elevator that can accommodate up to 4\u00a0people. It is your responsibility to manage this elevator.Today you are late, so there are queues on some floors already. For each person you know the floor where he currently is and the floor he wants to reach. Also, you know the order in which people came to the elevator.According to the company's rules, if an employee comes to the elevator earlier than another one, he has to enter the elevator earlier too (even if these employees stay on different floors). Note that the employees are allowed to leave the elevator in arbitrary order.The elevator has two commands:   Go up or down one floor. The movement takes 1 second.  Open the doors on the current floor. During this operation all the employees who have reached their destination get out of the elevator. Then all the employees on the floor get in the elevator in the order they are queued up while it doesn't contradict the company's rules and there is enough space in the elevator. Each employee spends 1 second to get inside and outside the elevator. Initially the elevator is empty and is located on the floor 1.You are interested what is the minimum possible time you need to spend to deliver all the employees to their destination. It is not necessary to return the elevator to the floor 1.",
  "Title": "C. Elevator",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n5\n-1 -1 1 1\n-4 0 0 4\n0 0 4 4\n-4 -4 0 0\n0 -4 4 0\nOutput\nCopy\n5\n\nInput\nCopy\n4\n0 0 4 4\n-4 -4 0 0\n0 -4 4 0\n-2 -4 2 4\nOutput\nCopy\n5\n\n",
  "Note": "Note  That's how the plane looks in the first sample That's how the plane looks in the second sample00 = white, 11 = cyan, 22 = blue, 33 = purple, 44 = yellow, 55 = red. ",
  "Input Description": "The first line contains a single integer nn (1\u2264n\u22641000001\u2264n\u2264100000)\u00a0\u2014 the number of rectangles.The ii-th of the next nn lines contains 44 integers x1x1, y1y1, x2x2 and y2y2 (\u2212109\u2264x1<x2\u2264109\u2212109\u2264x1<x2\u2264109, \u2212109\u2264y1<y2\u2264109\u2212109\u2264y1<y2\u2264109)\u00a0\u2014 the coordinates of corners of the ii-th rectangle.",
  "Output Description": "In the single line print the number of different colors in the plane, including color 00.",
  "Time Limit": "4 seconds",
  "Description": "Arkady has got an infinite plane painted in color 00. Then he draws nn rectangles filled with paint with sides parallel to the Cartesian coordinate axes, one after another. The color of the ii-th rectangle is ii (rectangles are enumerated from 11 to nn in the order he draws them). It is possible that new rectangles cover some of the previous ones completely or partially.Count the number of different colors on the plane after Arkady draws all the rectangles.",
  "Title": "D. Arkady and Rectangles",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n7\n1 1 1 4 5 6\n4\n4 2\n5 4\n1 3\n6 7\n6\n4 5\n3 5\n7 2\n4 5\n3 2\n5 3\nOutput\nCopy\n1\n3\n-1\n1\n2\n3\n\nInput\nCopy\n7\n1 1 2 3 4 1\n4\n4 7\n3 5\n7 6\n7 6\n6\n4 6\n3 1\n3 2\n2 7\n6 3\n5 3\nOutput\nCopy\n1\n-1\n-1\n1\n-1\n1\n\n",
  "Note": "Note  Routes for first sample are marked on the picture. ",
  "Input Description": "The first line contains a single integer nn (2\u2264n\u22642\u22c51052\u2264n\u22642\u22c5105)\u00a0\u2014 the number of cities.The second line contains n\u22121n\u22121 integers p2,p3,\u2026,pnp2,p3,\u2026,pn (1\u2264pi<i1\u2264pi<i), where pipi means that cities pipi and ii are connected by road.The third line contains a single integer mm (1\u2264m\u22642\u22c51051\u2264m\u22642\u22c5105)\u00a0\u2014 the number of bus routes.Each of the next mm lines contains 22 integers aa and bb (1\u2264a,b\u2264n1\u2264a,b\u2264n, a\u2260ba\u2260b), meaning that there is a bus route between cities aa and bb. It is possible that there is more than one route between two cities.The next line contains a single integer qq (1\u2264q\u22642\u22c51051\u2264q\u22642\u22c5105)\u00a0\u2014 the number of questions you are interested in.Each of the next qq lines contains 22 integers vv and uu (1\u2264v,u\u2264n1\u2264v,u\u2264n, v\u2260uv\u2260u), meaning that you are interested if it is possible to get from city vv to city uu and what is the minimum number of buses you need to use for it.",
  "Output Description": "Print the answer for each question on a separate line. If there is no way to get from one city to another, print \u22121\u22121. Otherwise print the minimum number of buses you have to use.",
  "Time Limit": "3 seconds",
  "Description": "In the NN country, there are nn cities, numbered from 11 to nn, and n\u22121n\u22121 roads, connecting them. There is a roads path between any two cities.There are mm bidirectional bus routes between cities. Buses drive between two cities taking the shortest path with stops in every city they drive through. Travelling by bus, you can travel from any stop on the route to any other. You can travel between cities only by bus.You are interested in qq questions: is it possible to get from one city to another and what is the minimum number of buses you need to use for it?",
  "Title": "E. NN country",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n3\n2 1 3\nOutput\nCopy\n2\n\nInput\nCopy\n3\n2 2 2\nOutput\nCopy\n2\n\n",
  "Note": "NoteIn the first sample, the first player erases 33 and the second erases 11. 22 is left on the board.In the second sample, 22 is left on the board regardless of the actions of the players.",
  "Input Description": "The first line contains one integer nn (1\u2264n\u226410001\u2264n\u22641000)\u00a0\u2014 the number of numbers on the board.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641061\u2264ai\u2264106).",
  "Output Description": "Print one number that will be left on the board.",
  "Time Limit": "2 seconds",
  "Description": "Two players play a game.Initially there are nn integers a1,a2,\u2026,ana1,a2,\u2026,an written on the board. Each turn a player selects one number and erases it from the board. This continues until there is only one number left on the board, i.\u00a0e. n\u22121n\u22121 turns are made. The first player makes the first move, then players alternate turns.The first player wants to minimize the last number that would be left on the board, while the second player wants to maximize it.You want to know what number will be left on the board after n\u22121n\u22121 turns if both players make optimal moves.",
  "Title": "A. Game",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n3 3\n111\n1*1\n111\nOutput\nCopy\nYES\n\nInput\nCopy\n2 4\n*.*.\n1211\nOutput\nCopy\nNO\n\n",
  "Note": "NoteIn the second example the answer is \"NO\" because, if the positions of the bombs are preserved, the first line of the field should be *2*1.You can read more about Minesweeper in Wikipedia's article.",
  "Input Description": "The first line contains two integers nn and mm (1\u2264n,m\u22641001\u2264n,m\u2264100) \u2014 the sizes of the field.The next nn lines contain the description of the field. Each line contains mm characters, each of them is \".\" (if this cell is empty), \"*\" (if there is bomb in this cell), or a digit from 11 to 88, inclusive.",
  "Output Description": "Print \"YES\", if the field is valid and \"NO\" otherwise.You can choose the case (lower or upper) for each letter arbitrarily.",
  "Time Limit": "1 second",
  "Description": "One day Alex decided to remember childhood when computers were not too powerful and lots of people played only default games. Alex enjoyed playing Minesweeper that time. He imagined that he saved world from bombs planted by terrorists, but he rarely won.Alex has grown up since then, so he easily wins the most difficult levels. This quickly bored him, and he thought: what if the computer gave him invalid fields in the childhood and Alex could not win because of it?He needs your help to check it.A Minesweeper field is a rectangle n\u00d7mn\u00d7m, where each cell is either empty, or contains a digit from 11 to 88, or a bomb. The field is valid if for each cell:   if there is a digit kk in the cell, then exactly kk neighboring cells have bombs.  if the cell is empty, then all neighboring cells have no bombs. Two cells are neighbors if they have a common side or a corner (i.\u00a0e. a cell has at most 88 neighboring cells).",
  "Title": "B. Minesweeper",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n6\n1 2 6\nOutput\nCopy\n2\n\nInput\nCopy\n10\n1 2 3 4 5\nOutput\nCopy\n10\n\n",
  "Note": "NoteIn the first example the only possible strategy is to move the piece at the position 6 to the position 5 and move the piece at the position 2 to the position 3. Notice that if you decide to place the pieces in the white cells the minimum number of moves will be 3.In the second example the possible strategy is to move  in 4 moves, then  in 3 moves,  in 2 moves and  in 1 move.",
  "Input Description": "The first line of the input contains one integer n (2\u2009\u2264\u2009n\u2009\u2264\u2009100, n is even) \u2014 the size of the chessboard. The second line of the input contains  integer numbers  (1\u2009\u2264\u2009pi\u2009\u2264\u2009n) \u2014 initial positions of the pieces. It is guaranteed that all the positions are distinct.",
  "Output Description": "Print one integer \u2014 the minimum number of moves you have to make to place all the pieces in the cells of the same color.",
  "Time Limit": "1 second",
  "Description": "You are given a chessboard of size 1\u2009\u00d7\u2009n. It is guaranteed that n is even. The chessboard is painted like this: \"BWBW...BW\".Some cells of the board are occupied by the chess pieces. Each cell contains no more than one chess piece. It is known that the total number of pieces equals to .In one step you can move one of the pieces one cell to the left or to the right. You cannot move pieces beyond the borders of the board. You also cannot move pieces to the cells that are already occupied.Your task is to place all the pieces in the cells of the same color using the minimum number of moves (all the pieces must occupy only the black cells or only the white cells after all the moves are made).",
  "Title": "A. Chess Placing",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n4 5\n10101\n01000\n00111\n10000\nOutput\nCopy\nYES\n\nInput\nCopy\n4 5\n10100\n01000\n00110\n00101\nOutput\nCopy\nNO\n\n",
  "Note": "",
  "Input Description": "The first line of the input contains two integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u20092000) \u2014 the number of the switches and the number of the lamps.The following n lines contain m characters each. The character ai,\u2009j is equal to '1' if the i-th switch turns on the j-th lamp and '0' otherwise.It is guaranteed that if you press all n switches all m lamps will be turned on.",
  "Output Description": "Print \"YES\" if there is a switch that if you will ignore it and press all the other n\u2009-\u20091 switches then all m lamps will be turned on. Print \"NO\" if there is no such switch.",
  "Time Limit": "3 seconds",
  "Description": "You are given n switches and m lamps. The i-th switch turns on some subset of the lamps. This information is given as the matrix a consisting of n rows and m columns where ai,\u2009j\u2009=\u20091 if the i-th switch turns on the j-th lamp and ai,\u2009j\u2009=\u20090 if the i-th switch is not connected to the j-th lamp.Initially all m lamps are turned off.Switches change state only from \"off\" to \"on\". It means that if you press two or more switches connected to the same lamp then the lamp will be turned on after any of this switches is pressed and will remain its state even if any switch connected to this lamp is pressed afterwards.It is guaranteed that if you push all n switches then all m lamps will be turned on.Your think that you have too many switches and you would like to ignore one of them. Your task is to say if there exists such a switch that if you will ignore (not use) it but press all the other n\u2009-\u20091 switches then all the m lamps will be turned on.",
  "Title": "B. Switches and Lamps",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n4 2 1\n2 2 1 2 3 2 2 3\nOutput\nCopy\n7\n\nInput\nCopy\n2 1 0\n10 10\nOutput\nCopy\n20\n\nInput\nCopy\n1 2 1\n5 2\nOutput\nCopy\n2\n\nInput\nCopy\n3 2 1\n1 2 3 4 5 6\nOutput\nCopy\n0\n\n",
  "Note": "NoteIn the first example you can form the following barrels: [1,\u20092], [2,\u20092], [2,\u20093], [2,\u20093].In the second example you can form the following barrels: [10], [10].In the third example you can form the following barrels: [2,\u20095].In the fourth example difference between volumes of barrels in any partition is at least 2 so it is impossible to make barrels equal enough.",
  "Input Description": "The first line contains three space-separated integers n, k and l (1\u2009\u2264\u2009n,\u2009k\u2009\u2264\u2009105, 1\u2009\u2264\u2009n\u00b7k\u2009\u2264\u2009105, 0\u2009\u2264\u2009l\u2009\u2264\u2009109).The second line contains m\u2009=\u2009n\u00b7k space-separated integers a1,\u2009a2,\u2009...,\u2009am (1\u2009\u2264\u2009ai\u2009\u2264\u2009109) \u2014 lengths of staves.",
  "Output Description": "Print single integer \u2014 maximal total sum of the volumes of barrels or 0 if it's impossible to construct exactly n barrels satisfying the condition |vx\u2009-\u2009vy|\u2009\u2264\u2009l for any 1\u2009\u2264\u2009x\u2009\u2264\u2009n and 1\u2009\u2264\u2009y\u2009\u2264\u2009n.",
  "Time Limit": "2 seconds",
  "Description": "You have m\u2009=\u2009n\u00b7k wooden staves. The i-th stave has length ai. You have to assemble n barrels consisting of k staves each, you can use any k staves to construct a barrel. Each stave must belong to exactly one barrel.Let volume vj of barrel j be equal to the length of the minimal stave in it.  You want to assemble exactly n barrels with the maximal total sum of volumes. But you have to make them equal enough, so a difference between volumes of any pair of the resulting barrels must not exceed l, i.e. |vx\u2009-\u2009vy|\u2009\u2264\u2009l for any 1\u2009\u2264\u2009x\u2009\u2264\u2009n and 1\u2009\u2264\u2009y\u2009\u2264\u2009n.Print maximal total sum of volumes of equal enough barrels or 0 if it's impossible to satisfy the condition above.",
  "Title": "C. Liebig's Barrels",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n5 2\nOutput\nCopy\n3\n\nInput\nCopy\n6 8\nOutput\nCopy\n3\n\n",
  "Note": "NoteHere are the heights of some valid castles:   n\u2009=\u20095,\u2009H\u2009=\u20092,\u2009[2,\u20092,\u20091,\u20090,\u2009...],\u2009[2,\u20091,\u20091,\u20091,\u20090,\u2009...],\u2009[1,\u20090,\u20091,\u20092,\u20091,\u20090,\u2009...]  n\u2009=\u20096,\u2009H\u2009=\u20098,\u2009[3,\u20092,\u20091,\u20090,\u2009...],\u2009[2,\u20092,\u20091,\u20091,\u20090,\u2009...],\u2009[0,\u20091,\u20090,\u20091,\u20092,\u20091,\u20091,\u20090...] (this one has 5 spots occupied) The first list for both cases is the optimal answer, 3 spots are occupied in them.And here are some invalid ones:  n\u2009=\u20095,\u2009H\u2009=\u20092,\u2009[3,\u20092,\u20090,\u2009...],\u2009[2,\u20093,\u20090,\u2009...],\u2009[1,\u20090,\u20092,\u20092,\u2009...]  n\u2009=\u20096,\u2009H\u2009=\u20098,\u2009[2,\u20092,\u20092,\u20090,\u2009...],\u2009[6,\u20090,\u2009...],\u2009[1,\u20094,\u20091,\u20090...],\u2009[2,\u20092,\u20091,\u20090,\u2009...] ",
  "Input Description": "The only line contains two integer numbers n and H (1\u2009\u2264\u2009n,\u2009H\u2009\u2264\u20091018) \u2014 the number of sand packs you have and the height of the fence, respectively.",
  "Output Description": "Print the minimum number of spots you can occupy so the all the castle building conditions hold.",
  "Time Limit": "2 seconds",
  "Description": "You are going to the beach with the idea to build the greatest sand castle ever in your head! The beach is not as three-dimensional as you could have imagined, it can be decribed as a line of spots to pile up sand pillars. Spots are numbered 1 through infinity from left to right. Obviously, there is not enough sand on the beach, so you brought n packs of sand with you. Let height hi of the sand pillar on some spot i be the number of sand packs you spent on it. You can't split a sand pack to multiple pillars, all the sand from it should go to a single one. There is a fence of height equal to the height of pillar with H sand packs to the left of the first spot and you should prevent sand from going over it. Finally you ended up with the following conditions to building the castle:  h1\u2009\u2264\u2009H: no sand from the leftmost spot should go over the fence;  For any  |hi\u2009-\u2009hi\u2009+\u20091|\u2009\u2264\u20091: large difference in heights of two neighboring pillars can lead sand to fall down from the higher one to the lower, you really don't want this to happen;  : you want to spend all the sand you brought with you. As you have infinite spots to build, it is always possible to come up with some valid castle structure. Though you want the castle to be as compact as possible. Your task is to calculate the minimum number of spots you can occupy so that all the aforementioned conditions hold.",
  "Title": "D. Sand Fortress",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n6 3 10\n7 2 7 7 4 2\nOutput\nCopy\nYES\n\nInput\nCopy\n6 2 3\n4 5 3 13 4 10\nOutput\nCopy\nYES\n\nInput\nCopy\n3 2 5\n10 16 22\nOutput\nCopy\nNO\n\n",
  "Note": "NoteIn the first example it is possible to distribute pencils into 2 boxes with 3 pencils in each with any distribution. And you also can put all the pencils into the same box, difference of any pair in it won't exceed 10.In the second example you can split pencils of saturations [4,\u20095,\u20093,\u20094] into 2 boxes of size 2 and put the remaining ones into another box.",
  "Input Description": "The first line contains three integer numbers n, k and d (1\u2009\u2264\u2009k\u2009\u2264\u2009n\u2009\u2264\u20095\u00b7105, 0\u2009\u2264\u2009d\u2009\u2264\u2009109) \u2014 the number of pencils, minimal size of any non-empty box and maximal difference in saturation between any pair of pencils in the same box, respectively.The second line contains n integer numbers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009109) \u2014 saturation of color of each pencil.",
  "Output Description": "Print \"YES\" if it's possible to distribute all the pencils into boxes and satisfy all the conditions. Otherwise print \"NO\".",
  "Time Limit": "2 seconds",
  "Description": "Mishka received a gift of multicolored pencils for his birthday! Unfortunately he lives in a monochrome world, where everything is of the same color and only saturation differs. This pack can be represented as a sequence a1,\u2009a2,\u2009...,\u2009an of n integer numbers \u2014 saturation of the color of each pencil. Now Mishka wants to put all the mess in the pack in order. He has an infinite number of empty boxes to do this. He would like to fill some boxes in such a way that:  Each pencil belongs to exactly one box;  Each non-empty box has at least k pencils in it;  If pencils i and j belong to the same box, then |ai\u2009-\u2009aj|\u2009\u2264\u2009d, where |x| means absolute value of x. Note that the opposite is optional, there can be pencils i and j such that |ai\u2009-\u2009aj|\u2009\u2264\u2009d and they belong to different boxes. Help Mishka to determine if it's possible to distribute all the pencils into boxes. Print \"YES\" if there exists such a distribution. Otherwise print \"NO\".",
  "Title": "E. Pencils and Boxes",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n7 4\nabacaba\n1 1 1\n1 4 2\n2 1 3\n2 4 3\nOutput\nCopy\nYES\nYES\nNO\nYES\n\n",
  "Note": "NoteThe queries in the example are following:   substrings \"a\" and \"a\" are isomorphic: f(a)\u2009=\u2009a;  substrings \"ab\" and \"ca\" are isomorphic: f(a)\u2009=\u2009c, f(b)\u2009=\u2009a;  substrings \"bac\" and \"aba\" are not isomorphic since f(b) and f(c) must be equal to a at same time;  substrings \"bac\" and \"cab\" are isomorphic: f(b)\u2009=\u2009c, f(a)\u2009=\u2009a, f(c)\u2009=\u2009b. ",
  "Input Description": "The first line contains two space-separated integers n and m (1\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7105, 1\u2009\u2264\u2009m\u2009\u2264\u20092\u00b7105) \u2014 the length of the string s and the number of queries.The second line contains string s consisting of n lowercase English letters.The following m lines contain a single query on each line: xi, yi and leni (1\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u2009n, 1\u2009\u2264\u2009leni\u2009\u2264\u2009n\u2009-\u2009max(xi,\u2009yi)\u2009+\u20091) \u2014 the description of the pair of the substrings to check.",
  "Output Description": "For each query in a separate line print \"YES\" if substrings s[xi... xi\u2009+\u2009leni\u2009-\u20091] and s[yi... yi\u2009+\u2009leni\u2009-\u20091] are isomorphic and \"NO\" otherwise.",
  "Time Limit": "3 seconds",
  "Description": "You are given a string s of length n consisting of lowercase English letters.For two given strings s and t, say S is the set of distinct characters of s and T is the set of distinct characters of t. The strings s and t are isomorphic if their lengths are equal and there is a one-to-one mapping (bijection) f between S and T for which f(si)\u2009=\u2009ti. Formally:  f(si)\u2009=\u2009ti for any index i,  for any character  there is exactly one character  that f(x)\u2009=\u2009y,  for any character  there is exactly one character  that f(x)\u2009=\u2009y. For example, the strings \"aababc\" and \"bbcbcz\" are isomorphic. Also the strings \"aaaww\" and \"wwwaa\" are isomorphic. The following pairs of strings are not isomorphic: \"aab\" and \"bbb\", \"test\" and \"best\".You have to handle m queries characterized by three integers x,\u2009y,\u2009len (1\u2009\u2264\u2009x,\u2009y\u2009\u2264\u2009n\u2009-\u2009len\u2009+\u20091). For each query check if two substrings s[x... x\u2009+\u2009len\u2009-\u20091] and s[y... y\u2009+\u2009len\u2009-\u20091] are isomorphic.",
  "Title": "F. Isomorphic Strings",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n4 0\n2 3 4\nOutput\nCopy\n64\n\nInput\nCopy\n4 1\n2 3 4\n1 0\nOutput\nCopy\n38\n\nInput\nCopy\n6 4\n1 5 3\n0 3\n3 5\n5 4\n4 3\nOutput\nCopy\n164\n\n",
  "Note": "NoteIn the first example all 44 teams are valid, i.e. triples: {0, 1, 2}, {0, 1, 3}, {0, 2, 3} {1, 2, 3}.In the second example teams are following: {0, 2, 3}, {1, 2, 3}.In the third example teams are following: {0, 1, 2}, {0, 1, 4}, {0, 1, 5}, {0, 2, 4}, {0, 2, 5}, {1, 2, 3}, {1, 2, 4}, {1, 2, 5}.",
  "Input Description": "The first line contains two space-separated integers nn and mm (3\u2264n\u22642\u22c51053\u2264n\u22642\u22c5105, 0\u2264m\u22642\u22c51050\u2264m\u22642\u22c5105) \u2014 the number of players and the number of conflicting pairs.The second line contains three space-separated integers AA, BB and CC (1\u2264A,B,C\u22641061\u2264A,B,C\u2264106) \u2014 coefficients for team rank calculation.Each of the next mm lines contains two space-separated integers uiui and vivi (0\u2264ui,vi<n,ui\u2260vi0\u2264ui,vi<n,ui\u2260vi) \u2014 pair of conflicting players.It's guaranteed that each unordered pair of players appears in the input file no more than once.",
  "Output Description": "Print single integer \u2014 the total sum of ranks over all possible teams modulo 264264.",
  "Time Limit": "2 seconds",
  "Description": "There are nn players numbered from 00 to n\u22121n\u22121 with ranks. The ii-th player has rank ii.Players can form teams: the team should consist of three players and no pair of players in the team should have a conflict. The rank of the team is calculated using the following algorithm: let ii, jj, kk be the ranks of players in the team and i<j<ki<j<k, then the rank of the team is equal to A\u22c5i+B\u22c5j+C\u22c5kA\u22c5i+B\u22c5j+C\u22c5k.You are given information about the pairs of players who have a conflict. Calculate the total sum of ranks over all possible valid teams modulo 264264.",
  "Title": "G. Team Players",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n5 5 4 3\n1 2 4 3 2\n1 2\n2 3\n3 4\n4 1\n4 5\nOutput\nCopy\n2 2 2 2 3 \n\nInput\nCopy\n7 6 3 2\n1 2 3 3 2 2 1\n1 2\n2 3\n3 4\n2 5\n5 6\n6 7\nOutput\nCopy\n1 1 1 2 2 1 1 \n\n",
  "Note": "NoteLet's look at the first sample.To hold a fair in town 11 you can bring goods from towns 11 (00 coins), 22 (11 coin) and 44 (11 coin). Total numbers of coins is 22.Town 22: Goods from towns 22 (00), 11 (11), 33 (11). Sum equals 22.Town 33: Goods from towns 33 (00), 22 (11), 44 (11). Sum equals 22.Town 44: Goods from towns 44 (00), 11 (11), 55 (11). Sum equals 22.Town 55: Goods from towns 55 (00), 44 (11), 33 (22). Sum equals 33.",
  "Input Description": "There are 44 integers nn, mm, kk, ss in the first line of input (1\u2264n\u22641051\u2264n\u2264105, 0\u2264m\u22641050\u2264m\u2264105, 1\u2264s\u2264k\u2264min(n,100)1\u2264s\u2264k\u2264min(n,100))\u00a0\u2014 the number of towns, the number of roads, the number of different types of goods, the number of different types of goods necessary to hold a fair.In the next line there are nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u2264k1\u2264ai\u2264k), where aiai is the type of goods produced in the ii-th town. It is guaranteed that all integers between 11 and kk occur at least once among integers aiai.In the next mm lines roads are described. Each road is described by two integers uu vv (1\u2264u,v\u2264n1\u2264u,v\u2264n, u\u2260vu\u2260v)\u00a0\u2014 the towns connected by this road. It is guaranteed that there is no more than one road between every two towns. It is guaranteed that you can go from any town to any other town via roads.",
  "Output Description": "Print nn numbers, the ii-th of them is the minimum number of coins you need to spend on travel expenses to hold a fair in town ii. Separate numbers with spaces.",
  "Time Limit": "2 seconds",
  "Description": "Some company is going to hold a fair in Byteland. There are nn towns in Byteland and mm two-way roads between towns. Of course, you can reach any town from any other town using roads.There are kk types of goods produced in Byteland and every town produces only one type. To hold a fair you have to bring at least ss different types of goods. It costs d(u,v)d(u,v) coins to bring goods from town uu to town vv where d(u,v)d(u,v) is the length of the shortest path from uu to vv. Length of a path is the number of roads in this path.The organizers will cover all travel expenses but they can choose the towns to bring goods from. Now they want to calculate minimum expenses to hold a fair in each of nn towns.",
  "Title": "A. Fair",
  "Memory Limit": "512 megabytes"
}{
  "Example": "Input\nCopy\n5\n2 4 5 1 3\nOutput\nCopy\nPetr\n\n",
  "Note": "NotePlease note that the sample is not a valid test (because of limitations for nn) and is given only to illustrate input/output format. Your program still has to print correct answer to this test to get AC.Due to randomness of input hacks in this problem are forbidden.",
  "Input Description": "In the first line of input there is one integer nn (103\u2264n\u2264106103\u2264n\u2264106).In the second line there are nn distinct integers between 11 and nn\u00a0\u2014 the permutation of size nn from the test.It is guaranteed that all tests except for sample are generated this way: First we choose nn\u00a0\u2014 the size of the permutation. Then we randomly choose a method to generate a permutation\u00a0\u2014 the one of Petr or the one of Alex. Then we generate a permutation using chosen method.",
  "Output Description": "If the test is generated via Petr's method print \"Petr\" (without quotes). If the test is generated via Alex's method print \"Um_nik\" (without quotes).",
  "Time Limit": "2 seconds",
  "Description": "Petr likes to come up with problems about randomly generated data. This time problem is about random permutation. He decided to generate a random permutation this way: he takes identity permutation of numbers from 11 to nn and then 3n3n times takes a random pair of different elements and swaps them. Alex envies Petr and tries to imitate him in all kind of things. Alex has also come up with a problem about random permutation. He generates a random permutation just like Petr but swaps elements 7n+17n+1 times instead of 3n3n times. Because it is more random, OK?!You somehow get a test from one of these problems and now you want to know from which one.",
  "Title": "B. Petr and Permutations",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n2 3\n1 2 3\nOutput\nCopy\n2\n\nInput\nCopy\n5 5\n5 19 10 20 12\nOutput\nCopy\n2\n\n",
  "Note": "NoteGraph from first sample:Graph from second sample:",
  "Input Description": "In the first line of input there are two integers nn and mm (0\u2264n\u2264220\u2264n\u226422, 1\u2264m\u22642n1\u2264m\u22642n).In the second line there are mm integers a1,a2,\u2026,ama1,a2,\u2026,am (0\u2264ai<2n0\u2264ai<2n)\u00a0\u2014 the elements of the set. All aiai are distinct.",
  "Output Description": "Print the number of connected components.",
  "Time Limit": "4 seconds",
  "Description": "You are given a set of size mm with integer elements between 00 and 2n\u221212n\u22121 inclusive. Let's build an undirected graph on these integers in the following way: connect two integers xx and yy with an edge if and only if x&y=0x&y=0. Here && is the bitwise AND operation. Count the number of connected components in that graph.",
  "Title": "C. AND Graph",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n36\nOutput\nCopy\n10\n\nInput\nCopy\n37\nOutput\nCopy\n11\n\nInput\nCopy\n12345678901234567890123456789\nOutput\nCopy\n177\n\n",
  "Note": "",
  "Input Description": "In the only line of input there is one positive integer nn. The length of the decimal representation of nn is no greater than 1.5\u22c51061.5\u22c5106. The integer does not contain leading zeros.",
  "Output Description": "Print one number\u00a0\u2014 minimal value of \u2211mi=1bi\u2211i=1mbi.",
  "Time Limit": "2 seconds",
  "Description": "You are working as an analyst in a company working on a new system for big data storage. This system will store nn different objects. Each object should have a unique ID.To create the system, you choose the parameters of the system\u00a0\u2014 integers m\u22651m\u22651 and b1,b2,\u2026,bmb1,b2,\u2026,bm. With these parameters an ID of some object in the system is an array of integers [a1,a2,\u2026,am][a1,a2,\u2026,am] where 1\u2264ai\u2264bi1\u2264ai\u2264bi holds for every 1\u2264i\u2264m1\u2264i\u2264m.Developers say that production costs are proportional to \u2211mi=1bi\u2211i=1mbi. You are asked to choose parameters mm and bibi so that the system will be able to assign unique IDs to nn different objects and production costs are minimized. Note that you don't have to use all available IDs.",
  "Title": "D. Perfect Encoding",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n4\n1 2\n1 3\n1 4\n6 4 9 5\n3\n2 3 6\n2 3 2\n3 4 7\nOutput\nCopy\n36\n4\n1\n\nInput\nCopy\n6\n1 2\n2 3\n2 4\n1 5\n5 6\n100000 200000 500000 40000 800000 250000\n3\n3 5 10000000\n6 2 3500000\n4 1 64000\nOutput\nCopy\n196000\n12250\n999998215\n\n",
  "Note": "",
  "Input Description": "In the first line of input there is one integer nn (1\u2264n\u22641051\u2264n\u2264105)\u00a0\u2014 the size of the tree.In the next n\u22121n\u22121 lines the edges of the tree are described. The ii-th edge is described with two integers uiui and vivi (1\u2264ui,vi\u2264n1\u2264ui,vi\u2264n) and it connects the vertices uiui and vivi. It is guaranteed that graph with these edges is a tree.In the next line there are nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264av\u22641071\u2264av\u2264107).In the next line there is one integer qq (1\u2264q\u22641051\u2264q\u2264105)\u00a0\u2014 the number of queries.And in the next qq lines the queries are described. Each query is described with three integers uiui, vivi and xixi (1\u2264ui,vi\u2264n1\u2264ui,vi\u2264n, 1\u2264xi\u22641071\u2264xi\u2264107).",
  "Output Description": "Print qq numbers\u00a0\u2014 the answers to the queries in the order they are given in the input. Print each answer modulo 109+7=1000000007109+7=1000000007. Print each number on a separate line.",
  "Time Limit": "3 seconds",
  "Description": "Let the main characters of this problem be personages from some recent movie. New Avengers seem to make a lot of buzz. I didn't watch any part of the franchise and don't know its heroes well, but it won't stop me from using them in this problem statement. So, Thanos and Dr. Strange are doing their superhero and supervillain stuff, but then suddenly they stumble across a regular competitive programming problem.You are given a tree with nn vertices.In each vertex vv there is positive integer avav.You have to answer qq queries.Each query has a from uu vv xx.You have to calculate \u220fw\u2208Pgcd(x,aw)mod(109+7)\u220fw\u2208Pgcd(x,aw)mod(109+7), where PP is a set of vertices on path from uu to vv. In other words, you are to calculate the product of gcd(x,aw)gcd(x,aw) for all vertices ww on the path from uu to vv. As it might be large, compute it modulo 109+7109+7. Here gcd(s,t)gcd(s,t) denotes the greatest common divisor of ss and tt.Note that the numbers in vertices do not change after queries.I suppose that you are more interested in superhero business of Thanos and Dr. Strange than in them solving the problem. So you are invited to solve this problem instead of them.",
  "Title": "E. Prince's Problem",
  "Memory Limit": "512 megabytes"
}{
  "Example": "Input\nCopy\n3\n7 7\n3 8\n5 6\nOutput\nCopy\nYES\nNO\nYES\n\n",
  "Note": "",
  "Input Description": "In the first line of input there is one integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of options for nn and kk to check.In the next tt lines the options are given: each option is described with two integers nn and kk (1\u2264n\u226410181\u2264n\u22641018, 1\u2264k\u226410151\u2264k\u22641015)\u00a0\u2014 the number of dancers and the duration in seconds.It is guaranteed that the number of different values of kk in one test is not greater than 5050.",
  "Output Description": "Print tt lines. If the ii-th option of the video is feasible, print \"YES\" (without quotes) in ii-th line, otherwise print \"NO\" (without quotes).",
  "Time Limit": "5 seconds",
  "Description": "Surely you have seen insane videos by South Korean rapper PSY, such as \"Gangnam Style\", \"Gentleman\" and \"Daddy\". You might also hear that PSY has been recording video \"Oppa Funcan Style\" two years ago (unfortunately we couldn't find it on the internet). We will remind you what this hit looked like (you can find original description here):On the ground there are nn platforms, which are numbered with integers from 11 to nn, on ii-th platform there is a dancer with number ii. Further, every second all the dancers standing on the platform with number ii jump to the platform with the number f(i)f(i). The moving rule ff is selected in advance and is not changed throughout the clip.The duration of the clip was kk seconds and the rule ff was chosen in such a way that after kk seconds all dancers were in their initial positions (i.e. the ii-th dancer stood on the platform with the number ii). That allowed to loop the clip and collect even more likes.PSY knows that enhanced versions of old artworks become more and more popular every day. So he decided to release a remastered-version of his video.In his case \"enhanced version\" means even more insanity, so the number of platforms can be up to 10181018! But the video director said that if some dancer stays on the same platform all the time, then the viewer will get bored and will turn off the video immediately. Therefore, for all xx from 11 to nn f(x)\u2260xf(x)\u2260x must hold.Big part of classic video's success was in that looping, so in the remastered version all dancers should return to their initial positions in the end of the clip as well.PSY hasn't decided on the exact number of platforms and video duration yet, so he asks you to check if there is a good rule ff for different options.",
  "Title": "F. Oppa Funcan Style Remastered",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n4\nred\npurple\nyellow\norange\nOutput\nCopy\n2\nSpace\nTime\n\nInput\nCopy\n0\nOutput\nCopy\n6\nTime\nMind\nSoul\nPower\nReality\nSpace\n\n",
  "Note": "NoteIn the first sample Thanos already has Reality, Power, Mind and Soul Gems, so he needs two more: Time and Space.In the second sample Thanos doesn't have any Gems, so he needs all six.",
  "Input Description": "In the first line of input there is one integer nn (0\u2264n\u226460\u2264n\u22646)\u00a0\u2014 the number of Gems in Infinity Gauntlet.In next nn lines there are colors of Gems you saw. Words used for colors are: purple, green, blue, orange, red, yellow. It is guaranteed that all the colors are distinct. All colors are given in lowercase English letters.",
  "Output Description": "In the first line output one integer mm (0\u2264m\u226460\u2264m\u22646)\u00a0\u2014 the number of absent Gems.Then in mm lines print the names of absent Gems, each on its own line. Words used for names are: Power, Time, Space, Soul, Reality, Mind. Names can be printed in any order. Keep the first letter uppercase, others lowercase.",
  "Time Limit": "1 second",
  "Description": "You took a peek on Thanos wearing Infinity Gauntlet. In the Gauntlet there is a place for six Infinity Gems:  the Power Gem of purple color,  the Time Gem of green color,  the Space Gem of blue color,  the Soul Gem of orange color,  the Reality Gem of red color,  the Mind Gem of yellow color. Using colors of Gems you saw in the Gauntlet determine the names of absent Gems.",
  "Title": "A. Infinity Gauntlet",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n5 8\nOutput\nCopy\n&gt;\n\nInput\nCopy\n10 3\nOutput\nCopy\n&lt;\n\nInput\nCopy\n6 6\nOutput\nCopy\n=\n\n",
  "Note": "NoteIn the first example 58=5\u22c55\u22c55\u22c55\u22c55\u22c55\u22c55\u22c55=39062558=5\u22c55\u22c55\u22c55\u22c55\u22c55\u22c55\u22c55=390625, and 85=8\u22c58\u22c58\u22c58\u22c58=3276885=8\u22c58\u22c58\u22c58\u22c58=32768. So you should print '>'.In the second example 103=1000<310=59049103=1000<310=59049.In the third example 66=46656=6666=46656=66.",
  "Input Description": "On the only line of input there are two integers xx and yy (1\u2264x,y\u22641091\u2264x,y\u2264109).",
  "Output Description": "If xy<yxxy<yx, then print '<' (without quotes). If xy>yxxy>yx, then print '>' (without quotes). If xy=yxxy=yx, then print '=' (without quotes).",
  "Time Limit": "1 second",
  "Description": "Year 2118. Androids are in mass production for decades now, and they do all the work for humans. But androids have to go to school to be able to solve creative tasks. Just like humans before.It turns out that high school struggles are not gone. If someone is not like others, he is bullied. Vasya-8800 is an economy-class android which is produced by a little-known company. His design is not perfect, his characteristics also could be better. So he is bullied by other androids.One of the popular pranks on Vasya is to force him to compare xyxy with yxyx. Other androids can do it in milliseconds while Vasya's memory is too small to store such big numbers.Please help Vasya! Write a fast program to compare xyxy with yxyx for Vasya, maybe then other androids will respect him.",
  "Title": "B. High School: Become Human",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n5\n2 4 5 4 10\n40 30 20 10 40\nOutput\nCopy\n90\n\nInput\nCopy\n3\n100 101 100\n2 4 5\nOutput\nCopy\n-1\n\nInput\nCopy\n10\n1 2 3 4 5 6 7 8 9 10\n10 13 11 14 15 12 13 13 18 13\nOutput\nCopy\n33\n\n",
  "Note": "NoteIn the first example you can, for example, choose displays 11, 44 and 55, because s1<s4<s5s1<s4<s5 (2<4<102<4<10), and the rent cost is 40+10+40=9040+10+40=90.In the second example you can't select a valid triple of indices, so the answer is -1.",
  "Input Description": "The first line contains a single integer nn (3\u2264n\u226430003\u2264n\u22643000)\u00a0\u2014 the number of displays.The second line contains nn integers s1,s2,\u2026,sns1,s2,\u2026,sn (1\u2264si\u22641091\u2264si\u2264109)\u00a0\u2014 the font sizes on the displays in the order they stand along the road.The third line contains nn integers c1,c2,\u2026,cnc1,c2,\u2026,cn (1\u2264ci\u22641081\u2264ci\u2264108)\u00a0\u2014 the rent costs for each display.",
  "Output Description": "If there are no three displays that satisfy the criteria, print -1. Otherwise print a single integer\u00a0\u2014 the minimum total rent cost of three displays with indices i<j<ki<j<k such that si<sj<sksi<sj<sk.",
  "Time Limit": "1 second",
  "Description": "It is the middle of 2018 and Maria Stepanovna, who lives outside Krasnokamensk (a town in Zabaikalsky region), wants to rent three displays to highlight an important problem.There are nn displays placed along a road, and the ii-th of them can display a text with font size sisi only. Maria Stepanovna wants to rent such three displays with indices i<j<ki<j<k that the font size increases if you move along the road in a particular direction. Namely, the condition si<sj<sksi<sj<sk should be held.The rent cost is for the ii-th display is cici. Please determine the smallest cost Maria Stepanovna should pay.",
  "Title": "C. Three displays",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n5 3\n15 13 15 15 12\nOutput\nCopy\nYES\n1 2 5 \n\nInput\nCopy\n5 4\n15 13 15 15 12\nOutput\nCopy\nNO\n\nInput\nCopy\n4 4\n20 10 40 30\nOutput\nCopy\nYES\n1 2 3 4 \n\n",
  "Note": "NoteAll possible answers for the first example:   {1 2 5}  {2 3 5}  {2 4 5} Note that the order does not matter.",
  "Input Description": "The first line contains two integers nn and kk (1\u2264k\u2264n\u22641001\u2264k\u2264n\u2264100) \u2014 the number of students and the size of the team you have to form.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641001\u2264ai\u2264100), where aiai is the rating of ii-th student.",
  "Output Description": "If it is impossible to form a suitable team, print \"NO\" (without quotes). Otherwise print \"YES\", and then print kk distinct integers from 11 to nn which should be the indices of students in the team you form. All the ratings of the students in the team should be distinct. You may print the indices in any order. If there are multiple answers, print any of them.Assume that the students are numbered from 11 to nn.",
  "Time Limit": "1 second",
  "Description": "There are nn students in a school class, the rating of the ii-th student on Codehorses is aiai. You have to form a team consisting of kk students (1\u2264k\u2264n1\u2264k\u2264n) such that the ratings of all team members are distinct.If it is impossible to form a suitable team, print \"NO\" (without quotes). Otherwise print \"YES\", and then print kk distinct numbers which should be the indices of students in the team you form. If there are multiple answers, print any of them.",
  "Title": "A. Diverse Team",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n5\na\naba\nabacaba\nba\naba\nOutput\nCopy\nYES\na\nba\naba\naba\nabacaba\n\nInput\nCopy\n5\na\nabacaba\nba\naba\nabab\nOutput\nCopy\nNO\n\nInput\nCopy\n3\nqwerty\nqwerty\nqwerty\nOutput\nCopy\nYES\nqwerty\nqwerty\nqwerty\n\n",
  "Note": "NoteIn the second example you cannot reorder the strings because the string \"abab\" is not a substring of the string \"abacaba\".",
  "Input Description": "The first line contains an integer nn (1\u2264n\u22641001\u2264n\u2264100) \u2014 the number of strings.The next nn lines contain the given strings. The number of letters in each string is from 11 to 100100, inclusive. Each string consists of lowercase English letters.Some strings might be equal.",
  "Output Description": "If it is impossible to reorder nn given strings in required order, print \"NO\" (without quotes).Otherwise print \"YES\" (without quotes) and nn given strings in required order.",
  "Time Limit": "1 second",
  "Description": "You are given nn strings. Each string consists of lowercase English letters. Rearrange (reorder) the given strings in such a way that for every string, all strings that are placed before it are its substrings.String aa is a substring of string bb if it is possible to choose several consecutive letters in bb in such a way that they form aa. For example, string \"for\" is contained as a substring in strings \"codeforces\", \"for\" and \"therefore\", but is not contained as a substring in strings \"four\", \"fofo\" and \"rof\".",
  "Title": "B. Substrings Sort",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n2\n5\n2 3 1 3 2\n6\n1 1 2 2 2 1\nOutput\nCopy\nYES\n2 6\n1 2\n\nInput\nCopy\n3\n1\n5\n5\n1 1 1 1 1\n2\n2 3\nOutput\nCopy\nNO\n\nInput\nCopy\n4\n6\n2 2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\nOutput\nCopy\nYES\n2 2\n4 1\n\n",
  "Note": "NoteIn the first example there are two sequences [2,3,1,3,2][2,3,1,3,2] and [1,1,2,2,2,1][1,1,2,2,2,1]. You can remove the second element from the first sequence to get [2,1,3,2][2,1,3,2] and you can remove the sixth element from the second sequence to get [1,1,2,2,2][1,1,2,2,2]. The sums of the both resulting sequences equal to 88, i.e. the sums are equal.",
  "Input Description": "The first line contains an integer kk (2\u2264k\u22642\u22c51052\u2264k\u22642\u22c5105) \u2014 the number of sequences.Then kk pairs of lines follow, each pair containing a sequence.The first line in the ii-th pair contains one integer nini (1\u2264ni<2\u22c51051\u2264ni<2\u22c5105) \u2014 the length of the ii-th sequence. The second line of the ii-th pair contains a sequence of nini integers ai,1,ai,2,\u2026,ai,niai,1,ai,2,\u2026,ai,ni.The elements of sequences are integer numbers from \u2212104\u2212104 to 104104.The sum of lengths of all given sequences don't exceed 2\u22c51052\u22c5105, i.e. n1+n2+\u22ef+nk\u22642\u22c5105n1+n2+\u22ef+nk\u22642\u22c5105.",
  "Output Description": "If it is impossible to choose two sequences such that they satisfy given conditions, print \"NO\" (without quotes). Otherwise in the first line print \"YES\" (without quotes), in the second line \u2014 two integers ii, xx (1\u2264i\u2264k,1\u2264x\u2264ni1\u2264i\u2264k,1\u2264x\u2264ni), in the third line \u2014 two integers jj, yy (1\u2264j\u2264k,1\u2264y\u2264nj1\u2264j\u2264k,1\u2264y\u2264nj). It means that the sum of the elements of the ii-th sequence without the element with index xx equals to the sum of the elements of the jj-th sequence without the element with index yy.Two chosen sequences must be distinct, i.e. i\u2260ji\u2260j. You can print them in any order.If there are multiple possible answers, print any of them.",
  "Time Limit": "2 seconds",
  "Description": "You are given kk sequences of integers. The length of the ii-th sequence equals to nini.You have to choose exactly two sequences ii and jj (i\u2260ji\u2260j) such that you can remove exactly one element in each of them in such a way that the sum of the changed sequence ii (its length will be equal to ni\u22121ni\u22121) equals to the sum of the changed sequence jj (its length will be equal to nj\u22121nj\u22121).Note that it's required to remove exactly one element in each of the two chosen sequences.Assume that the sum of the empty (of the length equals 00) sequence is 00.",
  "Title": "C. Equal Sums",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n6\n3 5 4 7 10 12\nOutput\nCopy\n3\n7 3 5\n\nInput\nCopy\n5\n-1 2 5 8 11\nOutput\nCopy\n1\n8\n\n",
  "Note": "NoteIn the first example the answer is [7,3,5][7,3,5]. Note, that |7\u22123|=4=22|7\u22123|=4=22, |7\u22125|=2=21|7\u22125|=2=21 and |3\u22125|=2=21|3\u22125|=2=21. You can't find a subset having more points satisfying the required property.",
  "Input Description": "The first line contains one integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105) \u2014 the number of points.The second line contains nn pairwise distinct integers x1,x2,\u2026,xnx1,x2,\u2026,xn (\u2212109\u2264xi\u2264109\u2212109\u2264xi\u2264109) \u2014 the coordinates of points.",
  "Output Description": "In the first line print mm \u2014 the maximum possible number of points in a subset that satisfies the conditions described above.In the second line print mm integers \u2014 the coordinates of points in the subset you have chosen.If there are multiple answers, print any of them.",
  "Time Limit": "4 seconds",
  "Description": "There are nn distinct points on a coordinate line, the coordinate of ii-th point equals to xixi. Choose a subset of the given set of points such that the distance between each pair of points in a subset is an integral power of two. It is necessary to consider each pair of points, not only adjacent. Note that any subset containing one element satisfies the condition above. Among all these subsets, choose a subset with maximum possible size.In other words, you have to choose the maximum possible number of points xi1,xi2,\u2026,ximxi1,xi2,\u2026,xim such that for each pair xijxij, xikxik it is true that |xij\u2212xik|=2d|xij\u2212xik|=2d where dd is some non-negative integer number (not necessarily the same for each pair of points).",
  "Title": "D. Points and Powers of Two",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n5071\nOutput\nCopy\n4\n\nInput\nCopy\n705\nOutput\nCopy\n1\n\nInput\nCopy\n1241367\nOutput\nCopy\n-1\n\n",
  "Note": "NoteIn the first example one of the possible sequences of moves is 5071 \u2192\u2192 5701 \u2192\u2192 7501 \u2192\u2192 7510 \u2192\u2192 7150.",
  "Input Description": "The first line contains an integer nn (1\u2264n\u226410181\u2264n\u22641018). It is guaranteed that the first (left) digit of the number nn is not a zero.",
  "Output Description": "If it is impossible to obtain a number that is divisible by 2525, print -1. Otherwise print the minimum number of moves required to obtain such number.Note that you can swap only adjacent digits in the given number.",
  "Time Limit": "1 second",
  "Description": "You are given an integer nn from 11 to 10181018 without leading zeroes.In one move you can swap any two adjacent digits in the given number in such a way that the resulting number will not contain leading zeroes. In other words, after each move the number you have cannot contain any leading zeroes.What is the minimum number of moves you have to make to obtain a number that is divisible by 2525? Print -1 if it is impossible to obtain a number that is divisible by 2525.",
  "Title": "E. Divisibility by 25",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\nOutput\nCopy\n14\n\nInput\nCopy\n10 1 1\n0 9\n0 5\nOutput\nCopy\n45\n\nInput\nCopy\n10 1 1\n0 9\n1 5\nOutput\nCopy\n-1\n\n",
  "Note": "NoteIn the first example the only possible strategy is to take the fourth umbrella at the point x=1x=1, keep it till the point x=7x=7 (the total fatigue at x=7x=7 will be equal to 1212), throw it away, move on from x=7x=7 to x=8x=8 without an umbrella, take the third umbrella at x=8x=8 and keep it till the end (the total fatigue at x=10x=10 will be equal to 1414). In the second example the only possible strategy is to take the first umbrella, move with it till the point x=9x=9, throw it away and proceed without an umbrella till the end.",
  "Input Description": "The first line contains three integers aa, nn and mm (1\u2264a,m\u22642000,1\u2264n\u2264\u2308a2\u23091\u2264a,m\u22642000,1\u2264n\u2264\u2308a2\u2309) \u2014 the point at which Polycarp's friend lives, the number of the segments in the rain and the number of umbrellas.Each of the next nn lines contains two integers lili and riri (0\u2264li<ri\u2264a0\u2264li<ri\u2264a) \u2014 the borders of the ii-th segment under rain. It is guaranteed that there is no pair of intersecting segments. In other words, for each pair of segments ii and jj either ri<ljri<lj or rj<lirj<li.Each of the next mm lines contains two integers xixi and pipi (0\u2264xi\u2264a0\u2264xi\u2264a, 1\u2264pi\u22641051\u2264pi\u2264105) \u2014 the location and the weight of the ii-th umbrella.",
  "Output Description": "Print \"-1\" (without quotes) if Polycarp can't make his way from point x=0x=0 to point x=ax=a. Otherwise print one integer \u2014 the minimum total fatigue after reaching x=ax=a, if Polycarp picks up and throws away umbrellas optimally.",
  "Time Limit": "2 seconds",
  "Description": "Polycarp lives on a coordinate line at the point x=0x=0. He goes to his friend that lives at the point x=ax=a. Polycarp can move only from left to right, he can pass one unit of length each second.Now it's raining, so some segments of his way are in the rain. Formally, it's raining on nn non-intersecting segments, the ii-th segment which is in the rain is represented as [li,ri][li,ri] (0\u2264li<ri\u2264a0\u2264li<ri\u2264a).There are mm umbrellas lying on the line, the ii-th umbrella is located at point xixi (0\u2264xi\u2264a0\u2264xi\u2264a) and has weight pipi. When Polycarp begins his journey, he doesn't have any umbrellas.During his journey from x=0x=0 to x=ax=a Polycarp can pick up and throw away umbrellas. Polycarp picks up and throws down any umbrella instantly. He can carry any number of umbrellas at any moment of time. Because Polycarp doesn't want to get wet, he must carry at least one umbrella while he moves from xx to x+1x+1 if a segment [x,x+1][x,x+1] is in the rain (i.e. if there exists some ii such that li\u2264xli\u2264x and x+1\u2264rix+1\u2264ri).The condition above is the only requirement. For example, it is possible to go without any umbrellas to a point where some rain segment starts, pick up an umbrella at this point and move along with an umbrella. Polycarp can swap umbrellas while he is in the rain.Each unit of length passed increases Polycarp's fatigue by the sum of the weights of umbrellas he carries while moving.Can Polycarp make his way from point x=0x=0 to point x=ax=a? If yes, find the minimum total fatigue after reaching x=ax=a, if Polycarp picks up and throws away umbrellas optimally.",
  "Title": "F. Rain and Umbrellas",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n5 6\n2 2 3\n2 4 5\n1 4\n1 5\n0\n1\nOutput\nCopy\nWin\n1 2 4 5 \n\nInput\nCopy\n3 2\n1 3\n1 1\n0\n2\nOutput\nCopy\nLose\n\nInput\nCopy\n2 2\n1 2\n1 1\n1\nOutput\nCopy\nDraw\n\n",
  "Note": "NoteIn the first example the graph is the following:  Initially the chip is located at vertex 1. In the first move Petya moves the chip to vertex 2, after that he moves it to vertex 4 for Vasya. After that he moves to vertex 5. Now it is Vasya's turn and there is no possible move, so Petya wins.In the second example the graph is the following:  Initially the chip is located at vertex 2. The only possible Petya's move is to go to vertex 1. After that he has to go to 3 for Vasya. Now it's Petya's turn but he has no possible move, so Petya loses.In the third example the graph is the following:  Petya can't win, but he can move along the cycle, so the players will draw a tie.",
  "Input Description": "The first line of input contain two integers n and m\u00a0\u2014 the number of vertices and the number of edges in the graph (2\u2009\u2264\u2009n\u2009\u2264\u2009105, 0\u2009\u2264\u2009m\u2009\u2264\u20092\u00b7105).The next n lines contain the information about edges of the graph. i-th line (1\u2009\u2264\u2009i\u2009\u2264\u2009n) contains nonnegative integer ci\u00a0\u2014 number of vertices such that there is an edge from i to these vertices and ci distinct integers ai,\u2009j\u00a0\u2014 indices of these vertices (1\u2009\u2264\u2009ai,\u2009j\u2009\u2264\u2009n, ai,\u2009j\u2009\u2260\u2009i).It is guaranteed that the total sum of ci equals to m.The next line contains index of vertex s\u00a0\u2014 the initial position of the chip (1\u2009\u2264\u2009s\u2009\u2264\u2009n).",
  "Output Description": "If Petya can win print \u00abWin\u00bb in the first line. In the next line print numbers v1,\u2009v2,\u2009...,\u2009vk (1\u2009\u2264\u2009k\u2009\u2264\u2009106)\u00a0\u2014 the sequence of vertices Petya should visit for the winning. Vertex v1 should coincide with s. For i\u2009=\u20091... k\u2009-\u20091 there should be an edge from vi to vi\u2009+\u20091 in the graph. There must be no possible move from vertex vk. The sequence should be such that Petya wins the game.If Petya can't win but can draw a tie, print \u00abDraw\u00bb in the only line. Otherwise print \u00abLose\u00bb.",
  "Time Limit": "2 seconds",
  "Description": "Petya and Vasya arranged a game. The game runs by the following rules. Players have a directed graph consisting of n vertices and m edges. One of the vertices contains a chip. Initially the chip is located at vertex s. Players take turns moving the chip along some edge of the graph. Petya goes first. Player who can't move the chip loses. If the game lasts for 106 turns the draw is announced.Vasya was performing big laboratory work in \"Spelling and parts of speech\" at night before the game, so he fell asleep at the very beginning of the game. Petya decided to take the advantage of this situation and make both Petya's and Vasya's moves.Your task is to help Petya find out if he can win the game or at least draw a tie.",
  "Title": "B. Sleepy Game",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n6\nabacbb\nbabcba\nOutput\nCopy\n4\n6 3 2 3\n\nInput\nCopy\n3\naba\nbba\nOutput\nCopy\n-1\n\n",
  "Note": "",
  "Input Description": "The first line contains an integer n, the length of the strings s and t (1\u2009\u2264\u2009n\u2009\u2264\u20092\u2009000).After that, there are two strings s and t, consisting of n lowercase Latin letters each.",
  "Output Description": "If it is impossible to get string t from string s using no more than 6100 operations \u00abshift\u00bb, print a single number \u2009-\u20091.Otherwise, in the first line output the number of operations k (0\u2009\u2264\u2009k\u2009\u2264\u20096100). In the next line output k numbers xi corresponding to the operations \u00abshift xi\u00bb (0\u2009\u2264\u2009xi\u2009\u2264\u2009n) in the order in which they should be applied.",
  "Time Limit": "2 seconds",
  "Description": "Welcome to another task about breaking the code lock! Explorers Whitfield and Martin came across an unusual safe, inside of which, according to rumors, there are untold riches, among which one can find the solution of the problem of discrete logarithm!Of course, there is a code lock is installed on the safe. The lock has a screen that displays a string of n lowercase Latin letters. Initially, the screen displays string s. Whitfield and Martin found out that the safe will open when string t will be displayed on the screen.The string on the screen can be changed using the operation \u00abshift x\u00bb. In order to apply this operation, explorers choose an integer x from 0 to n inclusive. After that, the current string p\u2009=\u2009\u03b1\u03b2 changes to \u03b2R\u03b1, where the length of \u03b2 is x, and the length of \u03b1 is n\u2009-\u2009x. In other words, the suffix of the length x of string p is reversed and moved to the beginning of the string. For example, after the operation \u00abshift 4\u00bb the string \u00ababcacb\u00bb will be changed with string \u00abbcacab \u00bb, since \u03b1\u2009=\u2009ab, \u03b2\u2009=\u2009cacb, \u03b2R\u2009=\u2009bcac.Explorers are afraid that if they apply too many operations \u00abshift\u00bb, the lock will be locked forever. They ask you to find a way to get the string t on the screen, using no more than 6100 operations.",
  "Title": "C. Lock Puzzle",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n6 2 3 2\n2 6\n3 5 6\nOutput\nCopy\nYes\n2\n0 3 \n2\n2 2\n4 1\n\nInput\nCopy\n1 1 1 1\n1\n1\nOutput\nCopy\nNo\n\nInput\nCopy\n9 5 2 5\n1 2 7 8 9\n4 6\nOutput\nCopy\nYes\n4\n0 3 5 10 \n1\n5 2\n\n",
  "Note": "NotePicture for the first sample test.   ",
  "Input Description": "The first line contains four integers n, m1, m2 and t, the length of the field, the number of obstacles in the first lane, the number of obstacles in the second lane and the number of tank steps before reloading, respectively (1\u2009\u2264\u2009n\u2009\u2264\u2009109; 0\u2009\u2264\u2009m1,\u2009m2\u2009\u2264\u2009n; 0\u2009\u2264\u2009m1\u2009+\u2009m2\u2009\u2264\u2009106; 1\u2009\u2264\u2009t\u2009\u2264\u2009n).The next two lines contain a description of the obstacles. The first of these lines contains m1 numbers xi \u2014 the obstacle coordinates in the first lane (1\u2009\u2264\u2009xi\u2009\u2264\u2009n; xi\u2009<\u2009xi\u2009+\u20091). The y coordinate for all these obstacles will be 1.The second line contains m2 numbers describing the obstacles of the second lane in the same format. The y coordinate of all these obstacles will be 2.",
  "Output Description": "In the first line print \u00abYes\u00bb, if it is possible to pass the level, or \u00abNo\u00bb, otherwise.If it is possible, then in the second line print the number of times the tank moves from one lane to another, and in the next line print the coordinates of the transitions, one number per transition: the coordinate x (0\u2009\u2264\u2009x\u2009\u2264\u2009n\u2009+\u20091). All transition coordinates coordinates must be distinct and should be output in strictly increasing order.The number of transitions should not exceed 2\u00b7106. If the tank can pass the level, then it can do it using no more than 2\u00b7106 transitions.In the fourth line print the number of shots that the tank makes during the movement, in the following lines print two numbers, x and y coordinates of the point (1\u2009\u2264\u2009x\u2009\u2264\u2009n, 1\u2009\u2264\u2009y\u2009\u2264\u20092), from which the tank fired a shot, the number of shots must not exceed m1\u2009+\u2009m2. Shots must be output in the order in which they are fired.If there are several solutions, output any one.",
  "Time Limit": "2 seconds",
  "Description": "Vitya loves programming and problem solving, but sometimes, to distract himself a little, he plays computer games. Once he found a new interesting game about tanks, and he liked it so much that he went through almost all levels in one day. Remained only the last level, which was too tricky. Then Vitya remembered that he is a programmer, and wrote a program that helped him to pass this difficult level. Try do the same.The game is organized as follows. There is a long road, two cells wide and n cells long. Some cells have obstacles. You control a tank that occupies one cell. Initially, the tank is located before the start of the road, in a cell with coordinates (0,\u20091). Your task is to move the tank to the end of the road, to the cell (n\u2009+\u20091,\u20091) or (n\u2009+\u20091,\u20092).  Every second the tank moves one cell to the right: the coordinate x is increased by one. When you press the up or down arrow keys, the tank instantly changes the lane, that is, the y coordinate. When you press the spacebar, the tank shoots, and the nearest obstacle along the lane in which the tank rides is instantly destroyed. In order to load a gun, the tank needs t seconds. Initially, the gun is not loaded, that means, the first shot can be made only after t seconds after the tank starts to move.If at some point the tank is in the same cell with an obstacle not yet destroyed, it burns out. If you press the arrow exactly at the moment when the tank moves forward, the tank will first move forward, and then change the lane, so it will not be possible to move diagonally.Your task is to find out whether it is possible to pass the level, and if possible, to find the order of actions the player need to make.",
  "Title": "D. World of Tank",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n7\n1 2\n1 3\n2 3\n3 1\n3 2\n3 3\n4 2\n5\n2 3 2\n1 4 2\n2 1 2\n1 3 3\n2 2 3\nOutput\nCopy\n-1\n5\n1\n\nInput\nCopy\n6\n1 1\n1 2\n1 3\n2 1\n2 2\n3 1\n4\n1 3 1\n2 1 2\n1 2 2\n2 1 3\nOutput\nCopy\n3\n2\n\n",
  "Note": "",
  "Input Description": "The first line contains one integer n\u00a0\u2014 number of cities in Gridland (1\u2009\u2264\u2009n\u2009\u2264\u2009300\u2009000). The following n lines contain two integers xi and yi\u00a0\u2014 coordinates of cell that contains i-th city (1\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u2009300\u2009000). No two cells coincide. Cells form connected area, complement of this area is also connected.The following line contains single integer q\u00a0\u2014 number of queries (0\u2009\u2264\u2009q\u2009\u2264\u2009300\u2009000). Following q lines contain queries, i-th line consists of three integers ti, xi and yi (ti\u2009\u2208\u2009{1,\u20092}, 1\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u2009300\u2009000). If ti\u2009=\u20091, new Iqea shop has been opened in the city with coordinates (xi,\u2009yi). It's guaranteed that there was no Iqea shop in this city before. If ti\u2009=\u20092, you are to find the distance to the nearest already opened Iqea shop from the city with coordinates (xi,\u2009yi). It's guaranteed that in queries of both types cell (xi,\u2009yi) belongs to Gridland.",
  "Output Description": "For every query of second type output single integer\u00a0\u2014 minimum distance to the nearest Iqea shop. If no Iqea shop has been already opened, output \u2009-\u20091.",
  "Time Limit": "3 seconds",
  "Description": "Gridland is placed on infinite grid and has a shape of figure consisting of cells. Every cell of Gridland is a city. Two cities that are placed in adjacent cells are connected by the road of length 1. It's possible to get from any city to any other city using roads. The distance between two cities is the minimum total road length on path from one city to another. It's possible to get from any cell that doesn't belong to Gridland to any other cell that doesn't belong to Gridland by using only cells which don't belong to Gridland. In other words, Gridland is connected and complement of Gridland is also connected.At the moment no city in Gridland has Iqea famous shop. But Iqea has great plans for building shops in Gridland. For customers' convenience Iqea decided to develop an application. Using this application everyone can learn the distance to the nearest Iqea. You are to develop this application.You are asked to process two types of queries:  new Iqea shop has been opened in the city with coordinates (x,\u2009y);  customer wants to know the distance to the nearest already opened Iqea shop from his city located in a cell with coordinates (x,\u2009y). Pay attention that customer can move only by roads and can never leave Gridland on his way to the shop.",
  "Title": "E. Iqea",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n4\n1 3 3 2\nOutput\nCopy\n3\n\nInput\nCopy\n3\n1 1 1\nOutput\nCopy\n1\n\nInput\nCopy\n4\n42 0 0 42\nOutput\nCopy\n1\n\n",
  "Note": "NoteThere are three ways to choose a subset in sample case one.  Only participants with 3 points will get diplomas.  Participants with 2 or 3 points will get diplomas.  Everyone will get a diploma! The only option in sample case two is to award everyone.Note that in sample case three participants with zero scores cannot get anything.",
  "Input Description": "The first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100)\u00a0\u2014 the number of participants.The next line contains a sequence of n integers a1,\u2009a2,\u2009...,\u2009an (0\u2009\u2264\u2009ai\u2009\u2264\u2009600)\u00a0\u2014 participants' scores.It's guaranteed that at least one participant has non-zero score.",
  "Output Description": "Print a single integer\u00a0\u2014 the desired number of ways.",
  "Time Limit": "1 second",
  "Description": "The recent All-Berland Olympiad in Informatics featured n participants with each scoring a certain amount of points.As the head of the programming committee, you are to determine the set of participants to be awarded with diplomas with respect to the following criteria:   At least one participant should get a diploma.  None of those with score equal to zero should get awarded.  When someone is awarded, all participants with score not less than his score should also be awarded. Determine the number of ways to choose a subset of participants that will receive the diplomas.",
  "Title": "A. Olympiad",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n3 6\nOutput\nCopy\n5\n\nInput\nCopy\n3 4\nOutput\nCopy\n-1\n\n",
  "Note": "NoteIn the first sample case grasshopper from branch 2 reaches branches 2, 4 and 6 while branch 3 is initially settled by another grasshopper. Therefore the answer is 5.It immediately follows that there are no valid branches in second sample case.",
  "Input Description": "The only line contains two integers p and y (2\u2009\u2264\u2009p\u2009\u2264\u2009y\u2009\u2264\u2009109).",
  "Output Description": "Output the number of the highest suitable branch. If there are none, print -1 instead.",
  "Time Limit": "1 second",
  "Description": "The weather is fine today and hence it's high time to climb the nearby pine and enjoy the landscape.The pine's trunk includes several branches, located one above another and numbered from 2 to y. Some of them (more precise, from 2 to p) are occupied by tiny vile grasshoppers which you're at war with. These grasshoppers are known for their awesome jumping skills: the grasshopper at branch x can jump to branches .Keeping this in mind, you wisely decided to choose such a branch that none of the grasshoppers could interrupt you. At the same time you wanna settle as high as possible since the view from up there is simply breathtaking.In other words, your goal is to find the highest branch that cannot be reached by any of the grasshoppers or report that it's impossible.",
  "Title": "B. Vile Grasshoppers",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n5\nweird\nOutput\nCopy\nwerd\n\nInput\nCopy\n4\nword\nOutput\nCopy\nword\n\nInput\nCopy\n5\naaeaa\nOutput\nCopy\na\n\n",
  "Note": "NoteExplanations of the examples:  There is only one replace: weird  werd; No replace needed since there are no two consecutive vowels; aaeaa  aeaa  aaa  aa  a. ",
  "Input Description": "The first line contains one integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100) \u2014 the number of letters in word s before the correction.The second line contains a string s consisting of exactly n lowercase Latin letters \u2014 the word before the correction.",
  "Output Description": "Output the word s after the correction.",
  "Time Limit": "1 second",
  "Description": "Victor tries to write his own text editor, with word correction included. However, the rules of word correction are really strange.Victor thinks that if a word contains two consecutive vowels, then it's kinda weird and it needs to be replaced. So the word corrector works in such a way: as long as there are two consecutive vowels in the word, it deletes the first vowel in a word such that there is another vowel right before it. If there are no two consecutive vowels in the word, it is considered to be correct.You are given a word s. Can you predict what will it become after correction?In this problem letters a, e, i, o, u and y are considered to be vowels.",
  "Title": "A. Word Correction",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n3\n2 3 9\nOutput\nCopy\n8\n\nInput\nCopy\n2\n2 999995\nOutput\nCopy\n5\n\n",
  "Note": "NoteIn the first example you take all the prizes: take the first at 1, the second at 2 and the third at 8.In the second example you take the first prize in 1 second and your friend takes the other in 5 seconds, you do this simultaneously, so the total time is 5.",
  "Input Description": "The first line contains one integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the number of prizes.The second line contains n integers a1, a2, ..., an (2\u2009\u2264\u2009ai\u2009\u2264\u2009106\u2009-\u20091) \u2014 the positions of the prizes. No two prizes are located at the same position. Positions are given in ascending order.",
  "Output Description": "Print one integer \u2014 the minimum number of seconds it will take to collect all prizes.",
  "Time Limit": "1 second",
  "Description": "You and your friend are participating in a TV show \"Run For Your Prize\".At the start of the show n prizes are located on a straight line. i-th prize is located at position ai. Positions of all prizes are distinct. You start at position 1, your friend \u2014 at position 106 (and there is no prize in any of these two positions). You have to work as a team and collect all prizes in minimum possible time, in any order.You know that it takes exactly 1 second to move from position x to position x\u2009+\u20091 or x\u2009-\u20091, both for you and your friend. You also have trained enough to instantly pick up any prize, if its position is equal to your current position (and the same is true for your friend). Carrying prizes does not affect your speed (or your friend's speed) at all.Now you may discuss your strategy with your friend and decide who will pick up each prize. Remember that every prize must be picked up, either by you or by your friend.What is the minimum number of seconds it will take to pick up all the prizes?",
  "Title": "B. Run For Your Prize",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n3\n21\n0\n1\nOutput\nCopy\n5 2\n1 1\n-1\n\n",
  "Note": "",
  "Input Description": "The first line contains one integer t (1\u2009\u2264\u2009t\u2009\u2264\u2009100) \u2014 the number of tests you have to construct.Then t lines follow, i-th line containing one integer xi (0\u2009\u2264\u2009xi\u2009\u2264\u2009109).Note that in hacks you have to set t\u2009=\u20091.",
  "Output Description": "For each test you have to construct, output two positive numbers ni and mi (1\u2009\u2264\u2009mi\u2009\u2264\u2009ni\u2009\u2264\u2009109) such that the maximum number of 1's in a mi-free ni\u2009\u00d7\u2009ni matrix is exactly xi. If there are multiple solutions, you may output any of them; and if this is impossible to construct a test, output a single integer \u2009-\u20091. ",
  "Time Limit": "1 second",
  "Description": "Let's denote a m-free matrix as a binary (that is, consisting of only 1's and 0's) matrix such that every square submatrix of size m\u2009\u00d7\u2009m of this matrix contains at least one zero. Consider the following problem:You are given two integers n and m. You have to construct an m-free square matrix of size n\u2009\u00d7\u2009n such that the number of 1's in this matrix is maximum possible. Print the maximum possible number of 1's in such matrix.You don't have to solve this problem. Instead, you have to construct a few tests for it.You will be given t numbers x1, x2, ..., xt. For every , find two integers ni and mi (ni\u2009\u2265\u2009mi) such that the answer for the aforementioned problem is exactly xi if we set n\u2009=\u2009ni and m\u2009=\u2009mi.",
  "Title": "C. Constructing Tests",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n4 2\n1 2 4\n2 3 7\n6 20 1 25\nOutput\nCopy\n6 14 1 25 \n\nInput\nCopy\n3 3\n1 2 1\n2 3 1\n1 3 1\n30 10 20\nOutput\nCopy\n12 10 12 \n\n",
  "Note": "",
  "Input Description": "The first line contains two integers n and m (2\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7105, 1\u2009\u2264\u2009m\u2009\u2264\u20092\u00b7105).Then m lines follow, i-th contains three integers vi, ui and wi (1\u2009\u2264\u2009vi,\u2009ui\u2009\u2264\u2009n,\u2009vi\u2009\u2260\u2009ui, 1\u2009\u2264\u2009wi\u2009\u2264\u20091012) denoting i-th train route. There are no multiple train routes connecting the same pair of cities, that is, for each (v,\u2009u) neither extra (v,\u2009u) nor (u,\u2009v) present in input.The next line contains n integers a1,\u2009a2,\u2009... ak (1\u2009\u2264\u2009ai\u2009\u2264\u20091012) \u2014 price to attend the concert in i-th city.",
  "Output Description": "Print n integers. i-th of them must be equal to the minimum number of coins a person from city i has to spend to travel to some city j (or possibly stay in city i), attend a concert there, and return to city i (if j\u2009\u2260\u2009i).",
  "Time Limit": "2 seconds",
  "Description": "Musicians of a popular band \"Flayer\" have announced that they are going to \"make their exit\" with a world tour. Of course, they will visit Berland as well.There are n cities in Berland. People can travel between cities using two-directional train routes; there are exactly m routes, i-th route can be used to go from city vi to city ui (and from ui to vi), and it costs wi coins to use this route.Each city will be visited by \"Flayer\", and the cost of the concert ticket in i-th city is ai coins.You have friends in every city of Berland, and they, knowing about your programming skills, asked you to calculate the minimum possible number of coins they have to pay to visit the concert. For every city i you have to compute the minimum number of coins a person from city i has to spend to travel to some city j (or possibly stay in city i), attend a concert there, and return to city i (if j\u2009\u2260\u2009i).Formally, for every  you have to calculate , where d(i,\u2009j) is the minimum number of coins you have to spend to travel from city i to city j. If there is no way to reach city j from city i, then we consider d(i,\u2009j) to be infinitely large.",
  "Title": "D. Buy a Ticket",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n2\n1 3\nOutput\nCopy\n1\n\nInput\nCopy\n3\n1 1 2\nOutput\nCopy\n4\n\n",
  "Note": "NoteFor the second example all the permutations are:  p\u2009=\u2009[1,\u20092,\u20093] : fa is equal to 1;  p\u2009=\u2009[1,\u20093,\u20092] : fa is equal to 1;  p\u2009=\u2009[2,\u20091,\u20093] : fa is equal to 1;  p\u2009=\u2009[2,\u20093,\u20091] : fa is equal to 1;  p\u2009=\u2009[3,\u20091,\u20092] : fa is equal to 0;  p\u2009=\u2009[3,\u20092,\u20091] : fa is equal to 0. Where p is the array of the indices of initial array a. The sum of fa is equal to 4.",
  "Input Description": "The first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009\u20091 000 000) \u2014 the size of array a.Second line contains n integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009\u2009ai\u2009\u2264\u2009\u2009109).",
  "Output Description": "Print the only integer, the sum of fa over all n! permutations of the array a modulo 109\u2009+\u20097.",
  "Time Limit": "3 seconds",
  "Description": "You are given an array a of length n. We define fa the following way:  Initially fa\u2009=\u20090, M\u2009=\u20091;  for every 2\u2009\u2264\u2009i\u2009\u2264\u2009n if aM\u2009<\u2009ai then we set fa\u2009=\u2009fa\u2009+\u2009aM and then set M\u2009=\u2009i. Calculate the sum of fa over all n! permutations of the array a modulo 109\u2009+\u20097.Note: two elements are considered different if their indices differ, so for every array a there are exactly n! permutations.",
  "Title": "E. Max History",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\nadcbca\nOutput\nCopy\naba\n\nInput\nCopy\nabacabadabacaba\nOutput\nCopy\naabacaba\n\n",
  "Note": "NotePossible operations in examples:  adcbca  adcba  aba;  abacabadabacaba  abcabadabacaba  aabadabacaba  aabacaba. ",
  "Input Description": "The only line contains one string s consisting of n lowercase Latin letters (1\u2009\u2264\u2009n\u2009\u2264\u20095000).",
  "Output Description": "Print the lexicographically minimal string you may obtain after performing k operations.",
  "Time Limit": "1 second",
  "Description": "You are given a string s, initially consisting of n lowercase Latin letters. After that, you perform k operations with it, where . During i-th operation you must erase some substring of length exactly 2i\u2009-\u20091 from s.Print the lexicographically minimal string you may obtain after performing k such operations.",
  "Title": "F. Erasing Substrings",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n5 5\n1 2 3\n2 3 4\n3 4 5\n4 5 6\n1 5 1\n5\n3 1 5\n1 1 3 1\n3 1 5\n2 1 5\n3 1 5\nOutput\nCopy\n1\n1\n2\n\n",
  "Note": "",
  "Input Description": "The first line contains two numbers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009200000) \u2014 the number of vertices and the number of edges in the graph, respectively.Then m lines follow denoting the edges of the graph. Each line contains three integers x, y and d (1\u2009\u2264\u2009x\u2009<\u2009y\u2009\u2264\u2009n, 0\u2009\u2264\u2009d\u2009\u2264\u2009230\u2009-\u20091). Each pair (x,\u2009y) is listed at most once. The initial graph is connected.Then one line follows, containing an integer q (1\u2009\u2264\u2009q\u2009\u2264\u2009200000) \u2014 the number of queries you have to process.Then q lines follow, denoting queries in the following form:  1 x y d (1\u2009\u2264\u2009x\u2009<\u2009y\u2009\u2264\u2009n, 0\u2009\u2264\u2009d\u2009\u2264\u2009230\u2009-\u20091) \u2014 add an edge connecting vertex x to vertex y with weight d. It is guaranteed that there is no edge connecting x to y before this query;  2 x y (1\u2009\u2264\u2009x\u2009<\u2009y\u2009\u2264\u2009n) \u2014 remove an edge connecting vertex x to vertex y. It is guaranteed that there was such edge in the graph, and the graph stays connected after this query;  3 x y (1\u2009\u2264\u2009x\u2009<\u2009y\u2009\u2264\u2009n) \u2014 calculate the length of the shortest path (possibly non-simple) from vertex x to vertex y. It is guaranteed that at least one query has type 3.",
  "Output Description": "Print the answers for all queries of type 3 in the order they appear in input.",
  "Time Limit": "3.5 seconds",
  "Description": "You are given an undirected connected graph with weighted edges. The length of some path between two vertices is the bitwise xor of weights of all edges belonging to this path (if some edge is traversed more than once, then it is included in bitwise xor the same number of times). There are three types of queries you have to process:  1 x y d \u2014 add an edge connecting vertex x to vertex y with weight d. It is guaranteed that there is no edge connecting x to y before this query;  2 x y \u2014 remove an edge connecting vertex x to vertex y. It is guaranteed that there was such edge in the graph, and the graph stays connected after this query;  3 x y \u2014 calculate the length of the shortest path (possibly non-simple) from vertex x to vertex y. Print the answers for all queries of type 3.",
  "Title": "G. Shortest Path Queries",
  "Memory Limit": "512 megabytes"
}{
  "Example": "Input\nCopy\n5\n2 4 5 1 3\nOutput\nCopy\nYES\n\nInput\nCopy\n5\n5 5 5 5 1\nOutput\nCopy\nNO\n\n",
  "Note": "NoteIn first example plane 2 likes plane 4, plane 4 likes plane 1, plane 1 likes plane 2 and that is a love triangle.In second example there are no love triangles.",
  "Input Description": "The first line contains a single integer n (2\u2009\u2264\u2009n\u2009\u2264\u20095000)\u00a0\u2014 the number of planes.The second line contains n integers f1,\u2009f2,\u2009...,\u2009fn (1\u2009\u2264\u2009fi\u2009\u2264\u2009n, fi\u2009\u2260\u2009i), meaning that the i-th plane likes the fi-th.",
  "Output Description": "Output \u00abYES\u00bb if there is a love triangle consisting of planes on Earth. Otherwise, output \u00abNO\u00bb.You can output any letter in lower case or in upper case.",
  "Time Limit": "1 second",
  "Description": "As you could know there are no male planes nor female planes. However, each plane on Earth likes some other plane. There are n planes on Earth, numbered from 1 to n, and the plane with number i likes the plane with number fi, where 1\u2009\u2264\u2009fi\u2009\u2264\u2009n and fi\u2009\u2260\u2009i.We call a love triangle a situation in which plane A likes plane B, plane B likes plane C and plane C likes plane A. Find out if there is any love triangle on Earth.",
  "Title": "A. Love Triangle",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n19 3\n5 4 10\nOutput\nCopy\n2 4\n\nInput\nCopy\n28 3\n5 6 30\nOutput\nCopy\n1 5\n\n",
  "Note": "",
  "Input Description": "The first line contains two integers N and K (0\u2009\u2264\u2009N\u2009\u2264\u20091018, 1\u2009\u2264\u2009K\u2009\u2264\u2009105)\u00a0\u2014 the number of hamsters that will grow up on Dima's farm and the number of types of boxes that the factory produces.The second line contains K integers a1, a2, ..., aK (1\u2009\u2264\u2009ai\u2009\u2264\u20091018 for all i)\u00a0\u2014 the capacities of boxes.",
  "Output Description": "Output two integers: the type of boxes that Dima should buy and the number of boxes of that type Dima should buy. Types of boxes are numbered from 1 to K in the order they are given in input.If there are many correct answers, output any of them.",
  "Time Limit": "2 seconds",
  "Description": "Dima has a hamsters farm. Soon N hamsters will grow up on it and Dima will sell them in a city nearby.Hamsters should be transported in boxes. If some box is not completely full, the hamsters in it are bored, that's why each box should be completely full with hamsters.Dima can buy boxes at a factory. The factory produces boxes of K kinds, boxes of the i-th kind can contain in themselves ai hamsters. Dima can buy any amount of boxes, but he should buy boxes of only one kind to get a wholesale discount.Of course, Dima would buy boxes in such a way that each box can be completely filled with hamsters and transported to the city. If there is no place for some hamsters, Dima will leave them on the farm.Find out how many boxes and of which type should Dima buy to transport maximum number of hamsters.",
  "Title": "B. Hamster Farm",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n3\n1 2 3\n1 3\nOutput\nCopy\n3\n\nInput\nCopy\n5\n1 2 3 4 1\n1 3\nOutput\nCopy\n4\n\n",
  "Note": "NoteIn the first example, it's optimal to start competition at 3 hours (in first timezone). In this case, it will be 1 hour in the second timezone and 2 hours in the third timezone. Only one person from the first timezone won't participate.In second example only people from the third and the fourth timezones will participate.",
  "Input Description": "The first line contains a single integer n (2\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000)\u00a0\u2014 the number of hours in day.The second line contains n space-separated integers a1, a2, ..., an (1\u2009\u2264\u2009ai\u2009\u2264\u200910\u2009000), where ai is the number of people in the i-th timezone who want to participate in the contest.The third line contains two space-separated integers s and f (1\u2009\u2264\u2009s\u2009<\u2009f\u2009\u2264\u2009n).",
  "Output Description": "Output a single integer\u00a0\u2014 the time of the beginning of the contest (in the first timezone local time), such that the number of participants will be maximum possible. If there are many answers, output the smallest among them.",
  "Time Limit": "2 seconds",
  "Description": "In distant future on Earth day lasts for n hours and that's why there are n timezones. Local times in adjacent timezones differ by one hour. For describing local time, hours numbers from 1 to n are used, i.e. there is no time \"0 hours\", instead of it \"n hours\" is used. When local time in the 1-st timezone is 1 hour, local time in the i-th timezone is i hours.Some online programming contests platform wants to conduct a contest that lasts for an hour in such a way that its beginning coincides with beginning of some hour (in all time zones). The platform knows, that there are ai people from i-th timezone who want to participate in the contest. Each person will participate if and only if the contest starts no earlier than s hours 00 minutes local time and ends not later than f hours 00 minutes local time. Values s and f are equal for all time zones. If the contest starts at f hours 00 minutes local time, the person won't participate in it.Help platform select such an hour, that the number of people who will participate in the contest is maximum. ",
  "Title": "C. Convenient For Everybody",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n3\nabb\ndad\nOutput\nCopy\n2\na d\nb a\n\nInput\nCopy\n8\ndrpepper\ncocacola\nOutput\nCopy\n7\nl e\ne d\nd c\nc p\np o\no r\nr a\n\n",
  "Note": "NoteIn first example it's enough to buy two spells: ('a','d') and ('b','a'). Then first letters will coincide when we will replace letter 'a' with 'd'. Second letters will coincide when we will replace 'b' with 'a'. Third letters will coincide when we will at first replace 'b' with 'a' and then 'a' with 'd'.",
  "Input Description": "The first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the length of the letterings.The second line contains a string with length n, consisting of lowercase English letters\u00a0\u2014 the lettering on Valya's pullover.The third line contains the lettering on Tolya's t-shirt in the same format.",
  "Output Description": "In the first line output a single integer\u00a0\u2014 the minimum amount of mana t required for rescuing love of Valya and Tolya.In the next t lines output pairs of space-separated lowercase English letters\u00a0\u2014 spells that Tolya's grandmother should buy. Spells and letters in spells can be printed in any order.If there are many optimal answers, output any.",
  "Time Limit": "2 seconds",
  "Description": "Valya and Tolya are an ideal pair, but they quarrel sometimes. Recently, Valya took offense at her boyfriend because he came to her in t-shirt with lettering that differs from lettering on her pullover. Now she doesn't want to see him and Tolya is seating at his room and crying at her photos all day long.This story could be very sad but fairy godmother (Tolya's grandmother) decided to help them and restore their relationship. She secretly took Tolya's t-shirt and Valya's pullover and wants to make the letterings on them same. In order to do this, for one unit of mana she can buy a spell that can change some letters on the clothes. Your task is calculate the minimum amount of mana that Tolya's grandmother should spend to rescue love of Tolya and Valya.More formally, letterings on Tolya's t-shirt and Valya's pullover are two strings with same length n consisting only of lowercase English letters. Using one unit of mana, grandmother can buy a spell of form (c1,\u2009c2) (where c1 and c2 are some lowercase English letters), which can arbitrary number of times transform a single letter c1 to c2 and vise-versa on both Tolya's t-shirt and Valya's pullover. You should find the minimum amount of mana that grandmother should spend to buy a set of spells that can make the letterings equal. In addition you should output the required set of spells. ",
  "Title": "D. Love Rescue",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n6\n1 3\n2\n1 4\n2\n1 8\n2\nOutput\nCopy\n0.0000000000\n0.5000000000\n3.0000000000\n\nInput\nCopy\n4\n1 1\n1 4\n1 5\n2\nOutput\nCopy\n2.0000000000\n\n",
  "Note": "",
  "Input Description": "The first line contains a single integer Q (1\u2009\u2264\u2009Q\u2009\u2264\u20095\u00b7105)\u00a0\u2014 the number of queries.Each of the next Q lines contains a description of query. For queries of type 1 two integers 1 and x are given, where x (1\u2009\u2264\u2009x\u2009\u2264\u2009109) is a number that you should add to S. It's guaranteed that x is not less than any number in S. For queries of type 2, a single integer 2 is given.It's guaranteed that the first query has type 1, i.\u00a0e. S is not empty when a query of type 2 comes.",
  "Output Description": "Output the answer for each query of the second type in the order these queries are given in input. Each number should be printed in separate line.Your answer is considered correct, if each of your answers has absolute or relative error not greater than 10\u2009-\u20096.Formally, let your answer be a, and the jury's answer be b. Your answer is considered correct if .",
  "Time Limit": "3 seconds",
  "Description": "You are given a multiset S consisting of positive integers (initially empty). There are two kind of queries:   Add a positive integer to S, the newly added integer is not less than any number in it.  Find a subset s of the set S such that the value  is maximum possible. Here max(s) means maximum value of elements in s, \u00a0\u2014 the average value of numbers in s. Output this maximum possible value of . ",
  "Title": "E. Maximize!",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n10 2\n3 5\n11 13\nOutput\nCopy\nFull\n2\n\nInput\nCopy\n10 3\n3 5\n9 10\n11 13\nOutput\nCopy\nFull\n1\n\nInput\nCopy\n20 1\n3 19\nOutput\nCopy\nHungry\n\n",
  "Note": "NoteIn the first example Arkady should flip the cutlet in time moment 3 seconds after he starts cooking and in time moment 13 seconds after he starts cooking.In the second example, Arkady can flip the cutlet at 10 seconds after he starts cooking.",
  "Input Description": "The first line contains two integers n and k (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000, 1\u2009\u2264\u2009k\u2009\u2264\u2009100)\u00a0\u2014 the number of seconds the cutlet should be cooked on each side and number of periods of time in which Arkady can flip it.The next k lines contain descriptions of these intervals. Each line contains two integers li and ri (0\u2009\u2264\u2009li\u2009\u2264\u2009ri\u2009\u2264\u20092\u00b7n), meaning that Arkady can flip the cutlet in any moment starting from li seconds after the beginning of cooking and finishing at ri seconds after beginning of cooking. In particular, if li\u2009=\u2009ri then Arkady can flip the cutlet only in the moment li\u2009=\u2009ri. It's guaranteed that li\u2009>\u2009ri\u2009-\u20091 for all 2\u2009\u2264\u2009i\u2009\u2264\u2009k.",
  "Output Description": "Output \"Hungry\" if Arkady won't be able to fry the cutlet for exactly n seconds on one side and exactly n seconds on the other side.Otherwise, output \"Full\" in the first line, and the minimum number of times he should flip the cutlet in the second line.",
  "Time Limit": "4 seconds",
  "Description": "Arkady wants to have a dinner. He has just returned from a shop where he has bought a semifinished cutlet. He only needs to fry it. The cutlet should be fried for 2n seconds, in particular, it should be fried for n seconds on one side and n seconds on the other side. Arkady has already got a frying pan and turn on fire, but understood that maybe he won't be able to flip the cutlet exactly after n seconds after the beginning of cooking.Arkady is too busy with sorting sticker packs in his favorite messenger and can flip the cutlet only in some periods of time. Namely, there are k periods of time in which he can do it, the i-th of them is an interval of time from li seconds after he starts cooking till ri seconds, inclusive. Arkady decided that it's not required to flip the cutlet exactly in the middle of cooking, instead, he will flip it several times in such a way that the cutlet will be fried exactly n seconds on one side and n seconds on the other side in total.Help Arkady and find out if it's possible for him to cook the cutlet, if he is able to flip the cutlet only in given periods of time; and if yes, find the minimum number of flips he needs to cook the cutlet.",
  "Title": "F. Cutlet",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n3 1\n2 1 4\nOutput\nCopy\n1\n\nInput\nCopy\n3 0\n7 7 7\nOutput\nCopy\n0\n\nInput\nCopy\n6 3\n1 3 4 6 9 10\nOutput\nCopy\n3\n\n",
  "Note": "NoteIn the first test case the optimal strategy is to remove the point with coordinate 4. The remaining points will have coordinates 1 and 2, so the diameter will be equal to 2\u2009-\u20091\u2009=\u20091.In the second test case the diameter is equal to 0, so its is unnecessary to remove any points. In the third test case the optimal strategy is to remove points with coordinates 1, 9 and 10. The remaining points will have coordinates 3, 4 and 6, so the diameter will be equal to 6\u2009-\u20093\u2009=\u20093.",
  "Input Description": "The first line contains two integers n and d (1\u2009\u2264\u2009n\u2009\u2264\u2009100,\u20090\u2009\u2264\u2009d\u2009\u2264\u2009100)\u00a0\u2014 the amount of points and the maximum allowed diameter respectively.The second line contains n space separated integers (1\u2009\u2264\u2009xi\u2009\u2264\u2009100)\u00a0\u2014 the coordinates of the points.",
  "Output Description": "Output a single integer\u00a0\u2014 the minimum number of points you have to remove.",
  "Time Limit": "1 second",
  "Description": "We've got no test cases. A big olympiad is coming up. But the problemsetters' number one priority should be adding another problem to the round. The diameter of a multiset of points on the line is the largest distance between two points from this set. For example, the diameter of the multiset {1,\u20093,\u20092,\u20091} is 2.Diameter of multiset consisting of one point is 0.You are given n points on the line. What is the minimum number of points you have to remove, so that the diameter of the multiset of the remaining points will not exceed d?",
  "Title": "A. Points on the line",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n9\n2\n3\n1\nOutput\nCopy\n6\n\nInput\nCopy\n5\n5\n2\n20\nOutput\nCopy\n8\n\nInput\nCopy\n19\n3\n4\n2\nOutput\nCopy\n12\n\n",
  "Note": "NoteIn the first testcase, the optimal strategy is as follows:   Subtract 1 from x (9\u2009\u2192\u20098) paying 3 coins.  Divide x by 2 (8\u2009\u2192\u20094) paying 1 coin.  Divide x by 2 (4\u2009\u2192\u20092) paying 1 coin.  Divide x by 2 (2\u2009\u2192\u20091) paying 1 coin. The total cost is 6 coins.In the second test case the optimal strategy is to subtract 1 from x 4 times paying 8 coins in total.",
  "Input Description": "The first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7109).The second line contains a single integer k (1\u2009\u2264\u2009k\u2009\u2264\u20092\u00b7109).The third line contains a single integer A (1\u2009\u2264\u2009A\u2009\u2264\u20092\u00b7109).The fourth line contains a single integer B (1\u2009\u2264\u2009B\u2009\u2264\u20092\u00b7109).",
  "Output Description": "Output a single integer\u00a0\u2014 the minimum amount of coins you have to pay to make x equal to 1.",
  "Time Limit": "1 second",
  "Description": "Right now she actually isn't. But she will be, if you don't solve this problem.You are given integers n, k, A and B. There is a number x, which is initially equal to n. You are allowed to perform two types of operations:   Subtract 1 from x. This operation costs you A coins.  Divide x by k. Can be performed only if x is divisible by k. This operation costs you B coins.  What is the minimum amount of coins you have to pay to make x equal to 1?",
  "Title": "B. Our Tanya is Crying Out Loud",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n3 3\nabc\nOutput\nCopy\naca\n\nInput\nCopy\n3 2\nabc\nOutput\nCopy\nac\n\nInput\nCopy\n3 3\nayy\nOutput\nCopy\nyaa\n\nInput\nCopy\n2 3\nba\nOutput\nCopy\nbaa\n\n",
  "Note": "NoteIn the first example the list of strings t of length 3, such that the set of letters of t is a subset of letters of s is as follows: aaa, aab, aac, aba, abb, abc, aca, acb, .... Among them, those are lexicographically greater than abc: aca, acb, .... Out of those the lexicographically smallest is aca.",
  "Input Description": "The first line of input contains two space separated integers n and k (1\u2009\u2264\u2009n,\u2009k\u2009\u2264\u2009100\u2009000)\u00a0\u2014 the length of s and the required length of t.The second line of input contains the string s consisting of n lowercase English letters.",
  "Output Description": "Output the string t conforming to the requirements above.It's guaranteed that the answer exists.",
  "Time Limit": "2 seconds",
  "Description": "And where the are the phone numbers?You are given a string s consisting of lowercase English letters and an integer k. Find the lexicographically smallest string t of length k, such that its set of letters is a subset of the set of letters of s and s is lexicographically smaller than t.It's guaranteed that the answer exists.Note that the set of letters is a set, not a multiset. For example, the set of letters of abadaba is {a,\u2009b,\u2009d}.String p is lexicographically smaller than string q, if p is a prefix of q, is not equal to q or there exists i, such that pi\u2009<\u2009qi and for all j\u2009<\u2009i it is satisfied that pj\u2009=\u2009qj. For example, abc is lexicographically smaller than abcd , abd is lexicographically smaller than abec, afa is not lexicographically smaller than ab and a is not lexicographically smaller than a.",
  "Title": "C. Phone Numbers",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n5\n1 2 3 4 5\n00001\nOutput\nCopy\n6 15\n\nInput\nCopy\n10\n-10 -9 -8 -7 -6 6 7 8 9 10\n0000111110\nOutput\nCopy\n-5 5\n\n",
  "Note": "NoteIn the first test case any pair of l and r pair is valid, if 6\u2009\u2264\u2009l\u2009\u2264\u2009r\u2009\u2264\u2009109, in that case b5\u2009=\u20091, because a1,\u2009...,\u2009a5\u2009<\u2009l.",
  "Input Description": "The first line of input contains a single integer n (5\u2009\u2264\u2009n\u2009\u2264\u2009105)\u00a0\u2014 the length of a and b'.The second line of input contains n space separated integers a1,\u2009...,\u2009an (\u2009-\u2009109\u2009\u2264\u2009ai\u2009\u2264\u2009109)\u00a0\u2014 the elements of a.The third line of input contains a string of n characters, consisting of 0 and 1\u00a0\u2014 the elements of b'. Note that they are not separated by spaces.",
  "Output Description": "Output two integers l and r\u00a0(\u2009-\u2009109\u2009\u2264\u2009l\u2009\u2264\u2009r\u2009\u2264\u2009109), conforming to the requirements described above.If there are multiple solutions, output any of them.It's guaranteed that the answer exists.",
  "Time Limit": "2 seconds",
  "Description": "\"We've tried solitary confinement, waterboarding and listening to Just In Beaver, to no avail. We need something extreme.\"\"Little Alena got an array as a birthday present...\"The array b of length n is obtained from the array a of length n and two integers l and r\u00a0(l\u2009\u2264\u2009r) using the following procedure:b1\u2009=\u2009b2\u2009=\u2009b3\u2009=\u2009b4\u2009=\u20090.For all 5\u2009\u2264\u2009i\u2009\u2264\u2009n:   bi\u2009=\u20090 if ai,\u2009ai\u2009-\u20091,\u2009ai\u2009-\u20092,\u2009ai\u2009-\u20093,\u2009ai\u2009-\u20094\u2009>\u2009r and bi\u2009-\u20091\u2009=\u2009bi\u2009-\u20092\u2009=\u2009bi\u2009-\u20093\u2009=\u2009bi\u2009-\u20094\u2009=\u20091  bi\u2009=\u20091 if ai,\u2009ai\u2009-\u20091,\u2009ai\u2009-\u20092,\u2009ai\u2009-\u20093,\u2009ai\u2009-\u20094\u2009<\u2009l and bi\u2009-\u20091\u2009=\u2009bi\u2009-\u20092\u2009=\u2009bi\u2009-\u20093\u2009=\u2009bi\u2009-\u20094\u2009=\u20090  bi\u2009=\u2009bi\u2009-\u20091 otherwise You are given arrays a and b' of the same length. Find two integers l and r\u00a0(l\u2009\u2264\u2009r), such that applying the algorithm described above will yield an array b equal to b'.It's guaranteed that the answer exists.",
  "Title": "D. Alena And The Heater",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n3 5\n1 2 3\nOutput\nCopy\n6\n\nInput\nCopy\n12 10\n1 1 10 10 10 10 10 10 9 10 10 10\nOutput\nCopy\n92\n\nInput\nCopy\n7 2\n2 3 6 4 5 7 1\nOutput\nCopy\n17\n\nInput\nCopy\n8 4\n1 3 4 5 5 3 4 1\nOutput\nCopy\n23\n\n",
  "Note": "NoteIn the first example any partition yields 6 as the sum.In the second example one of the optimal partitions is [1,\u20091],\u2009[10,\u200910,\u200910,\u200910,\u200910,\u200910,\u20099,\u200910,\u200910,\u200910] with the values 2 and 90 respectively.In the third example one of the optimal partitions is [2,\u20093],\u2009[6,\u20094,\u20095,\u20097],\u2009[1] with the values 3, 13 and 1 respectively.In the fourth example one of the optimal partitions is [1],\u2009[3,\u20094,\u20095,\u20095,\u20093,\u20094],\u2009[1] with the values 1, 21 and 1 respectively.",
  "Input Description": "The first line contains integers n and c (1\u2009\u2264\u2009n,\u2009c\u2009\u2264\u2009100\u2009000).The second line contains n integers ai (1\u2009\u2264\u2009ai\u2009\u2264\u2009109)\u00a0\u2014 elements of a.",
  "Output Description": "Output a single integer \u00a0\u2014 the smallest possible sum of values of these subarrays of some partition of a.",
  "Time Limit": "2 seconds",
  "Description": "Since you are the best Wraith King, Nizhniy Magazin \u00abMir\u00bb at the centre of Vinnytsia is offering you a discount.You are given an array a of length n and an integer c. The value of some array b of length k is the sum of its elements except for the  smallest. For example, the value of the array [3,\u20091,\u20096,\u20095,\u20092] with c\u2009=\u20092 is 3\u2009+\u20096\u2009+\u20095\u2009=\u200914.Among all possible partitions of a into contiguous subarrays output the smallest possible sum of the values of these subarrays.",
  "Title": "E. Cashback",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n10 4\n1 2 3 1 1 2 2 2 9 9\n1 1 1\n1 2 8\n2 7 1\n1 2 8\nOutput\nCopy\n2\n3\n2\n\n",
  "Note": "NoteThe subarray of the first query consists of the single element\u00a0\u2014 1. The subarray of the second query consists of four 2s, one 3 and two 1s.The subarray of the fourth query consists of three 1s, three 2s and one 3.",
  "Input Description": "The first line of input contains two integers n and q (1\u2009\u2264\u2009n,\u2009q\u2009\u2264\u2009100\u2009000)\u00a0\u2014 the length of the array and the number of queries respectively.The second line of input contains n integers\u00a0\u2014 a1, a2, ..., an (1\u2009\u2264\u2009ai\u2009\u2264\u2009109).Each of the next q lines describes a single query.The first type of query is described by three integers ti\u2009=\u20091, li, ri, where 1\u2009\u2264\u2009li\u2009\u2264\u2009ri\u2009\u2264\u2009n\u00a0\u2014 the bounds of the subarray.The second type of query is described by three integers ti\u2009=\u20092, pi, xi, where 1\u2009\u2264\u2009pi\u2009\u2264\u2009n is the index of the element, which must be changed and 1\u2009\u2264\u2009xi\u2009\u2264\u2009109 is the new value.",
  "Output Description": "For each query of the first type output a single integer \u00a0\u2014 the Mex of {c0,\u2009c1,\u2009...,\u2009c109}.",
  "Time Limit": "4 seconds",
  "Description": "You come home and fell some unpleasant smell. Where is it coming from?You are given an array a. You have to answer the following queries:   You are given two integers l and r. Let ci be the number of occurrences of i in al:\u2009r, where al:\u2009r is the subarray of a from l-th element to r-th inclusive. Find the Mex of {c0,\u2009c1,\u2009...,\u2009c109}  You are given two integers p to x. Change ap to x. The Mex of a multiset of numbers is the smallest non-negative integer not in the set.Note that in this problem all elements of a are positive, which means that c0 = 0 and 0 is never the answer for the query of the second type.",
  "Title": "F. Machine Learning",
  "Memory Limit": "512 megabytes"
}{
  "Example": "Input\nCopy\n3\n1 -2 0\nOutput\nCopy\n3\n\nInput\nCopy\n6\n16 23 16 15 42 8\nOutput\nCopy\n120\n\n",
  "Note": "NoteIn the first example we may choose b\u2009=\u2009{1,\u20090}, c\u2009=\u2009{\u2009-\u20092}. Then B\u2009=\u20091, C\u2009=\u2009\u2009-\u20092, B\u2009-\u2009C\u2009=\u20093.In the second example we choose b\u2009=\u2009{16,\u200923,\u200916,\u200915,\u200942,\u20098}, c\u2009=\u2009{} (an empty sequence). Then B\u2009=\u2009120, C\u2009=\u20090, B\u2009-\u2009C\u2009=\u2009120.",
  "Input Description": "The first line contains one integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100) \u2014 the number of elements in a.The second line contains n integers a1, a2, ..., an (\u2009-\u2009100\u2009\u2264\u2009ai\u2009\u2264\u2009100) \u2014 the elements of sequence a.",
  "Output Description": "Print the maximum possible value of B\u2009-\u2009C, where B is the sum of elements of sequence b, and C is the sum of elements of sequence c.",
  "Time Limit": "1 second",
  "Description": "You are given a sequence a consisting of n integers. You may partition this sequence into two sequences b and c in such a way that every element belongs exactly to one of these sequences. Let B be the sum of elements belonging to b, and C be the sum of elements belonging to c (if some of these sequences is empty, then its sum is 0). What is the maximum possible value of B\u2009-\u2009C?",
  "Title": "A. Partition",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n12 5\nOutput\nCopy\n0 1\n\nInput\nCopy\n31 12\nOutput\nCopy\n7 12\n\n",
  "Note": "NoteExplanations to the samples: a\u2009=\u200912, b\u2009=\u20095  a\u2009=\u20092, b\u2009=\u20095  a\u2009=\u20092, b\u2009=\u20091  a\u2009=\u20090, b\u2009=\u20091; a\u2009=\u200931, b\u2009=\u200912  a\u2009=\u20097, b\u2009=\u200912.",
  "Input Description": "The only line of the input contains two integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u20091018). n is the initial value of variable a, and m is the initial value of variable b.",
  "Output Description": "Print two integers \u2014 the values of a and b after the end of the process.",
  "Time Limit": "1 second",
  "Description": "You have two variables a and b. Consider the following sequence of actions performed with these variables: If a\u2009=\u20090 or b\u2009=\u20090, end the process. Otherwise, go to step 2; If a\u2009\u2265\u20092\u00b7b, then set the value of a to a\u2009-\u20092\u00b7b, and repeat step 1. Otherwise, go to step 3; If b\u2009\u2265\u20092\u00b7a, then set the value of b to b\u2009-\u20092\u00b7a, and repeat step 1. Otherwise, end the process.Initially the values of a and b are positive integers, and so the process will be finite.You have to determine the values of a and b after the process ends.",
  "Title": "B. Weird Subtraction Process",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\naacceeggiikkmmooqqssuuwwyy\nOutput\nCopy\nabcdefghijklmnopqrstuvwxyz\n\nInput\nCopy\nthereisnoanswer\nOutput\nCopy\n-1\n\n",
  "Note": "",
  "Input Description": "The only one line of the input consisting of the string s consisting of |s| (1\u2009\u2264\u2009|s|\u2009\u2264\u2009105) small english letters.",
  "Output Description": "If you can get a string that can be obtained from the given string and will contain english alphabet as a subsequence, print it. Otherwise print \u00ab-1\u00bb (without quotes).",
  "Time Limit": "1 second",
  "Description": "You are given a string s consisting of |s| small english letters.In one move you can replace any character of this string to the next character in alphabetical order (a will be replaced with b, s will be replaced with t, etc.). You cannot replace letter z with any other letter.Your target is to make some number of moves (not necessary minimal) to get string abcdefghijklmnopqrstuvwxyz (english alphabet) as a subsequence. Subsequence of the string is the string that is obtained by deleting characters at some positions. You need to print the string that will be obtained from the given string and will be contain english alphabet as a subsequence or say that it is impossible.",
  "Title": "C. String Transformation",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n2 5 1\n01001\n10110\nOutput\nCopy\n5\n\nInput\nCopy\n2 5 0\n01001\n10110\nOutput\nCopy\n8\n\n",
  "Note": "NoteIn the first example Ivan can skip any of two lessons during the first day, so he spends 1 hour during the first day and 4 hours during the second day.In the second example Ivan can't skip any lessons, so he spends 4 hours every day.",
  "Input Description": "The first line contains three integers n, m and k (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009500, 0\u2009\u2264\u2009k\u2009\u2264\u2009500) \u2014 the number of days in the Berland week, the number of working hours during each day, and the number of lessons Ivan can skip, respectively.Then n lines follow, i-th line containing a binary string of m characters. If j-th character in i-th line is 1, then Ivan has a lesson on i-th day during j-th hour (if it is 0, there is no such lesson).",
  "Output Description": "Print the minimum number of hours Ivan has to spend in the university during the week if he skips not more than k lessons.",
  "Time Limit": "2 seconds",
  "Description": "Ivan is a student at Berland State University (BSU). There are n days in Berland week, and each of these days Ivan might have some classes at the university.There are m working hours during each Berland day, and each lesson at the university lasts exactly one hour. If at some day Ivan's first lesson is during i-th hour, and last lesson is during j-th hour, then he spends j\u2009-\u2009i\u2009+\u20091 hours in the university during this day. If there are no lessons during some day, then Ivan stays at home and therefore spends 0 hours in the university.Ivan doesn't like to spend a lot of time in the university, so he has decided to skip some lessons. He cannot skip more than k lessons during the week. After deciding which lessons he should skip and which he should attend, every day Ivan will enter the university right before the start of the first lesson he does not skip, and leave it after the end of the last lesson he decides to attend. If Ivan skips all lessons during some day, he doesn't go to the university that day at all.Given n, m, k and Ivan's timetable, can you determine the minimum number of hours he has to spend in the university during one week, if he cannot skip more than k lessons?",
  "Title": "D. Timetable",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n4\n89\n88\n1000\n28923845\nOutput\nCopy\n88\n77\n99\n28923839\n\n",
  "Note": "",
  "Input Description": "The first line contains one integer t (1\u2009\u2264\u2009t\u2009\u2264\u2009105) \u2014 the number of testcases you have to solve.Then t lines follow, each representing one testcase and containing one string which is the decimal representation of number s. It is guaranteed that this string has even length, contains no leading zeroes, and there exists at least one beautiful number less than s.The sum of lengths of s over all testcases doesn't exceed 2\u00b7105.",
  "Output Description": "For each testcase print one line containing the largest beautiful number which is less than s (it is guaranteed that the answer exists).",
  "Time Limit": "1 second",
  "Description": "Yes, that's another problem with definition of \"beautiful\" numbers.Let's call a positive integer x beautiful if its decimal representation without leading zeroes contains even number of digits, and there exists a permutation of this representation which is palindromic. For example, 4242 is a beautiful number, since it contains 4 digits, and there exists a palindromic permutation 2442.Given a positive integer s, find the largest beautiful number which is less than s.",
  "Title": "E. Largest Beautiful Number",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n2 4\n11\nOutput\nCopy\n14\n\nInput\nCopy\n10 100\n1010101010\nOutput\nCopy\n553403224\n\n",
  "Note": "",
  "Input Description": "The first line contains two integers n and x (1\u2009\u2264\u2009n\u2009\u2264\u2009100, 0\u2009\u2264\u2009x\u2009\u2264\u2009100) \u2014 the length of s and the index of a Fibonacci string you are interested in, respectively.The second line contains s \u2014 a string consisting of n characters. Each of these characters is either 0 or 1.",
  "Output Description": "Print the only integer \u2014 the sum of costs of all subsequences of the string F(x), taken modulo 109\u2009+\u20097. ",
  "Time Limit": "3.5 seconds",
  "Description": "You are given a binary string s (each character of this string is either 0 or 1).Let's denote the cost of string t as the number of occurences of s in t. For example, if s is 11 and t is 111011, then the cost of t is 3.Let's also denote the Fibonacci strings sequence as follows: F(0) is 0; F(1) is 1; F(i)\u2009=\u2009F(i\u2009-\u20091)\u2009+\u2009F(i\u2009-\u20092) if i\u2009>\u20091, where \u2009+\u2009 means the concatenation of two strings.Your task is to calculate the sum of costs of all subsequences of the string F(x). Since answer may be large, calculate it modulo 109\u2009+\u20097.",
  "Title": "F. Fibonacci String Subsequences",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n5\n5 4 3 2 1\nOutput\nCopy\n3\n\nInput\nCopy\n5\n1 2 8 9 5\nOutput\nCopy\n0\n\n",
  "Note": "",
  "Input Description": "The first line contains one integer n (2\u2009\u2264\u2009n\u2009\u2264\u2009200000) \u2014 the number of elements in a.The second line contains n integers a1, a2, ..., an (1\u2009\u2264\u2009ai\u2009\u2264\u2009109) \u2014 the array a.",
  "Output Description": "Print the minimum number of replaces you have to perform so that a is almost increasing.",
  "Time Limit": "3 seconds",
  "Description": "We call an array almost increasing if we can erase not more than one element from it so that the array becomes strictly increasing (that is, every element is striclty greater than every element before it).You are given an array a consisting of n elements. You are allowed to replace any element with any integer number (and you may do so any number of times you need). What is the minimum number of replacements you have to perform in order to make the array almost increasing?",
  "Title": "G. Almost Increasing Array",
  "Memory Limit": "512 megabytes"
}{
  "Example": "Input\nCopy\n6 6\n..S...\n..S.W.\n.S....\n..W...\n...W..\n......\nOutput\nCopy\nYes\n..SD..\n..SDW.\n.SD...\n.DW...\nDD.W..\n......\n\nInput\nCopy\n1 2\nSW\nOutput\nCopy\nNo\n\nInput\nCopy\n5 5\n.S...\n...S.\nS....\n...S.\n.S...\nOutput\nCopy\nYes\n.S...\n...S.\nS.D..\n...S.\n.S...\n\n",
  "Note": "NoteIn the first example, we can split the pasture into two halves, one containing wolves and one containing sheep. Note that the sheep at (2,1) is safe, as wolves cannot move diagonally.In the second example, there are no empty spots to put dogs that would guard the lone sheep.In the third example, there are no wolves, so the task is very easy. We put a dog in the center to observe the peacefulness of the meadow, but the solution would be correct even without him.",
  "Input Description": "First line contains two integers R (1\u2009\u2264\u2009R\u2009\u2264\u2009500) and C (1\u2009\u2264\u2009C\u2009\u2264\u2009500), denoting the number of rows and the numbers of columns respectively.Each of the following R lines is a string consisting of exactly C characters, representing one row of the pasture. Here, 'S' means a sheep, 'W' a wolf and '.' an empty cell.",
  "Output Description": "If it is impossible to protect all sheep, output a single line with the word \"No\".Otherwise, output a line with the word \"Yes\". Then print R lines, representing the pasture after placing dogs. Again, 'S' means a sheep, 'W' a wolf, 'D' is a dog and '.' an empty space. You are not allowed to move, remove or add a sheep or a wolf.If there are multiple solutions, you may print any of them. You don't have to minimize the number of dogs.",
  "Time Limit": "1 second",
  "Description": "Bob is a farmer. He has a large pasture with many sheep. Recently, he has lost some of them due to wolf attacks. He thus decided to place some shepherd dogs in such a way that all his sheep are protected.The pasture is a rectangle consisting of R\u2009\u00d7\u2009C cells. Each cell is either empty, contains a sheep, a wolf or a dog. Sheep and dogs always stay in place, but wolves can roam freely around the pasture, by repeatedly moving to the left, right, up or down to a neighboring cell. When a wolf enters a cell with a sheep, it consumes it. However, no wolf can enter a cell with a dog.Initially there are no dogs. Place dogs onto the pasture in such a way that no wolf can reach any sheep, or determine that it is impossible. Note that since you have many dogs, you do not need to minimize their number. ",
  "Title": "A. Protect Sheep",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n0010100\nOutput\nCopy\n3\n3 1 3 4\n3 2 5 6\n1 7\n\nInput\nCopy\n111\nOutput\nCopy\n-1\n\n",
  "Note": "",
  "Input Description": "In the only line of input data there is a non-empty string s consisting of characters 0 and 1, which describes the history of Oleg's life. Its length (denoted as |s|) does not exceed 200\u2009000 characters.",
  "Output Description": "If there is a way to divide history into zebra subsequences, in the first line of output you should print an integer k (1\u2009\u2264\u2009k\u2009\u2264\u2009|s|), the resulting number of subsequences. In the i-th of following k lines first print the integer li (1\u2009\u2264\u2009li\u2009\u2264\u2009|s|), which is the length of the i-th subsequence, and then li indices of days forming the subsequence. Indices must follow in ascending order. Days are numbered starting from 1. Each index from 1 to n must belong to exactly one subsequence. If there is no way to divide day history into zebra subsequences, print -1.Subsequences may be printed in any order. If there are several solutions, you may print any of them. You do not have to minimize nor maximize the value of k.",
  "Time Limit": "1 second",
  "Description": "Oleg writes down the history of the days he lived. For each day he decides if it was good or bad. Oleg calls a non-empty sequence of days a zebra, if it starts with a bad day, ends with a bad day, and good and bad days are alternating in it. Let us denote bad days as 0 and good days as 1. Then, for example, sequences of days 0, 010, 01010 are zebras, while sequences 1, 0110, 0101 are not.Oleg tells you the story of days he lived in chronological order in form of string consisting of 0 and 1. Now you are interested if it is possible to divide Oleg's life history into several subsequences, each of which is a zebra, and the way it can be done. Each day must belong to exactly one of the subsequences. For each of the subsequences, days forming it must be ordered chronologically. Note that subsequence does not have to be a group of consecutive days. ",
  "Title": "A. Zebras",
  "Memory Limit": "512 megabytes"
}{
  "Example": "Input\nCopy\n4 3\n2\n3\n4\nOutput\nCopy\n3\n2\n4\n\nInput\nCopy\n13 4\n10\n5\n4\n8\nOutput\nCopy\n13\n3\n8\n9\n\n",
  "Note": "NoteThe first example is shown in the picture.In the second example the final array is [1,\u200912,\u20092,\u20098,\u20093,\u200911,\u20094,\u20099,\u20095,\u200913,\u20096,\u200910,\u20097].",
  "Input Description": "The first line contains two integers n and q (1\u2009\u2264\u2009n\u2009\u2264\u20091018, 1\u2009\u2264\u2009q\u2009\u2264\u2009200\u2009000), the number of elements in the array and the number of queries for which it is needed to find the answer.Next q lines contain integers xi (1\u2009\u2264\u2009xi\u2009\u2264\u2009n), the indices of cells for which it is necessary to output their content after Dima's algorithm finishes.",
  "Output Description": "For each of q queries output one integer number, the value that will appear in the corresponding array cell after Dima's algorithm finishes.",
  "Time Limit": "2 seconds",
  "Description": "Dima is a beginner programmer. During his working process, he regularly has to repeat the following operation again and again: to remove every second element from the array. One day he has been bored with easy solutions of this problem, and he has come up with the following extravagant algorithm.Let's consider that initially array contains n numbers from 1 to n and the number i is located in the cell with the index 2i\u2009-\u20091 (Indices are numbered starting from one) and other cells of the array are empty. Each step Dima selects a non-empty array cell with the maximum index and moves the number written in it to the nearest empty cell to the left of the selected one. The process continues until all n numbers will appear in the first n cells of the array. For example if n\u2009=\u20094, the array is changing as follows:  You have to write a program that allows you to determine what number will be in the cell with index x (1\u2009\u2264\u2009x\u2009\u2264\u2009n) after Dima's algorithm finishes.",
  "Title": "B. A Leapfrog in the Array",
  "Memory Limit": "512 megabytes"
}{
  "Example": "Input\nCopy\n3 3 5\n4 4 0\n1 3\n3 2\n3 1\nOutput\nCopy\n1\n3 \n\nInput\nCopy\n4 5 4\n2 1 0 3\n4 3\n3 2\n1 2\n1 4\n1 3\nOutput\nCopy\n4\n1 2 3 4 \n\n",
  "Note": "NoteConsider the first sample test. The given answer is the only way to conduct an experiment involving the only data center. In such a scenario the third data center has a maintenance during the hour 1, and no two data centers storing the information of the same client have maintenance at the same hour.On the other hand, for example, if we shift the maintenance time on hour later for the first data center, then the data of clients 1 and 3 will be unavailable during the hour 0.",
  "Input Description": "The first line of input contains three integers n, m and h (2\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000, 1\u2009\u2264\u2009m\u2009\u2264\u2009100\u2009000, 2\u2009\u2264\u2009h\u2009\u2264\u2009100\u2009000), the number of company data centers, number of clients and the day length of day measured in hours. The second line of input contains n integers u1,\u2009u2,\u2009...,\u2009un (0\u2009\u2264\u2009uj\u2009<\u2009h), j-th of these numbers is an index of a maintenance hour for data center j. Each of the next m lines contains two integers ci,\u20091 and ci,\u20092 (1\u2009\u2264\u2009ci,\u20091,\u2009ci,\u20092\u2009\u2264\u2009n, ci,\u20091\u2009\u2260\u2009ci,\u20092), defining the data center indices containing the data of client i.It is guaranteed that the given maintenance schedule allows each client to access at least one copy of his data at any moment of day.",
  "Output Description": "In the first line print the minimum possible number of data centers k (1\u2009\u2264\u2009k\u2009\u2264\u2009n) that have to be included in an experiment in order to keep the data available for any client.In the second line print k distinct integers x1,\u2009x2,\u2009...,\u2009xk (1\u2009\u2264\u2009xi\u2009\u2264\u2009n), the indices of data centers whose maintenance time will be shifted by one hour later. Data center indices may be printed in any order.If there are several possible answers, it is allowed to print any of them. It is guaranteed that at there is at least one valid choice of data centers.",
  "Time Limit": "1 second",
  "Description": "BigData Inc. is a corporation that has n data centers indexed from 1 to n that are located all over the world. These data centers provide storage for client data (you can figure out that client data is really big!).Main feature of services offered by BigData Inc. is the access availability guarantee even under the circumstances of any data center having an outage. Such a guarantee is ensured by using the two-way replication. Two-way replication is such an approach for data storage that any piece of data is represented by two identical copies that are stored in two different data centers.For each of m company clients, let us denote indices of two different data centers storing this client data as ci,\u20091 and ci,\u20092.In order to keep data centers operational and safe, the software running on data center computers is being updated regularly. Release cycle of BigData Inc. is one day meaning that the new version of software is being deployed to the data center computers each day.Data center software update is a non-trivial long process, that is why there is a special hour-long time frame that is dedicated for data center maintenance. During the maintenance period, data center computers are installing software updates, and thus they may be unavailable. Consider the day to be exactly h hours long. For each data center there is an integer uj (0\u2009\u2264\u2009uj\u2009\u2264\u2009h\u2009-\u20091) defining the index of an hour of day, such that during this hour data center j is unavailable due to maintenance.Summing up everything above, the condition uci,\u20091\u2009\u2260\u2009uci,\u20092 should hold for each client, or otherwise his data may be unaccessible while data centers that store it are under maintenance.Due to occasional timezone change in different cities all over the world, the maintenance time in some of the data centers may change by one hour sometimes. Company should be prepared for such situation, that is why they decided to conduct an experiment, choosing some non-empty subset of data centers, and shifting the maintenance time for them by an hour later (i.e. if uj\u2009=\u2009h\u2009-\u20091, then the new maintenance hour would become 0, otherwise it would become uj\u2009+\u20091). Nonetheless, such an experiment should not break the accessibility guarantees, meaning that data of any client should be still available during any hour of a day after the data center maintenance times are changed.Such an experiment would provide useful insights, but changing update time is quite an expensive procedure, that is why the company asked you to find out the minimum number of data centers that have to be included in an experiment in order to keep the data accessibility guarantees.",
  "Title": "C. Data Center Maintenance",
  "Memory Limit": "512 megabytes"
}{
  "Example": "Input\nCopy\n5 1 1\n1 0 0 0 4\nOutput\nCopy\n1\n\nInput\nCopy\n6 1 2\n3 8 0 1 0 0\nOutput\nCopy\n2\n\n",
  "Note": "NoteIn the first sample the first three rooms are processed by the first instructor, and the last two are processed by the second instructor. One of the optimal strategies is the following: firstly three students run from room 5 to room 4, on the next stage two of them run to room 3, and one of those two hides under a bed. This way, the first instructor writes down room 2, and the second writes down nothing.In the second sample one of the optimal strategies is the following: firstly all students in room 1 hide, all students from room 2 run to room 3. On the next stage one student runs from room 3 to room 4, and 5 students hide. This way, the first instructor writes down rooms 1 and 2, the second instructor writes down rooms 5 and 6.",
  "Input Description": "The first line contains three integers n, d and b (2\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000, 1\u2009\u2264\u2009d\u2009\u2264\u2009n\u2009-\u20091, 1\u2009\u2264\u2009b\u2009\u2264\u200910\u2009000), number of rooms in the house, running distance of a student, official number of students in a room.The second line contains n integers a1,\u2009a2,\u2009...,\u2009an (0\u2009\u2264\u2009ai\u2009\u2264\u2009109), i-th of which stands for the number of students in the i-th room before curfew announcement.It is guaranteed that a1\u2009+\u2009a2\u2009+\u2009...\u2009+\u2009an\u2009=\u2009nb.",
  "Output Description": "Output one integer, the minimal possible value of the maximum of xi.",
  "Time Limit": "2 seconds",
  "Description": "Instructors of Some Informatics School make students go to bed.The house contains n rooms, in each room exactly b students were supposed to sleep. However, at the time of curfew it happened that many students are not located in their assigned rooms. The rooms are arranged in a row and numbered from 1 to n. Initially, in i-th room there are ai students. All students are currently somewhere in the house, therefore a1\u2009+\u2009a2\u2009+\u2009...\u2009+\u2009an\u2009=\u2009nb. Also 2 instructors live in this house.The process of curfew enforcement is the following. One instructor starts near room 1 and moves toward room n, while the second instructor starts near room n and moves toward room 1. After processing current room, each instructor moves on to the next one. Both instructors enter rooms and move simultaneously, if n is odd, then only the first instructor processes the middle room. When all rooms are processed, the process ends.When an instructor processes a room, she counts the number of students in the room, then turns off the light, and locks the room. Also, if the number of students inside the processed room is not equal to b, the instructor writes down the number of this room into her notebook (and turns off the light, and locks the room). Instructors are in a hurry (to prepare the study plan for the next day), so they don't care about who is in the room, but only about the number of students.While instructors are inside the rooms, students can run between rooms that are not locked and not being processed. A student can run by at most d rooms, that is she can move to a room with number that differs my at most d. Also, after (or instead of) running each student can hide under a bed in a room she is in. In this case the instructor will not count her during the processing. In each room any number of students can hide simultaneously.Formally, here is what's happening:  A curfew is announced, at this point in room i there are ai students.  Each student can run to another room but not further than d rooms away from her initial room, or stay in place. After that each student can optionally hide under a bed.  Instructors enter room 1 and room n, they count students there and lock the room (after it no one can enter or leave this room).  Each student from rooms with numbers from 2 to n\u2009-\u20091 can run to another room but not further than d rooms away from her current room, or stay in place. Each student can optionally hide under a bed.  Instructors move from room 1 to room 2 and from room n to room n\u2009-\u20091.  This process continues until all rooms are processed. Let x1 denote the number of rooms in which the first instructor counted the number of non-hidden students different from b, and x2 be the same number for the second instructor. Students know that the principal will only listen to one complaint, therefore they want to minimize the maximum of numbers xi. Help them find this value if they use the optimal strategy.",
  "Title": "D. Curfew",
  "Memory Limit": "512 megabytes"
}{
  "Example": "Input\nCopy\n1\n9\nOutput\nCopy\n2\n1 8\n\nInput\nCopy\n5\n-1 3 0 4 7\nOutput\nCopy\n3\n4 -1 4\n\nInput\nCopy\n4\n2 -2 14 18\nOutput\nCopy\n3\n-2 2 16\n\n",
  "Note": "NoteIn the first sample there is the only round in the game, in which you may simply draw both your cards. Note that this sample test is the only one satisfying the first test group constraints.In the second sample you may draw the only card \u2009-\u20091 in the first round, cards 4 and \u2009-\u20091 in the second round, nothing in the third round, the only card 4 in the fourth round and the whole deck in the fifth round.",
  "Input Description": "The first line of input contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000), the number of rounds in the game.The second line of input contains n integers a1,\u2009a2,\u2009...,\u2009an (\u2009-\u2009100\u2009000\u2009\u2264\u2009ai\u2009\u2264\u2009100\u2009000), the numbers that jury is going to tell in each round.",
  "Output Description": "In the first line print the integer k (0\u2009\u2264\u2009k\u2009\u2264\u2009100\u2009000), the minimum number of cards you have to pick in your deck in ordered to win the \"Binary Cards\".In the second line print k integers b1,\u2009b2,\u2009...,\u2009bk (\u2009-\u2009220\u2009\u2264\u2009bi\u2009\u2264\u2009220, |bi| is a power of two), the ranks of the cards in your deck. You may output ranks in any order. If there are several optimum decks, you are allowed to print any of them.It is guaranteed that there exists a deck of minimum size satisfying all the requirements above.",
  "Time Limit": "1 second",
  "Description": "It is never too late to play the fancy \"Binary Cards\" game!There is an infinite amount of cards of positive and negative ranks that are used in the game. The absolute value of any card rank is a power of two, i.e. each card has a rank of either 2k or \u2009-\u20092k for some integer k\u2009\u2265\u20090. There is an infinite amount of cards of any valid rank.At the beginning of the game player forms his deck that is some multiset (possibly empty) of cards. It is allowed to pick any number of cards of any rank but the small deck is considered to be a skill indicator. Game consists of n rounds. In the i-th round jury tells the player an integer ai. After that the player is obligated to draw such a subset of his deck that the sum of ranks of the chosen cards is equal to ai (it is allowed to not draw any cards, in which case the sum is considered to be equal to zero). If player fails to do so, he loses and the game is over. Otherwise, player takes back all of his cards into his deck and the game proceeds to the next round. Player is considered a winner if he is able to draw the suitable set of cards in each of the rounds.Somebody told you which numbers ai the jury is going to tell you in each round. Now you want to pick a deck consisting of the minimum number of cards that allows you to win the \"Binary Cards\" game.",
  "Title": "E. Binary Cards",
  "Memory Limit": "512 megabytes"
}{
  "Example": "Input\nCopy\n2\n1 1\n1 3\n3 1\n3 3\nOutput\nCopy\nYes\n2 2\n\nInput\nCopy\n3\n4 2\n6 2\n2 1\n2 6\n4 4\n6 6\nOutput\nCopy\nYes\n2 2\n\nInput\nCopy\n2\n1 1\n2 2\n4 4\n5 5\nOutput\nCopy\nNo\n\nInput\nCopy\n2\n1 1\n2 1\n1 2\n2 2\nOutput\nCopy\nNo\n\nInput\nCopy\n2\n0 0\n1 1\n-1 -1\n-1 1\nOutput\nCopy\nNo\n\n",
  "Note": "NotePictures for the sample tests are given below.In the fourth sample test the Moon center could not have possibly been in a point (1.5,\u20091.5) since the coordinates of this point are non-integer.In the fifth sample test there are no suitable points that do not coincide with a center of some star.",
  "Input Description": "In the first line of input there is an integer n (2\u2009\u2264\u2009n\u2009\u2264\u20092600), the number of star pairs seen by an astronomer in the sky.In the following 2n lines there are pairs of integers xi, yi (\u2009-\u2009106\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u2009106), the coordinates of star centers in the sky map. Note that the stars are listed in an arbitrary order that has nothing common with the distribution of stars into pairs as found out by Philon the Berlander. Centers of no two stars coincide.",
  "Output Description": "If astronomer was wrong and there is no way to distribute all points in pairs in such manner that all lines passing through these point pairs are distinct lines intersecting in a single point with integer coordinates, and this intersection point is different from centers of all stars, then print \"No\" (without the quotes) in the only line of input.Otherwise print \"Yes\" (without the quotes). In the second line print pair of integers x, y (|x|,\u2009|y|\u2009\u2264\u2009106), the coordinates of a point that contains a center of the Moon in your solution. If there are several possible answers, output any of them. Note that the printed point should be different from all the star centers.",
  "Time Limit": "5 seconds",
  "Description": "Year 18 AD. Famous astronomer Philon the Berlander publishes a book \"About Sky and Cosmos\u00bb, in which he describes an incredible picture seen by him on a night sky while observing the skies. He once seen 2n stars on a clear sky and the Moon. Surprisingly, it was possible to divide all stars in pairs in such way that any line passing through the centers of two paired stars also passed through the center of the Moon, also all such lines were distinct. Philon carefully represented such a situation on a sky map, introducing a coordinate system. While doing that, he noticed that centers of all stars and the center of the Moon are points with integer coordinates. As Philon thought that the Earth and the Moon were flat, his coordinate system was two-dimensional. Coordinate system was chosen by an astronomer in such way that the coordinates of all objects (including the Moon) are no more than 106 by the absolute value. Moreover, no two objects (two stars or a star and a Moon) were not located at the same point.Apart from the sky map Philon wrote a prediction that in 2000 years stars will take exactly the same places, but the Moon will be replaced by a huge comet which will destroy the Earth.It is 2018 AD now. You got a book of Philon the Berlander and you were horrified to discover that the stars on the sky are in exactly the same position as they were 2000 years ago! Unfortunately, some parts of a sky map were lost, so there are only star locations that are visible on it and there are no details about how the stars were divided in pairs. Moreover,, there is no point corresponding to the center of the Moon on this map. In order to find out the possible location of a comet and save the humanity from the terrible end, you should immediately find out some suitable location for the center of the Moon!",
  "Title": "F. Astronomy",
  "Memory Limit": "512 megabytes"
}{
  "Example": "Input\nCopy\n1 4 2\nOutput\nCopy\n6\n\nInput\nCopy\n5 5 5\nOutput\nCopy\n14\n\nInput\nCopy\n0 2 0\nOutput\nCopy\n0\n\n",
  "Note": "NoteIn the first example you can form a team of 6 players. You should take the only left-hander and two ambidexters to play with left hand, and three right-handers to play with right hand. The only person left can't be taken into the team.In the second example you can form a team of 14 people. You have to take all five left-handers, all five right-handers, two ambidexters to play with left hand and two ambidexters to play with right hand.",
  "Input Description": "The only line contains three integers l, r and a (0\u2009\u2264\u2009l,\u2009r,\u2009a\u2009\u2264\u2009100) \u2014 the number of left-handers, the number of right-handers and the number of ambidexters at the training. ",
  "Output Description": "Print a single even integer\u00a0\u2014 the maximum number of players in the team. It is possible that the team can only have zero number of players.",
  "Time Limit": "1 second",
  "Description": "You are at a water bowling training. There are l people who play with their left hand, r people, who play with their right hand, and a ambidexters, who can play with left or right hand.The coach decided to form a team of even number of players, exactly half of the players should play with their right hand, and exactly half of the players should play with their left hand. One player should use only on of his hands.Ambidexters play as well with their right hand as with their left hand. In the team, an ambidexter can play with their left hand, or with their right hand.Please find the maximum possible size of the team, where equal number of players use their left and right hands, respectively.",
  "Title": "A. Left-handers, Right-handers and Ambidexters",
  "Memory Limit": "256 megabytes"
}{
  "Example": "Input\nCopy\n7 6\n2 5 3 1 11 4 4\n7 8 2 4 1 8\nOutput\nCopy\n3\n\nInput\nCopy\n3 3\n1 10 100\n1 100 10\nOutput\nCopy\n2\n\nInput\nCopy\n1 4\n4\n1 1 1 1\nOutput\nCopy\n1\n\n",
  "Note": "NoteIn the first example the maximum number of files in the archive is 3. For example, it is possible that in the archive are three files of sizes 2\u2009+\u20095\u2009=\u20097, 15\u2009=\u20093\u2009+\u20091\u2009+\u200911\u2009=\u20098\u2009+\u20092\u2009+\u20094\u2009+\u20091 and 4\u2009+\u20094\u2009=\u20098.In the second example it is possible that the archive contains two files of sizes 1 and 110\u2009=\u200910\u2009+\u2009100\u2009=\u2009100\u2009+\u200910. Note that the order of files is kept while transferring archives through the network, so we can't say that there are three files of sizes 1, 10 and 100.In the third example the only possibility is that the archive contains a single file of size 4.",
  "Input Description": "The first line contains two integers n, m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009105) \u2014 the number of blocks in the first and in the second messages.The second line contains n integers x1,\u2009x2,\u2009...,\u2009xn (1\u2009\u2264\u2009xi\u2009\u2264\u2009106) \u2014 the length of the blocks that form the first message.The third line contains m integers y1,\u2009y2,\u2009...,\u2009ym (1\u2009\u2264\u2009yi\u2009\u2264\u2009106) \u2014 the length of the blocks that form the second message.It is guaranteed that x1\u2009+\u2009...\u2009+\u2009xn\u2009=\u2009y1\u2009+\u2009...\u2009+\u2009ym. Also, it is guaranteed that x1\u2009+\u2009...\u2009+\u2009xn\u2009\u2264\u2009106.",
  "Output Description": "Print the maximum number of files the intercepted array could consist of.",
  "Time Limit": "1 second",
  "Description": "Hacker Zhorik wants to decipher two secret messages he intercepted yesterday. Yeah message is a sequence of encrypted blocks, each of them consists of several bytes of information.Zhorik knows that each of the messages is an archive containing one or more files. Zhorik knows how each of these archives was transferred through the network: if an archive consists of k files of sizes l1,\u2009l2,\u2009...,\u2009lk bytes, then the i-th file is split to one or more blocks bi,\u20091,\u2009bi,\u20092,\u2009...,\u2009bi,\u2009mi (here the total length of the blocks bi,\u20091\u2009+\u2009bi,\u20092\u2009+\u2009...\u2009+\u2009bi,\u2009mi is equal to the length of the file li), and after that all blocks are transferred through the network, maintaining the order of files in the archive.Zhorik thinks that the two messages contain the same archive, because their total lengths are equal. However, each file can be split in blocks in different ways in the two messages.You are given the lengths of blocks in each of the two messages. Help Zhorik to determine what is the maximum number of files could be in the archive, if the Zhorik's assumption is correct.",
  "Title": "B. Intercepted Message",
  "Memory Limit": "512 megabytes"
}{
  "Example": "Input\nCopy\n13\nOutput\nCopy\n1\n\nInput\nCopy\n927\nOutput\nCopy\n1\n\nInput\nCopy\n48\nOutput\nCopy\n0\n\n",
  "Note": "",
  "Input Description": "The input contains a single integer a (10\u2009\u2264\u2009a\u2009\u2264\u2009999).",
  "Output Description": "Output 0 or 1.",
  "Time Limit": "2 seconds",
  "Description": "",
  "Title": "A. Quirky Quantifiers",
  "Memory Limit": "64 megabytes"
}